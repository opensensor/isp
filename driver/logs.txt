[   14.019988] codec_codec_ctl: set sample rate...
[   14.020074] codec_codec_ctl: set device...
[   14.259188] codec_set_device: set device: speaker...
[   69.266745] *** tx_isp_init: EXACT Binary Ninja MCP reference implementation ***
[   69.267085] *** PROBE: tx_isp_platform_probe CALLED for device tx-isp ***
[   69.267103] *** PROBE: ISP device allocated successfully: 85fb0000 ***
[   69.267120] *** PROBE: ISP core registers mapped at 0x13300000 for system_reg_write ***
[   69.267125] *** PROBE: ISP device mutex and spinlock initialized ***
[   69.267132] *** PROBE: Event callback structure initialized at 0x8586f800 (offset 0xc from isp_dev) ***
[   69.267143] parse_rmem_bootarg: Found rmem=29M@0x06300000 (size=0x01d00000)
[   69.267150] *** PROBE: Initialized rmem_addr=0x06300000, size=0x01d00000 ***
[   69.267156] *** PROBE: Platform data: c06af6c0 ***
[   69.267161] *** PROBE: Platform data validation passed ***
[   69.267167] *** REFERENCE DRIVER: Individual subdevices will initialize their own memory regions ***
[   69.267173] *** PLATFORM DEVICES ALREADY REGISTERED IN INIT - SKIPPING DUPLICATE REGISTRATION ***
[   69.267178] *** tx_isp_module_init: EXACT Binary Ninja reference implementation ***
[   69.267183] *** tx_isp_module_init: Registering subdev platform drivers FIRST ***
[   69.267189] *** TX ISP SUBDEV PLATFORM DRIVERS REGISTRATION ***
[   69.285531] All ISP subdev platform drivers registered successfully
[   69.290183] *** tx_isp_create_graph_and_nodes: EXACT Binary Ninja reference implementation ***
[   69.290197] *** Registering platform device 0 from platform data ***
[   69.297905] *** tx_isp_subdev_init: CALLED for device 'isp-w00' ***
[   69.297921] *** tx_isp_subdev_init: pdev=c06af3a0, sd=85219400, ops=c06af9c0 ***
[   69.297927] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.297934] *** tx_isp_subdev_init: ops=c06af9c0, ops->core=c06af9f4 ***
[   69.297940] *** tx_isp_subdev_init: ops->core->init=c06650e8 ***
[   69.297947] *** tx_isp_subdev_init: Set sd->dev=c06af3b0, sd->pdev=c06af3a0 ***
[   69.297953] *** tx_isp_subdev_init: CSI subdev registered at slot 0 ***
[   69.297959] tx_isp_module_init: Module initialized for isp-w00
[   69.297965] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.297971] *** isp-w00: Skipping IRQ request - device has no IRQ resource ***
[   69.297979] tx_isp_subdev_init: platform_get_resource returned c06af498 for device isp-w00
[   69.297987] tx_isp_subdev_init: Memory resource found: start=0x10022000, end=0x10022fff, size=0x00001000
[   69.297995] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   69.298001] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   69.298009] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06af3a0, sd=85219400, ourISPdev=85fb0000 ***
[   69.298017] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w00' to ourISPdev=85fb0000 ***
[   69.298023] *** DEBUG: Device name comparison - checking 'isp-w00' ***
[   69.298027] *** DEBUG: About to check device name matches ***
[   69.298034] *** CSI BASIC REGISTERS SET: b0022000 (from tx_isp_subdev_init) ***
[   69.298041] *** LINKED CSI device: 85219400, regs: b0022000 ***
[   69.298047] *** CSI PROBE: Set dev_priv to csi_dev 85219400 AFTER subdev_init ***
[   69.298053] *** CSI PROBE: Set host_priv to csi_dev 85219400 AFTER subdev_init ***
[   69.298059] *** CSI PROBE: Using register mapping from tx_isp_subdev_init: b0022000 ***
[   69.298066] *** CSI PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   69.298086] *** Platform device 0 (isp-w00) registered successfully ***
[   69.298093] *** Registering platform device 1 from platform data ***
[   69.300742] *** VIC PROBE: IRQ numbers initialized to 38 ***
[   69.300756] *** VIC PROBE: Primary VIC registers mapped at 0x133e0000 -> b33e0000 ***
[   69.300763] *** VIC PROBE: VIC control registers mapped at 0x10023000 -> b0023000 ***
[   69.300769] *** VIC PROBE: Hardware IRQ function pointers set using SAFE struct members (tx_isp_enable/disable_irq) ***
[   69.300775] *** VIC PROBE: Secondary VIC register test - 0x1e0 = 0x00000000 (mapping verified) ***
[   69.300781] *** VIC PROBE: VIC interrupt registers will be configured during tx_isp_vic_start ***
[   69.300787] *** BINARY NINJA MCP: VIC buffer management ENABLED - following reference driver ***
[   69.300793] *** VIC will operate in FULL mode with complete buffer operations ***
[   69.300798] *** BINARY NINJA MCP: VIC full initialization complete - buffer management ENABLED ***
[   69.300805] *** VIC PROBE: Initialized default dimensions 1920x1080 and critical fields ***
[   69.300811] *** VIC PROBE: Event callback structure stored in VIC device field ***
[   69.300817] *** VIC PROBE: Stored vic_dev pointer 85fc0000 in subdev dev_priv ***
[   69.300824] *** VIC PROBE: Set host_priv to vic_dev 85fc0000 for Binary Ninja compatibility ***
[   69.300829] *** VIC PROBE: Skipping tx_isp_vic_hw_init - working branch configures interrupts during VIC operations ***
[   69.300837] *** tx_isp_subdev_init: CALLED for device 'isp-w02' ***
[   69.300845] *** tx_isp_subdev_init: pdev=c06af4b8, sd=85fc0000, ops=c06af940 ***
[   69.300851] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.300858] *** tx_isp_subdev_init: ops=c06af940, ops->core=c06af95c ***
[   69.300864] *** tx_isp_subdev_init: ops->core->init=c067a8d4 ***
[   69.300871] *** tx_isp_subdev_init: Set sd->dev=c06af4c8, sd->pdev=c06af4b8 ***
[   69.300877] *** tx_isp_subdev_init: VIC device linked and registered at slot 1 ***
[   69.300883] tx_isp_module_init: Module initialized for isp-w02
[   69.300889] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.300898] *** tx_isp_request_irq: platform_get_irq returned 38 for device isp-w02 ***
[   69.300905] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 38 (device: isp-w02) ***
[   69.300915] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c066d790, thread=c0660584, flags=0x80, name=isp-w02, dev_id=85fb0000) ***
[   69.300923] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c066d790, thread=c0660584 ***
[   69.303187] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   69.303199] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[   69.303205] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[   69.303214] tx_isp_subdev_init: platform_get_resource returned c06af5b0 for device isp-w02
[   69.303222] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[   69.303231] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   69.303237] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   69.303245] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06af4b8, sd=85fc0000, ourISPdev=85fb0000 ***
[   69.303253] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=85fb0000 ***
[   69.303259] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   69.303264] *** DEBUG: About to check device name matches ***
[   69.303270] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   69.303276] *** DEBUG: Retrieved vic_dev from subdev data: 85fc0000 ***
[   69.303282] *** DEBUG: About to set ourISPdev->vic_dev = 85fc0000 ***
[   69.303288] *** DEBUG: ourISPdev before linking: 85fb0000 ***
[   69.303293] *** DEBUG: ourISPdev->vic_dev set to: 85fc0000 ***
[   69.303299] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   69.303305] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   69.303311] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   69.303319] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   69.303324] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   69.303330] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   69.303335] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   69.303358] *** Platform device 1 (isp-w02) registered successfully ***
[   69.303364] *** Registering platform device 2 from platform data ***
[   69.306855] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[   69.306871] *** tx_isp_subdev_init: pdev=c06af2c8, sd=84cdf000, ops=c06b0824 ***
[   69.306877] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.306885] *** tx_isp_subdev_init: ops=c06b0824, ops->core=c06b0844 ***
[   69.306891] *** tx_isp_subdev_init: ops->core->init=c06870a0 ***
[   69.306897] *** tx_isp_subdev_init: Set sd->dev=c06af2d8, sd->pdev=c06af2c8 ***
[   69.306904] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b0824 ***
[   69.306911] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06af9c0 ***
[   69.306917] tx_isp_module_init: Module initialized for isp-w01
[   69.306923] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.306931] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06af2c8, sd=84cdf000, ourISPdev=85fb0000 ***
[   69.306938] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=85fb0000 ***
[   69.306944] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[   69.306949] *** DEBUG: About to check device name matches ***
[   69.306955] *** DEBUG: VIN device name matched! Setting up VIN device ***
[   69.306961] *** LINKED VIN device: 84cdf000 ***
[   69.306968] *** VIN SUBDEV OPS CONFIGURED: core=c06b0844, video=c06b0838, s_stream=c0687298 ***
[   69.306975] *** REGISTERED VIN SUBDEV AT SLOT 2 WITH VIDEO OPS ***
[   69.306981] *** VIN PROBE: Set dev_priv to vin_dev 84cdf000 AFTER subdev_init ***
[   69.306987] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   69.307007] *** Platform device 2 (isp-w01) registered successfully ***
[   69.307013] *** Registering platform device 3 from platform data ***
[   69.309513] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   69.309529] *** tx_isp_subdev_init: pdev=c06af188, sd=85f3a000, ops=c06afa74 ***
[   69.309536] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.309543] *** tx_isp_subdev_init: ops=c06afa74, ops->core=c06b68fc ***
[   69.309548] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   69.309555] *** tx_isp_subdev_init: Set sd->dev=c06af198, sd->pdev=c06af188 ***
[   69.309561] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06afa74 ***
[   69.309569] *** tx_isp_subdev_init: ops->sensor=c06b68f0, csi_subdev_ops=c06af9c0 ***
[   69.309575] tx_isp_module_init: Module initialized for isp-fs
[   69.309580] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.309587] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   69.309594] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   69.309600] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   69.309607] *** FS PROBE: Set dev_priv to fs_dev 85f3a000 AFTER subdev_init ***
[   69.309613] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   69.309634] *** Platform device 3 (isp-fs) registered successfully ***
[   69.309641] *** Registering platform device 4 from platform data ***
[   69.312380] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   69.312394] *** tx_isp_create_core_device: Creating ISP core device ***
[   69.312404] *** tx_isp_create_core_device: Core device created successfully: 85fc0400 ***
[   69.312411] *** CORE PROBE: Set dev_priv to core_dev 85fc0400 ***
[   69.312417] *** CORE PROBE: Set host_priv to core_dev 85fc0400 - PREVENTS BadVA CRASH ***
[   69.312424] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   69.312431] *** tx_isp_subdev_init: pdev=c06af050, sd=85fc0400, ops=c06af778 ***
[   69.312437] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.312445] *** tx_isp_subdev_init: ops=c06af778, ops->core=c06af7a4 ***
[   69.312450] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   69.312457] *** tx_isp_subdev_init: Set sd->dev=c06af060, sd->pdev=c06af050 ***
[   69.312463] *** tx_isp_subdev_init: Core ISP subdev registered at slot 3 ***
[   69.312470] tx_isp_module_init: Module initialized for isp-m0
[   69.312475] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.312484] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   69.312491] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   69.312500] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c066d790, thread=c0660584, flags=0x80, name=isp-m0, dev_id=85fb0000) ***
[   69.312509] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c066d790, thread=c0660584 ***
[   69.317033] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   69.317045] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   69.317051] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   69.317061] tx_isp_subdev_init: platform_get_resource returned c06af150 for device isp-m0
[   69.317069] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   69.317079] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   69.317085] *** tx_isp_subdev_init: Clock count stored: 3 ***
[   69.317093] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06af050, sd=85fc0400, ourISPdev=85fb0000 ***
[   69.317100] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=85fb0000 ***
[   69.317106] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   69.317111] *** DEBUG: About to check device name matches ***
[   69.317117] *** DEBUG: CORE device name matched! Setting up Core device ***
[   69.317124] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   69.317131] *** tx_isp_link_core_device: Linking core device 85fc0400 to ISP device 85fb0000 ***
[   69.317137] *** tx_isp_link_core_device: Core device linked successfully ***
[   69.317144] *** Core subdev already registered at slot 3: 85fc0400 ***
[   69.317150] *** LINKED CORE device: 85fc0400 ***
[   69.317155] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   69.317161] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   69.317167] *** tx_isp_core_device_init: Initializing core device: 85fc0400 ***
[   69.317179] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   69.317185] *** tx_isp_core_device_init: Core device initialized successfully ***
[   69.317191] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   69.317198] *** tx_isp_link_core_device: Linking core device 85fc0400 to ISP device 85fb0000 ***
[   69.317204] *** tx_isp_link_core_device: Core device linked successfully ***
[   69.317210] *** Core subdev already registered at slot 3: 85fc0400 ***
[   69.317224] *** tx_isp_core_probe: Assigned frame_channels=85fc0800 to core_dev ***
[   69.317230] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   69.317236] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   69.317241] *** tx_isp_core_probe: Calling sensor_early_init ***
[   69.317247] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   69.317253] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   69.317258] *** tx_isp_core_probe: Core device setup complete ***
[   69.317264] ***   - Core device: 85fc0400 ***
[   69.317269] ***   - Channel count: 6 ***
[   69.317275] ***   - Linked to ISP device: 85fb0000 ***
[   69.317280] *** tx_isp_core_probe: Initializing core tuning system ***
[   69.317286] isp_core_tuning_init: Initializing tuning data structure
[   69.317301] isp_core_tuning_init: Tuning data structure initialized at 84bf6000
[   69.317307] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   69.317312] *** SAFE: mode_flag properly initialized using struct member access ***
[   69.317317] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   69.317323] *** tx_isp_core_probe: Set platform driver data ***
[   69.317328] *** tx_isp_core_probe: Set global core device reference ***
[   69.317333] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   69.317339] ***   - Core device: 85fc0400 ***
[   69.317345] ***   - Tuning device: 84bf6000 ***
[   69.317350] *** tx_isp_core_probe: Creating frame channel devices ***
[   69.317355] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   69.317716] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   69.324880] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   69.326853] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   69.330751] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   69.330762] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   69.330767] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   69.330773] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   69.330779] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   69.330788] tisp_code_create_tuning_node: Allocated dynamic major 251
[   69.339497] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   69.339508] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   69.339513] *** tx_isp_core_probe: Core probe completed successfully ***
[   69.339534] *** Platform device 4 (isp-m0) registered successfully ***
[   69.339540] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   69.339563] *** Created /proc/jz/isp directory ***
[   69.339571] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   69.339581] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   69.339587] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   69.339594] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c067caa0 ***
[   69.339602] *** PROC ENTRY FIX: Using ISP device 85fb0000 instead of VIC device 85fc0000 for isp-w02 ***
[   69.339610] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   69.339617] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   69.339626] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   69.339642] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   69.339651] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   69.339657] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   69.339663] *** Misc device registration handled via main tx-isp device ***
[   69.339668] *** Misc device registration handled via main tx-isp device ***
[   69.339673] *** Misc device registration handled via main tx-isp device ***
[   69.339679] *** Misc device registration handled via main tx-isp device ***
[   69.339684] *** Misc device registration handled via main tx-isp device ***
[   69.339690] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   69.339699] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   69.339706] *** Frame channel 1 initialized: 640x360, state=2 ***
[   69.339712] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   69.339719] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 85fc0000 ***
[   69.339724] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   69.339729] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   69.339737] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   69.339743] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   69.339749] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   69.339755] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   69.339760] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   69.339765] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   69.339771] *** PROBE: Binary Ninja reference implementation complete ***
[   69.343165] *** tx_isp_init: Platform device and driver registered successfully ***
[   70.214766] === gc2053 SENSOR MODULE INIT ===
[   70.217353] gc2053 I2C driver registered, waiting for device creation by ISP
root@ing-wyze-cam3-a000 ~# prudynt &
root@ing-wyze-cam3-a000 ~# [INFO:Config.cpp]: Loaded configuration from /etc/prudynt.cfg
[INFO:main.cpp]: PRUDYNT-T Next-Gen Video Daemon: Aug 28 2025 05:46:40_f5514583
[INFO:main.cpp]: Starting Prudynt Video Server.
[INFO:IMPSystem.cpp]: LIBIMP Version IMP-1.1.6
[INFO:IMPSystem.cpp]: SYSUTILS Version: SYSUTILS-1.1.6
[INFO:IMPSystem.cpp]: CPU Information: T31-X
[INFO:IMPSystem.cpp]: Sensor: gc2053
root@ing-wyze-cam3-a000 ~# dmesg 
[   69.300877] *** tx_isp_subdev_init: VIC device linked and registered at slot 1 ***
[   69.300883] tx_isp_module_init: Module initialized for isp-w02
[   69.300889] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.300898] *** tx_isp_request_irq: platform_get_irq returned 38 for device isp-w02 ***
[   69.300905] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 38 (device: isp-w02) ***
[   69.300915] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c066d790, thread=c0660584, flags=0x80, name=isp-w02, dev_id=85fb0000) ***
[   69.300923] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c066d790, thread=c0660584 ***
[   69.303187] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   69.303199] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[   69.303205] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[   69.303214] tx_isp_subdev_init: platform_get_resource returned c06af5b0 for device isp-w02
[   69.303222] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[   69.303231] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   69.303237] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   69.303245] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06af4b8, sd=85fc0000, ourISPdev=85fb0000 ***
[   69.303253] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=85fb0000 ***
[   69.303259] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   69.303264] *** DEBUG: About to check device name matches ***
[   69.303270] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   69.303276] *** DEBUG: Retrieved vic_dev from subdev data: 85fc0000 ***
[   69.303282] *** DEBUG: About to set ourISPdev->vic_dev = 85fc0000 ***
[   69.303288] *** DEBUG: ourISPdev before linking: 85fb0000 ***
[   69.303293] *** DEBUG: ourISPdev->vic_dev set to: 85fc0000 ***
[   69.303299] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   69.303305] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   69.303311] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   69.303319] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   69.303324] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   69.303330] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   69.303335] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   69.303358] *** Platform device 1 (isp-w02) registered successfully ***
[   69.303364] *** Registering platform device 2 from platform data ***
[   69.306855] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[   69.306871] *** tx_isp_subdev_init: pdev=c06af2c8, sd=84cdf000, ops=c06b0824 ***
[   69.306877] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.306885] *** tx_isp_subdev_init: ops=c06b0824, ops->core=c06b0844 ***
[   69.306891] *** tx_isp_subdev_init: ops->core->init=c06870a0 ***
[   69.306897] *** tx_isp_subdev_init: Set sd->dev=c06af2d8, sd->pdev=c06af2c8 ***
[   69.306904] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b0824 ***
[   69.306911] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06af9c0 ***
[   69.306917] tx_isp_module_init: Module initialized for isp-w01
[   69.306923] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.306931] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06af2c8, sd=84cdf000, ourISPdev=85fb0000 ***
[   69.306938] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=85fb0000 ***
[   69.306944] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[   69.306949] *** DEBUG: About to check device name matches ***
[   69.306955] *** DEBUG: VIN device name matched! Setting up VIN device ***
[   69.306961] *** LINKED VIN device: 84cdf000 ***
[   69.306968] *** VIN SUBDEV OPS CONFIGURED: core=c06b0844, video=c06b0838, s_stream=c0687298 ***
[   69.306975] *** REGISTERED VIN SUBDEV AT SLOT 2 WITH VIDEO OPS ***
[   69.306981] *** VIN PROBE: Set dev_priv to vin_dev 84cdf000 AFTER subdev_init ***
[   69.306987] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   69.307007] *** Platform device 2 (isp-w01) registered successfully ***
[   69.307013] *** Registering platform device 3 from platform data ***
[   69.309513] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   69.309529] *** tx_isp_subdev_init: pdev=c06af188, sd=85f3a000, ops=c06afa74 ***
[   69.309536] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.309543] *** tx_isp_subdev_init: ops=c06afa74, ops->core=c06b68fc ***
[   69.309548] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   69.309555] *** tx_isp_subdev_init: Set sd->dev=c06af198, sd->pdev=c06af188 ***
[   69.309561] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06afa74 ***
[   69.309569] *** tx_isp_subdev_init: ops->sensor=c06b68f0, csi_subdev_ops=c06af9c0 ***
[   69.309575] tx_isp_module_init: Module initialized for isp-fs
[   69.309580] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.309587] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   69.309594] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   69.309600] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   69.309607] *** FS PROBE: Set dev_priv to fs_dev 85f3a000 AFTER subdev_init ***
[   69.309613] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   69.309634] *** Platform device 3 (isp-fs) registered successfully ***
[   69.309641] *** Registering platform device 4 from platform data ***
[   69.312380] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   69.312394] *** tx_isp_create_core_device: Creating ISP core device ***
[   69.312404] *** tx_isp_create_core_device: Core device created successfully: 85fc0400 ***
[   69.312411] *** CORE PROBE: Set dev_priv to core_dev 85fc0400 ***
[   69.312417] *** CORE PROBE: Set host_priv to core_dev 85fc0400 - PREVENTS BadVA CRASH ***
[   69.312424] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   69.312431] *** tx_isp_subdev_init: pdev=c06af050, sd=85fc0400, ops=c06af778 ***
[   69.312437] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   69.312445] *** tx_isp_subdev_init: ops=c06af778, ops->core=c06af7a4 ***
[   69.312450] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   69.312457] *** tx_isp_subdev_init: Set sd->dev=c06af060, sd->pdev=c06af050 ***
[   69.312463] *** tx_isp_subdev_init: Core ISP subdev registered at slot 3 ***
[   69.312470] tx_isp_module_init: Module initialized for isp-m0
[   69.312475] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   69.312484] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   69.312491] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   69.312500] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c066d790, thread=c0660584, flags=0x80, name=isp-m0, dev_id=85fb0000) ***
[   69.312509] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c066d790, thread=c0660584 ***
[   69.317033] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   69.317045] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   69.317051] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   69.317061] tx_isp_subdev_init: platform_get_resource returned c06af150 for device isp-m0
[   69.317069] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   69.317079] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   69.317085] *** tx_isp_subdev_init: Clock count stored: 3 ***
[   69.317093] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06af050, sd=85fc0400, ourISPdev=85fb0000 ***
[   69.317100] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=85fb0000 ***
[   69.317106] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   69.317111] *** DEBUG: About to check device name matches ***
[   69.317117] *** DEBUG: CORE device name matched! Setting up Core device ***
[   69.317124] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   69.317131] *** tx_isp_link_core_device: Linking core device 85fc0400 to ISP device 85fb0000 ***
[   69.317137] *** tx_isp_link_core_device: Core device linked successfully ***
[   69.317144] *** Core subdev already registered at slot 3: 85fc0400 ***
[   69.317150] *** LINKED CORE device: 85fc0400 ***
[   69.317155] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   69.317161] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   69.317167] *** tx_isp_core_device_init: Initializing core device: 85fc0400 ***
[   69.317179] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   69.317185] *** tx_isp_core_device_init: Core device initialized successfully ***
[   69.317191] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   69.317198] *** tx_isp_link_core_device: Linking core device 85fc0400 to ISP device 85fb0000 ***
[   69.317204] *** tx_isp_link_core_device: Core device linked successfully ***
[   69.317210] *** Core subdev already registered at slot 3: 85fc0400 ***
[   69.317224] *** tx_isp_core_probe: Assigned frame_channels=85fc0800 to core_dev ***
[   69.317230] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   69.317236] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   69.317241] *** tx_isp_core_probe: Calling sensor_early_init ***
[   69.317247] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   69.317253] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   69.317258] *** tx_isp_core_probe: Core device setup complete ***
[   69.317264] ***   - Core device: 85fc0400 ***
[   69.317269] ***   - Channel count: 6 ***
[   69.317275] ***   - Linked to ISP device: 85fb0000 ***
[   69.317280] *** tx_isp_core_probe: Initializing core tuning system ***
[   69.317286] isp_core_tuning_init: Initializing tuning data structure
[   69.317301] isp_core_tuning_init: Tuning data structure initialized at 84bf6000
[   69.317307] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   69.317312] *** SAFE: mode_flag properly initialized using struct member access ***
[   69.317317] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   69.317323] *** tx_isp_core_probe: Set platform driver data ***
[   69.317328] *** tx_isp_core_probe: Set global core device reference ***
[   69.317333] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   69.317339] ***   - Core device: 85fc0400 ***
[   69.317345] ***   - Tuning device: 84bf6000 ***
[   69.317350] *** tx_isp_core_probe: Creating frame channel devices ***
[   69.317355] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   69.317716] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   69.324880] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   69.326853] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   69.330751] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   69.330762] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   69.330767] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   69.330773] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   69.330779] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   69.330788] tisp_code_create_tuning_node: Allocated dynamic major 251
[   69.339497] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   69.339508] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   69.339513] *** tx_isp_core_probe: Core probe completed successfully ***
[   69.339534] *** Platform device 4 (isp-m0) registered successfully ***
[   69.339540] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   69.339563] *** Created /proc/jz/isp directory ***
[   69.339571] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   69.339581] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   69.339587] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   69.339594] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c067caa0 ***
[   69.339602] *** PROC ENTRY FIX: Using ISP device 85fb0000 instead of VIC device 85fc0000 for isp-w02 ***
[   69.339610] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   69.339617] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   69.339626] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   69.339642] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   69.339651] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   69.339657] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   69.339663] *** Misc device registration handled via main tx-isp device ***
[   69.339668] *** Misc device registration handled via main tx-isp device ***
[   69.339673] *** Misc device registration handled via main tx-isp device ***
[   69.339679] *** Misc device registration handled via main tx-isp device ***
[   69.339684] *** Misc device registration handled via main tx-isp device ***
[   69.339690] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   69.339699] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   69.339706] *** Frame channel 1 initialized: 640x360, state=2 ***
[   69.339712] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   69.339719] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 85fc0000 ***
[   69.339724] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   69.339729] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   69.339737] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   69.339743] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   69.339749] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   69.339755] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   69.339760] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   69.339765] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   69.339771] *** PROBE: Binary Ninja reference implementation complete ***
[   69.343165] *** tx_isp_init: Platform device and driver registered successfully ***
[   70.214766] === gc2053 SENSOR MODULE INIT ===
[   70.217353] gc2053 I2C driver registered, waiting for device creation by ISP
[   80.513536] ISP opened successfully
[   80.513868] ISP IOCTL: cmd=0x805056c1 arg=0x77631d60
[   80.513883] subdev_sensor_ops_ioctl: cmd=0x2000000
[   80.513889] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[   80.513895] *** Creating I2C sensor device on adapter 0 ***
[   80.513903] *** Creating I2C device: gc2053 at 0x37 ***
[   80.513909] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[   80.513917] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[   80.513922] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[   80.517106] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[   80.517411] === GC2053 SENSOR PROBE START ===
[   80.517426] sensor_probe: client=8554dd00, addr=0x37, adapter=84074c10 (i2c0)
[   80.517432] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[   80.517438] Requesting reset GPIO 18
[   80.517447] GPIO reset sequence: HIGH -> LOW -> HIGH
[   80.739273] GPIO reset sequence completed successfully
[   80.739286] === GPIO INITIALIZATION COMPLETE ===
[   80.739296] sensor_probe: Initialized sensor info - name=gc2053, i2c_addr=0x37
[   80.739311] sensor_probe: data_interface=1, sensor_max_fps=30
[   80.739317] sensor_probe: MIPI 30fps
[   80.739324] *** tx_isp_subdev_init: CALLED for device 'gc2053' ***
[   80.739332] *** tx_isp_subdev_init: pdev=c06d9168, sd=85f29400, ops=c06d9248 ***
[   80.739338] *** tx_isp_subdev_init: ourISPdev=85fb0000 ***
[   80.739345] *** tx_isp_subdev_init: ops=c06d9248, ops->core=c06d9274 ***
[   80.739351] *** tx_isp_subdev_init: ops->core->init=c06d66bc ***
[   80.739358] *** tx_isp_subdev_init: Set sd->dev=c06d9178, sd->pdev=c06d9168 ***
[   80.739365] *** tx_isp_subdev_init: DETECTED SENSOR SUBDEV - ops=c06d9248, ops->sensor=c06d925c ***
[   80.739370] *** tx_isp_subdev_init: Set up sensor module notify handler ***
[   80.739378] *** tx_isp_subdev_init: SENSOR subdev registered at slot 4, sd=85f29400 ***
[   80.739384] *** tx_isp_subdev_init: SENSOR ops=c06d9248, ops->sensor=c06d925c ***
[   80.739390] *** tx_isp_subdev_init: Core state transitions handled by slake_module ***
[   80.739396] tx_isp_module_init: Module initialized for (null)
[   80.739402] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   80.739410] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06d9168, sd=85f29400, ourISPdev=85fb0000 ***
[   80.739417] *** tx_isp_subdev_auto_link: Auto-linking device 'gc2053' to ourISPdev=85fb0000 ***
[   80.739423] *** DEBUG: Device name comparison - checking 'gc2053' ***
[   80.739428] *** DEBUG: About to check device name matches ***
[   80.739435] *** DETECTED SENSOR DEVICE: 'gc2053' - checking for existing registration ***
[   80.739442] *** SENSOR 'gc2053' registered at subdev index 5 ***
[   80.739448] *** SENSOR subdev: 85f29400, ops: c06d9248 ***
[   80.739454] *** SENSOR ops->sensor: c06d925c ***
[   80.739459] *** SENSOR REGISTERED: Caching sensor dimensions from /proc/jz/sensor/ ***
[   80.739465] *** cache_sensor_dimensions_from_proc: Reading sensor dimensions during probe ***
[   80.739539] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   80.739548] *** cache_sensor_dimensions_from_proc: Successfully cached 1920x1080 ***
[   80.739554] sensor_probe: I2C client association complete
[   80.739562]   sd=85f29400, client=8554dd00, addr=0x37, adapter=i2c0
[   80.739568] === TESTING I2C COMMUNICATION AFTER GPIO RESET ===
[   80.739576] sensor_read: reg=0xf0, client=8554dd00, adapter=i2c0, addr=0x37
[   80.740073] sensor_read: reg=0xf0 value=0x20 SUCCESS
[   80.740082] I2C test read (0xf0): ret=0, val=0x20 (expected 0x20)
[   80.740087] *** SUCCESS: I2C communication working after GPIO reset! ***
[   80.740095] sensor_read: reg=0xf1, client=8554dd00, adapter=i2c0, addr=0x37
[   80.740504] sensor_read: reg=0xf1 value=0x53 SUCCESS
[   80.740515] I2C test read (0xf1): ret=0, val=0x53 (expected 0x53)
[   80.740520] === I2C COMMUNICATION TEST COMPLETE ===
[   80.740528] Registering gc2053 with ISP framework (sd=85f29400, sensor=85f29400)
[   80.740534] gc2053 registered with ISP framework successfully
[   80.740558] *** MIPS-SAFE: I2C device created successfully at 0x8554dd00 ***
[   80.740565] *** MIPS-SAFE: Module reference acquired for gc2053 ***
[   80.740571] *** MIPS-SAFE: Sensor subdev data found, device ready ***
[   80.740578] *** I2C DEVICE READY: gc2053 at 0x37 (MIPS-safe) ***
[   80.740585] *** I2C sensor device created successfully: gc2053 at 0x37 ***
[   80.740624] ISP IOCTL: cmd=0xc050561a arg=0x7f8c5688
[   80.740631] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 0
[   80.740638] TX_ISP_SENSOR_ENUM_INPUT: Returning sensor 'gc2053' at index 0
[   80.740646] ISP IOCTL: cmd=0xc050561a arg=0x7f8c5688
[   80.740652] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 1
[   80.740658] TX_ISP_SENSOR_ENUM_INPUT: No sensor at index 1 - returning error to end enumeration
[   80.740666] ISP IOCTL: cmd=0xc0045627 arg=0x7f8c56e0
[   80.740676] ISP IOCTL: cmd=0x800856d5 arg=0x7f8c56d8
[   80.740681] TX_ISP_GET_BUF: IOCTL handler called
[   80.740688] TX_ISP_GET_BUF: core_dev=85fc0400, isp_dev=85fb0000
[   80.740694] TX_ISP_GET_BUF: Using dimensions 1920x1080 from core device
[   80.740701] TX_ISP_GET_BUF: Returning buffer size=4685424, paddr=0x6300000
[   80.809436] ISP IOCTL: cmd=0x800856d4 arg=0x7f8c56d8
[   80.809450] TX_ISP_SET_BUF: addr=0x6300000 size=0
[   80.809664] ISP IOCTL: cmd=0x40045626 arg=0x7f8c56f0
[   80.809676] subdev_sensor_ops_ioctl: cmd=0x2000003
[   80.809682] subdev_sensor_ops_ioctl: IOCTL 0x2000003 - Get sensor input
[   80.809688] subdev_sensor_ops_ioctl: Auto-selected first sensor at slot 0 as index 0
[   80.809694] subdev_sensor_ops_ioctl: Returning current sensor index 0
[   80.809703] ISP IOCTL: cmd=0x80045612 arg=0x0
[   80.809710] *** tx_isp_video_s_stream: EXACT Binary Ninja reference implementation - enable=1 ***
[   80.809715] === ISP Subdevice Array Status ===
[   80.809724]   [0]: isp-w00 (sd=85219400)
[   80.809730]   [1]: isp-w02 (sd=85fc0000)
[   80.809737]   [2]: isp-w01 (sd=84cdf000)
[   80.809743]   [3]: isp-m0 (sd=85fc0400)
[   80.809750]   [4]: gc2053 (sd=85f29400)
[   80.809756]   [5]: gc2053 (sd=85f29400)
[   80.809762]   [6]: (empty)
[   80.809766]   [7]: (empty)
[   80.809772]   [8]: (empty)
[   80.809776]   [9]: (empty)
[   80.809782]   [10]: (empty)
[   80.809786]   [11]: (empty)
[   80.809792]   [12]: (empty)
[   80.809796]   [13]: (empty)
[   80.809802]   [14]: (empty)
[   80.809807]   [15]: (empty)
[   80.809812] === End Subdevice Array ===
[   80.809816] *** tx_isp_video_s_stream: STREAM ON - Initializing core first ***
[   80.809822] *** tx_isp_video_s_stream: VIC state is 1, calling activate_module ***
[   80.809828] *** ispcore_activate_module: Fixed for our struct layouts ***
[   80.809833] *** VIC device in state 1, proceeding with activation ***
[   80.809840] *** CLOCK CONFIGURATION SECTION: clk_array=  (null), clk_count=2 ***
[   80.809845] *** SUBDEVICE VALIDATION SECTION ***
[   80.809850] VIC device state set to 2 (activated)
[   80.809855] *** CRITICAL FUNCTION POINTER CALL SECTION ***
[   80.809860] *** CALLING CRITICAL VIC INITIALIZATION FUNCTION ***
[   80.809865] *** VIC control register written with 0x4000000 to ISP+0x9a00 ***
[   80.809870] *** SUBDEVICE INITIALIZATION LOOP ***
[   80.809876] *** SUBDEVICE INITIALIZATION: Traversing backwards to initialize sensors first ***
[   80.809882] Calling subdev 5 initialization (REVERSE ORDER - sensors first)
[   80.809890] *** SENSOR_INIT: gc2053 enable=1 ***
[   80.809898] SENSOR_INIT: Configuring gc2053 (chip_id=0x2053, 1920x1080)
[   80.809904] *** CALLING SENSOR_WRITE_ARRAY WITH c06d9e20 (should be 137 registers) ***
[   80.809914] sensor_write: reg=0xfe val=0x80, client=8554dd00, adapter=i2c0, addr=0x37
[   80.810238] sensor_write: reg=0xfe val=0x80 SUCCESS
[   80.810247] sensor_write_array: reg[1] 0xfe=0x80 OK
[   80.810255] sensor_write: reg=0xfe val=0x80, client=8554dd00, adapter=i2c0, addr=0x37
[   80.813420] sensor_write: reg=0xfe val=0x80 SUCCESS
[   80.813433] sensor_write_array: reg[2] 0xfe=0x80 OK
[   80.813444] sensor_write: reg=0xfe val=0x80, client=8554dd00, adapter=i2c0, addr=0x37
[   80.813762] sensor_write: reg=0xfe val=0x80 SUCCESS
[   80.813769] sensor_write_array: reg[3] 0xfe=0x80 OK
[   80.813777] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.814095] sensor_write: reg=0xfe val=0x00 SUCCESS
[   80.814102] sensor_write_array: reg[4] 0xfe=0x00 OK
[   80.814111] sensor_write: reg=0xf2 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.814422] sensor_write: reg=0xf2 val=0x00 SUCCESS
[   80.814429] sensor_write_array: reg[5] 0xf2=0x00 OK
[   80.814438] sensor_write: reg=0xf3 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.814751] sensor_write: reg=0xf3 val=0x00 SUCCESS
[   80.814758] sensor_write_array: reg[6] 0xf3=0x00 OK
[   80.814766] sensor_write: reg=0xf4 val=0x36, client=8554dd00, adapter=i2c0, addr=0x37
[   80.815080] sensor_write: reg=0xf4 val=0x36 SUCCESS
[   80.815086] sensor_write_array: reg[7] 0xf4=0x36 OK
[   80.815095] sensor_write: reg=0xf5 val=0xc0, client=8554dd00, adapter=i2c0, addr=0x37
[   80.815408] sensor_write: reg=0xf5 val=0xc0 SUCCESS
[   80.815415] sensor_write_array: reg[8] 0xf5=0xc0 OK
[   80.815423] sensor_write: reg=0xf6 val=0x44, client=8554dd00, adapter=i2c0, addr=0x37
[   80.819289] sensor_write: reg=0xf6 val=0x44 SUCCESS
[   80.819302] sensor_write_array: reg[9] 0xf6=0x44 OK
[   80.819313] sensor_write: reg=0xf7 val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.819630] sensor_write: reg=0xf7 val=0x01 SUCCESS
[   80.819638] sensor_write_array: reg[10] 0xf7=0x01 OK
[   80.819646] sensor_write: reg=0xf8 val=0x68, client=8554dd00, adapter=i2c0, addr=0x37
[   80.819964] sensor_write: reg=0xf8 val=0x68 SUCCESS
[   80.819973] sensor_write: reg=0xf9 val=0x40, client=8554dd00, adapter=i2c0, addr=0x37
[   80.820287] sensor_write: reg=0xf9 val=0x40 SUCCESS
[   80.820296] sensor_write: reg=0xfc val=0x8e, client=8554dd00, adapter=i2c0, addr=0x37
[   80.820609] sensor_write: reg=0xfc val=0x8e SUCCESS
[   80.820617] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.820930] sensor_write: reg=0xfe val=0x00 SUCCESS
[   80.820939] sensor_write: reg=0x87 val=0x18, client=8554dd00, adapter=i2c0, addr=0x37
[   80.821252] sensor_write: reg=0x87 val=0x18 SUCCESS
[   80.821260] sensor_write: reg=0xee val=0x30, client=8554dd00, adapter=i2c0, addr=0x37
[   80.821573] sensor_write: reg=0xee val=0x30 SUCCESS
[   80.821582] sensor_write: reg=0xd0 val=0xb7, client=8554dd00, adapter=i2c0, addr=0x37
[   80.821894] sensor_write: reg=0xd0 val=0xb7 SUCCESS
[   80.821903] sensor_write: reg=0x03 val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.822216] sensor_write: reg=0x03 val=0x04 SUCCESS
[   80.822224] sensor_write: reg=0x04 val=0x60, client=8554dd00, adapter=i2c0, addr=0x37
[   80.822537] sensor_write: reg=0x04 val=0x60 SUCCESS
[   80.822545] sensor_write: reg=0x05 val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.823512] sensor_write: reg=0x05 val=0x04 SUCCESS
[   80.823522] sensor_write: reg=0x06 val=0x4c, client=8554dd00, adapter=i2c0, addr=0x37
[   80.823836] sensor_write: reg=0x06 val=0x4c SUCCESS
[   80.823844] sensor_write: reg=0x07 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.829290] sensor_write: reg=0x07 val=0x00 SUCCESS
[   80.829306] sensor_write: reg=0x08 val=0x11, client=8554dd00, adapter=i2c0, addr=0x37
[   80.829622] sensor_write: reg=0x08 val=0x11 SUCCESS
[   80.829631] sensor_write: reg=0x09 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.829947] sensor_write: reg=0x09 val=0x00 SUCCESS
[   80.829956] sensor_write: reg=0x0a val=0x02, client=8554dd00, adapter=i2c0, addr=0x37
[   80.830270] sensor_write: reg=0x0a val=0x02 SUCCESS
[   80.830278] sensor_write: reg=0x0b val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.830591] sensor_write: reg=0x0b val=0x00 SUCCESS
[   80.830599] sensor_write: reg=0x0c val=0x02, client=8554dd00, adapter=i2c0, addr=0x37
[   80.830912] sensor_write: reg=0x0c val=0x02 SUCCESS
[   80.830920] sensor_write: reg=0x0d val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.831233] sensor_write: reg=0x0d val=0x04 SUCCESS
[   80.831242] sensor_write: reg=0x0e val=0x40, client=8554dd00, adapter=i2c0, addr=0x37
[   80.831554] sensor_write: reg=0x0e val=0x40 SUCCESS
[   80.831563] sensor_write: reg=0x12 val=0xe2, client=8554dd00, adapter=i2c0, addr=0x37
[   80.831876] sensor_write: reg=0x12 val=0xe2 SUCCESS
[   80.831884] sensor_write: reg=0x13 val=0x16, client=8554dd00, adapter=i2c0, addr=0x37
[   80.832198] sensor_write: reg=0x13 val=0x16 SUCCESS
[   80.832206] sensor_write: reg=0x19 val=0x0a, client=8554dd00, adapter=i2c0, addr=0x37
[   80.832518] sensor_write: reg=0x19 val=0x0a SUCCESS
[   80.832527] sensor_write: reg=0x21 val=0x1c, client=8554dd00, adapter=i2c0, addr=0x37
[   80.832840] sensor_write: reg=0x21 val=0x1c SUCCESS
[   80.832848] sensor_write: reg=0x28 val=0x0a, client=8554dd00, adapter=i2c0, addr=0x37
[   80.833161] sensor_write: reg=0x28 val=0x0a SUCCESS
[   80.833170] sensor_write: reg=0x29 val=0x24, client=8554dd00, adapter=i2c0, addr=0x37
[   80.833482] sensor_write: reg=0x29 val=0x24 SUCCESS
[   80.833491] sensor_write: reg=0x2b val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.839294] sensor_write: reg=0x2b val=0x04 SUCCESS
[   80.839310] sensor_write: reg=0x32 val=0xf8, client=8554dd00, adapter=i2c0, addr=0x37
[   80.839628] sensor_write: reg=0x32 val=0xf8 SUCCESS
[   80.839636] sensor_write: reg=0x37 val=0x03, client=8554dd00, adapter=i2c0, addr=0x37
[   80.839948] sensor_write: reg=0x37 val=0x03 SUCCESS
[   80.839956] sensor_write: reg=0x39 val=0x15, client=8554dd00, adapter=i2c0, addr=0x37
[   80.840273] sensor_write: reg=0x39 val=0x15 SUCCESS
[   80.840282] sensor_write: reg=0x43 val=0x07, client=8554dd00, adapter=i2c0, addr=0x37
[   80.840596] sensor_write: reg=0x43 val=0x07 SUCCESS
[   80.840604] sensor_write: reg=0x44 val=0x40, client=8554dd00, adapter=i2c0, addr=0x37
[   80.840917] sensor_write: reg=0x44 val=0x40 SUCCESS
[   80.840926] sensor_write: reg=0x46 val=0x0b, client=8554dd00, adapter=i2c0, addr=0x37
[   80.841241] sensor_write: reg=0x46 val=0x0b SUCCESS
[   80.841250] sensor_write: reg=0x4b val=0x20, client=8554dd00, adapter=i2c0, addr=0x37
[   80.841563] sensor_write: reg=0x4b val=0x20 SUCCESS
[   80.841572] sensor_write: reg=0x4e val=0x08, client=8554dd00, adapter=i2c0, addr=0x37
[   80.841885] sensor_write: reg=0x4e val=0x08 SUCCESS
[   80.841893] sensor_write: reg=0x55 val=0x20, client=8554dd00, adapter=i2c0, addr=0x37
[   80.842206] sensor_write: reg=0x55 val=0x20 SUCCESS
[   80.842214] sensor_write: reg=0x66 val=0x05, client=8554dd00, adapter=i2c0, addr=0x37
[   80.842528] sensor_write: reg=0x66 val=0x05 SUCCESS
[   80.842536] sensor_write: reg=0x67 val=0x05, client=8554dd00, adapter=i2c0, addr=0x37
[   80.842849] sensor_write: reg=0x67 val=0x05 SUCCESS
[   80.842857] sensor_write: reg=0x77 val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.843170] sensor_write: reg=0x77 val=0x01 SUCCESS
[   80.843178] sensor_write: reg=0x78 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.843491] sensor_write: reg=0x78 val=0x00 SUCCESS
[   80.843500] sensor_write: reg=0x7c val=0x93, client=8554dd00, adapter=i2c0, addr=0x37
[   80.843801] sensor_write: reg=0x7c val=0x93 SUCCESS
[   80.843810] sensor_write_array: reg[50] 0x7c=0x93 OK
[   80.843818] sensor_write: reg=0x8c val=0x12, client=8554dd00, adapter=i2c0, addr=0x37
[   80.844133] sensor_write: reg=0x8c val=0x12 SUCCESS
[   80.844142] sensor_write: reg=0x8d val=0x92, client=8554dd00, adapter=i2c0, addr=0x37
[   80.844453] sensor_write: reg=0x8d val=0x92 SUCCESS
[   80.844462] sensor_write: reg=0x90 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.844775] sensor_write: reg=0x90 val=0x00 SUCCESS
[   80.844784] sensor_write: reg=0x41 val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.845096] sensor_write: reg=0x41 val=0x04 SUCCESS
[   80.845105] sensor_write: reg=0x42 val=0x9d, client=8554dd00, adapter=i2c0, addr=0x37
[   80.845418] sensor_write: reg=0x42 val=0x9d SUCCESS
[   80.845426] sensor_write: reg=0x9d val=0x10, client=8554dd00, adapter=i2c0, addr=0x37
[   80.849273] sensor_write: reg=0x9d val=0x10 SUCCESS
[   80.849289] sensor_write: reg=0xce val=0x7c, client=8554dd00, adapter=i2c0, addr=0x37
[   80.849607] sensor_write: reg=0xce val=0x7c SUCCESS
[   80.849616] sensor_write: reg=0xd2 val=0x41, client=8554dd00, adapter=i2c0, addr=0x37
[   80.849928] sensor_write: reg=0xd2 val=0x41 SUCCESS
[   80.849936] sensor_write: reg=0xd3 val=0xdc, client=8554dd00, adapter=i2c0, addr=0x37
[   80.850253] sensor_write: reg=0xd3 val=0xdc SUCCESS
[   80.850262] sensor_write: reg=0xe6 val=0x50, client=8554dd00, adapter=i2c0, addr=0x37
[   80.850576] sensor_write: reg=0xe6 val=0x50 SUCCESS
[   80.850584] sensor_write: reg=0xb6 val=0xc0, client=8554dd00, adapter=i2c0, addr=0x37
[   80.850898] sensor_write: reg=0xb6 val=0xc0 SUCCESS
[   80.850906] sensor_write: reg=0xb0 val=0x70, client=8554dd00, adapter=i2c0, addr=0x37
[   80.851219] sensor_write: reg=0xb0 val=0x70 SUCCESS
[   80.851228] sensor_write: reg=0xb1 val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.851540] sensor_write: reg=0xb1 val=0x01 SUCCESS
[   80.851549] sensor_write: reg=0xb2 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.851862] sensor_write: reg=0xb2 val=0x00 SUCCESS
[   80.851870] sensor_write: reg=0xb3 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.852183] sensor_write: reg=0xb3 val=0x00 SUCCESS
[   80.852192] sensor_write: reg=0xb4 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.852504] sensor_write: reg=0xb4 val=0x00 SUCCESS
[   80.852512] sensor_write: reg=0xb8 val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.853811] sensor_write: reg=0xb8 val=0x01 SUCCESS
[   80.853822] sensor_write: reg=0xb9 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.854140] sensor_write: reg=0xb9 val=0x00 SUCCESS
[   80.854149] sensor_write: reg=0x26 val=0x30, client=8554dd00, adapter=i2c0, addr=0x37
[   80.854464] sensor_write: reg=0x26 val=0x30 SUCCESS
[   80.854472] sensor_write: reg=0xfe val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.859277] sensor_write: reg=0xfe val=0x01 SUCCESS
[   80.859291] sensor_write: reg=0x40 val=0x23, client=8554dd00, adapter=i2c0, addr=0x37
[   80.859614] sensor_write: reg=0x40 val=0x23 SUCCESS
[   80.859624] sensor_write: reg=0x55 val=0x07, client=8554dd00, adapter=i2c0, addr=0x37
[   80.859938] sensor_write: reg=0x55 val=0x07 SUCCESS
[   80.859948] sensor_write: reg=0x60 val=0x40, client=8554dd00, adapter=i2c0, addr=0x37
[   80.860261] sensor_write: reg=0x60 val=0x40 SUCCESS
[   80.860269] sensor_write: reg=0xfe val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.860582] sensor_write: reg=0xfe val=0x04 SUCCESS
[   80.860591] sensor_write: reg=0x14 val=0x78, client=8554dd00, adapter=i2c0, addr=0x37
[   80.860904] sensor_write: reg=0x14 val=0x78 SUCCESS
[   80.860912] sensor_write: reg=0x15 val=0x78, client=8554dd00, adapter=i2c0, addr=0x37
[   80.861225] sensor_write: reg=0x15 val=0x78 SUCCESS
[   80.861234] sensor_write: reg=0x16 val=0x78, client=8554dd00, adapter=i2c0, addr=0x37
[   80.861546] sensor_write: reg=0x16 val=0x78 SUCCESS
[   80.861555] sensor_write: reg=0x17 val=0x78, client=8554dd00, adapter=i2c0, addr=0x37
[   80.861868] sensor_write: reg=0x17 val=0x78 SUCCESS
[   80.861876] sensor_write: reg=0xfe val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.862189] sensor_write: reg=0xfe val=0x01 SUCCESS
[   80.862197] sensor_write: reg=0x92 val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.862510] sensor_write: reg=0x92 val=0x00 SUCCESS
[   80.862518] sensor_write: reg=0x94 val=0x03, client=8554dd00, adapter=i2c0, addr=0x37
[   80.862831] sensor_write: reg=0x94 val=0x03 SUCCESS
[   80.862840] sensor_write: reg=0x95 val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.863152] sensor_write: reg=0x95 val=0x04 SUCCESS
[   80.863161] sensor_write: reg=0x96 val=0x38, client=8554dd00, adapter=i2c0, addr=0x37
[   80.863907] sensor_write: reg=0x96 val=0x38 SUCCESS
[   80.863917] sensor_write: reg=0x97 val=0x07, client=8554dd00, adapter=i2c0, addr=0x37
[   80.864233] sensor_write: reg=0x97 val=0x07 SUCCESS
[   80.864242] sensor_write: reg=0x98 val=0x80, client=8554dd00, adapter=i2c0, addr=0x37
[   80.867548] sensor_write: reg=0x98 val=0x80 SUCCESS
[   80.867561] sensor_write: reg=0xfe val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.867879] sensor_write: reg=0xfe val=0x01 SUCCESS
[   80.867888] sensor_write: reg=0x01 val=0x05, client=8554dd00, adapter=i2c0, addr=0x37
[   80.868206] sensor_write: reg=0x01 val=0x05 SUCCESS
[   80.868216] sensor_write: reg=0x02 val=0x89, client=8554dd00, adapter=i2c0, addr=0x37
[   80.868529] sensor_write: reg=0x02 val=0x89 SUCCESS
[   80.868538] sensor_write: reg=0x04 val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.868874] sensor_write: reg=0x04 val=0x01 SUCCESS
[   80.868884] sensor_write: reg=0x07 val=0xa6, client=8554dd00, adapter=i2c0, addr=0x37
[   80.869197] sensor_write: reg=0x07 val=0xa6 SUCCESS
[   80.869206] sensor_write: reg=0x08 val=0xa9, client=8554dd00, adapter=i2c0, addr=0x37
[   80.869546] sensor_write: reg=0x08 val=0xa9 SUCCESS
[   80.869556] sensor_write: reg=0x09 val=0xa8, client=8554dd00, adapter=i2c0, addr=0x37
[   80.869868] sensor_write: reg=0x09 val=0xa8 SUCCESS
[   80.869877] sensor_write: reg=0x0a val=0xa7, client=8554dd00, adapter=i2c0, addr=0x37
[   80.870190] sensor_write: reg=0x0a val=0xa7 SUCCESS
[   80.870199] sensor_write: reg=0x0b val=0xff, client=8554dd00, adapter=i2c0, addr=0x37
[   80.874032] sensor_write: reg=0x0b val=0xff SUCCESS
[   80.874048] sensor_write: reg=0x0c val=0xff, client=8554dd00, adapter=i2c0, addr=0x37
[   80.874365] sensor_write: reg=0x0c val=0xff SUCCESS
[   80.874374] sensor_write: reg=0x0f val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.874697] sensor_write: reg=0x0f val=0x00 SUCCESS
[   80.874706] sensor_write: reg=0x50 val=0x1c, client=8554dd00, adapter=i2c0, addr=0x37
[   80.875018] sensor_write: reg=0x50 val=0x1c SUCCESS
[   80.875026] sensor_write: reg=0x89 val=0x03, client=8554dd00, adapter=i2c0, addr=0x37
[   80.875340] sensor_write: reg=0x89 val=0x03 SUCCESS
[   80.875348] sensor_write: reg=0xfe val=0x04, client=8554dd00, adapter=i2c0, addr=0x37
[   80.875662] sensor_write: reg=0xfe val=0x04 SUCCESS
[   80.875670] sensor_write: reg=0x28 val=0x86, client=8554dd00, adapter=i2c0, addr=0x37
[   80.875983] sensor_write: reg=0x28 val=0x86 SUCCESS
[   80.875990] sensor_write_array: reg[100] 0x28=0x86 OK
[   80.875999] sensor_write: reg=0x29 val=0x86, client=8554dd00, adapter=i2c0, addr=0x37
[   80.876312] sensor_write: reg=0x29 val=0x86 SUCCESS
[   80.876321] sensor_write: reg=0x2a val=0x86, client=8554dd00, adapter=i2c0, addr=0x37
[   80.876634] sensor_write: reg=0x2a val=0x86 SUCCESS
[   80.876642] sensor_write: reg=0x2b val=0x68, client=8554dd00, adapter=i2c0, addr=0x37
[   80.876956] sensor_write: reg=0x2b val=0x68 SUCCESS
[   80.876964] sensor_write: reg=0x2c val=0x68, client=8554dd00, adapter=i2c0, addr=0x37
[   80.884146] sensor_write: reg=0x2c val=0x68 SUCCESS
[   80.884162] sensor_write: reg=0x2d val=0x68, client=8554dd00, adapter=i2c0, addr=0x37
[   80.884480] sensor_write: reg=0x2d val=0x68 SUCCESS
[   80.884489] sensor_write: reg=0x2e val=0x68, client=8554dd00, adapter=i2c0, addr=0x37
[   80.884807] sensor_write: reg=0x2e val=0x68 SUCCESS
[   80.884816] sensor_write: reg=0x2f val=0x68, client=8554dd00, adapter=i2c0, addr=0x37
[   80.885130] sensor_write: reg=0x2f val=0x68 SUCCESS
[   80.885138] sensor_write: reg=0x30 val=0x4f, client=8554dd00, adapter=i2c0, addr=0x37
[   80.885452] sensor_write: reg=0x30 val=0x4f SUCCESS
[   80.885460] sensor_write: reg=0x31 val=0x68, client=8554dd00, adapter=i2c0, addr=0x37
[   80.885773] sensor_write: reg=0x31 val=0x68 SUCCESS
[   80.885782] sensor_write: reg=0x32 val=0x67, client=8554dd00, adapter=i2c0, addr=0x37
[   80.886094] sensor_write: reg=0x32 val=0x67 SUCCESS
[   80.886103] sensor_write: reg=0x33 val=0x66, client=8554dd00, adapter=i2c0, addr=0x37
[   80.886416] sensor_write: reg=0x33 val=0x66 SUCCESS
[   80.886424] sensor_write: reg=0x34 val=0x66, client=8554dd00, adapter=i2c0, addr=0x37
[   80.886738] sensor_write: reg=0x34 val=0x66 SUCCESS
[   80.886746] sensor_write: reg=0x35 val=0x66, client=8554dd00, adapter=i2c0, addr=0x37
[   80.887059] sensor_write: reg=0x35 val=0x66 SUCCESS
[   80.887067] sensor_write: reg=0x36 val=0x66, client=8554dd00, adapter=i2c0, addr=0x37
[   80.887380] sensor_write: reg=0x36 val=0x66 SUCCESS
[   80.887388] sensor_write: reg=0x37 val=0x66, client=8554dd00, adapter=i2c0, addr=0x37
[   80.887702] sensor_write: reg=0x37 val=0x66 SUCCESS
[   80.887710] sensor_write: reg=0x38 val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.888023] sensor_write: reg=0x38 val=0x62 SUCCESS
[   80.888032] sensor_write: reg=0x39 val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.888345] sensor_write: reg=0x39 val=0x62 SUCCESS
[   80.888354] sensor_write: reg=0x3a val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.888666] sensor_write: reg=0x3a val=0x62 SUCCESS
[   80.888675] sensor_write: reg=0x3b val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.889002] sensor_write: reg=0x3b val=0x62 SUCCESS
[   80.889011] sensor_write: reg=0x3c val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.889344] sensor_write: reg=0x3c val=0x62 SUCCESS
[   80.889353] sensor_write: reg=0x3d val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.889669] sensor_write: reg=0x3d val=0x62 SUCCESS
[   80.889678] sensor_write: reg=0x3e val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.889992] sensor_write: reg=0x3e val=0x62 SUCCESS
[   80.890000] sensor_write: reg=0x3f val=0x62, client=8554dd00, adapter=i2c0, addr=0x37
[   80.890312] sensor_write: reg=0x3f val=0x62 SUCCESS
[   80.890320] sensor_write: reg=0xfe val=0x01, client=8554dd00, adapter=i2c0, addr=0x37
[   80.890633] sensor_write: reg=0xfe val=0x01 SUCCESS
[   80.890642] sensor_write: reg=0x9a val=0x06, client=8554dd00, adapter=i2c0, addr=0x37
[   80.894259] sensor_write: reg=0x9a val=0x06 SUCCESS
[   80.894274] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.894592] sensor_write: reg=0xfe val=0x00 SUCCESS
[   80.894602] sensor_write: reg=0x7b val=0x2a, client=8554dd00, adapter=i2c0, addr=0x37
[   80.894919] sensor_write: reg=0x7b val=0x2a SUCCESS
[   80.894928] sensor_write: reg=0x23 val=0x2d, client=8554dd00, adapter=i2c0, addr=0x37
[   80.895240] sensor_write: reg=0x23 val=0x2d SUCCESS
[   80.895248] sensor_write: reg=0xfe val=0x03, client=8554dd00, adapter=i2c0, addr=0x37
[   80.895561] sensor_write: reg=0xfe val=0x03 SUCCESS
[   80.895570] sensor_write: reg=0x01 val=0x27, client=8554dd00, adapter=i2c0, addr=0x37
[   80.895883] sensor_write: reg=0x01 val=0x27 SUCCESS
[   80.895892] sensor_write: reg=0x02 val=0x56, client=8554dd00, adapter=i2c0, addr=0x37
[   80.896204] sensor_write: reg=0x02 val=0x56 SUCCESS
[   80.896213] sensor_write: reg=0x03 val=0x8e, client=8554dd00, adapter=i2c0, addr=0x37
[   80.896526] sensor_write: reg=0x03 val=0x8e SUCCESS
[   80.896534] sensor_write: reg=0x12 val=0x80, client=8554dd00, adapter=i2c0, addr=0x37
[   80.896848] sensor_write: reg=0x12 val=0x80 SUCCESS
[   80.896856] sensor_write: reg=0x13 val=0x07, client=8554dd00, adapter=i2c0, addr=0x37
[   80.897169] sensor_write: reg=0x13 val=0x07 SUCCESS
[   80.897178] sensor_write: reg=0x15 val=0x12, client=8554dd00, adapter=i2c0, addr=0x37
[   80.898910] sensor_write: reg=0x15 val=0x12 SUCCESS
[   80.898924] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   80.899266] sensor_write: reg=0xfe val=0x00 SUCCESS
[   80.899280] sensor_write: reg=0x3e val=0x91, client=8554dd00, adapter=i2c0, addr=0x37
[   80.899595] sensor_write: reg=0x3e val=0x91 SUCCESS
[   80.899602] sensor_write_array: Complete - wrote 137 registers, 0 errors
[   80.899609] *** SENSOR_WRITE_ARRAY RETURNED: 0 ***
[   80.899615] *** SENSOR_INIT: gc2053 initialization complete - marked as initialized ***
[   80.899622] Calling subdev 4 initialization (REVERSE ORDER - sensors first)
[   80.899629] *** SENSOR_INIT: gc2053 enable=1 ***
[   80.899635] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   80.899641] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   80.899648] Calling subdev 2 initialization (REVERSE ORDER - sensors first)
[   80.899654] VIN: tx_isp_vin_init: EXACT Binary Ninja implementation with safety checks = 0x1
[   80.899660] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   80.899668] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   80.899675] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   80.899681] VIN: tx_isp_vin_init: a0 (sensor) = 85f29400
[   80.899688] VIN: tx_isp_vin_init: using VIN device from global ISP: 84cdf000
[   80.899694] VIN: tx_isp_vin_init: calling sensor init function = 0x1
[   80.899700] *** SENSOR_INIT: gc2053 enable=1 ***
[   80.899706] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   80.899712] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   80.899718] VIN: tx_isp_vin_init: sensor init returned = 0x0
[   80.899723] VIN: tx_isp_vin_init: *** VIN STATE SET SAFELY *** = 0x3
[   80.899729] VIN: tx_isp_vin_init: EXACT Binary Ninja result = 0x0
[   80.899735] Calling subdev 1 initialization (REVERSE ORDER - sensors first)
[   80.899742] *** vic_core_ops_init: ENTRY - sd=85fc0000, enable=1 ***
[   80.899748] *** vic_core_ops_init: vic_dev=85fc0000, current state check ***
[   80.899755] *** vic_core_ops_init: current_state=2, enable=1 ***
[   80.899760] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   80.899766] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   80.899772] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   80.899778] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   80.899784] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   80.899791] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   80.899797] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   80.899802] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   80.899808] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   80.899815] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   80.899820] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   80.899826] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   80.899834] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   80.899840] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   80.899845] *** tx_vic_enable_irq: completed successfully ***
[   80.899852] Calling subdev 0 initialization (REVERSE ORDER - sensors first)
[   80.899859] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=1
[   80.899864] *** VIC device final state set to 2 (fully activated) ***
[   80.899870] *** ispcore_activate_module: SUCCESS - ALL REGISTER WRITES SHOULD NOW BE TRIGGERED ***
[   80.899876] *** tx_isp_video_s_stream: ispcore_activate_module completed ***
[   80.899882] *** tx_isp_video_s_stream: VIC state is 2, calling VIC core->init ***
[   80.899888] *** vic_core_ops_init: ENTRY - sd=85fc0000, enable=1 ***
[   80.899894] *** vic_core_ops_init: vic_dev=85fc0000, current state check ***
[   80.899901] *** vic_core_ops_init: current_state=2, enable=1 ***
[   80.899906] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   80.899912] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   80.899918] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   80.899923] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   80.899929] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   80.899936] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   80.899942] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   80.899948] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   80.899954] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   80.899959] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   80.899964] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   80.899971] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   80.899977] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   80.899983] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   80.899988] *** tx_vic_enable_irq: completed successfully ***
[   80.899994] *** tx_isp_video_s_stream: VIC core->init completed, VIC should now be state 3 ***
[   80.900000] *** tx_isp_video_s_stream: Core initialization complete, proceeding with subdev streaming ***
[   80.900005] *** tx_isp_video_s_stream: CRITICAL FIX - Initializing all subdevs before streaming ***
[   80.900012] *** tx_isp_video_s_stream: Initializing CSI subdev ***
[   80.900020] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=1
[   80.900025] *** tx_isp_video_s_stream: CSI init SUCCESS ***
[   80.900030] *** tx_isp_video_s_stream: Initializing VIC subdev ***
[   80.900037] *** vic_core_ops_init: ENTRY - sd=85fc0000, enable=1 ***
[   80.900043] *** vic_core_ops_init: vic_dev=85fc0000, current state check ***
[   80.900049] *** vic_core_ops_init: current_state=3, enable=1 ***
[   80.900054] *** tx_isp_video_s_stream: VIC init SUCCESS ***
[   80.900060] *** tx_isp_video_s_stream: Initializing Sensor subdev ***
[   80.900066] *** SENSOR_INIT: gc2053 enable=1 ***
[   80.900072] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   80.900078] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   80.900084] *** tx_isp_video_s_stream: Sensor init SUCCESS ***
[   80.900090] *** tx_isp_video_s_stream: All subdev initialization complete - proceeding with s_stream ***
[   80.900096] *** tx_isp_video_s_stream: Calling subdev[0]->ops->video->s_stream(1) ***
[   80.900102] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   80.900108] csi_video_s_stream: sd=85219400, enable=1
[   80.900114] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   80.900121] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   80.900128] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   80.900134] *** CSI STREAMING: Configuring CSI hardware for streaming (current state=1) ***
[   80.900141] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=1
[   80.900146] *** CSI STREAMING: CSI hardware configured successfully for streaming ***
[   80.900152] csi_video_s_stream: Stream ON - CSI state set to 4
[   80.900158] *** tx_isp_video_s_stream: subdev[0] s_stream SUCCESS ***
[   80.900164] *** tx_isp_video_s_stream: Calling subdev[1]->ops->video->s_stream(1) ***
[   80.900172] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85fc0000, enable=1 ***
[   80.900178] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=3 ***
[   80.900183] *** vic_core_s_stream: STREAM ON ***
[   80.900188] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   80.900194] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   80.900200] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   80.900207] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   80.900214] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   80.900220] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   80.900225] *** STREAMING: Configuring CPM registers for VIC access ***
[   80.929258] STREAMING: CPM clocks configured for VIC access
[   80.929274] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   80.929280] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   80.929287] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   80.929292] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   80.929298] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   80.929304] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   80.929311] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   80.929318] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   80.929324] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   80.929330] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   80.929336] *** VIC unlock: Commands written, checking VIC status register ***
[   80.929342] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   80.929348] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   80.929354] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   80.929359] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   80.929365] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   80.929370] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   80.929446] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   80.929454] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   80.929460] *** VIC REGISTER CONFIG: Writing VIC configuration registers (vic_start_ok=0) ***
[   80.929468] *** VIC REGISTER CONFIG: VIC configuration registers written (0xc=2, 0x10=0x07800438, 0x14=3840) ***
[   80.929476] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   80.929481] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   80.929488] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   80.929494] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   80.929500] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   80.929506] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   80.929512] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   80.929518] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   80.929524] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   80.929529] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   80.929536] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   80.929542] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   80.929548] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   80.929554] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   80.929560] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   80.929566] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   80.929572] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   80.929578] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   80.929584] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   80.929593] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   80.929600] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   80.929605] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   80.929613] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   80.929618] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   80.929624] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   80.929630] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   80.929636] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   80.929642] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   80.929648] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   80.929656] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   80.929662] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   80.929668] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   80.929674] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   80.929681] ispvic_frame_channel_s_stream: arg1=85fc0000, arg2=1
[   80.929687] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85fc0000
[   80.929694] ispvic_frame_channel_s_stream[2441]: streamon
[   80.929700] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   80.929706] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   80.929712] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   80.929718] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   80.929723] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   80.929730] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   80.929736] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   80.929743] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   80.929749] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   80.929755] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   80.929760] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   80.929766] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   80.929772] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   80.929780] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   80.929788] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   80.929795] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   80.929802] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   80.929810] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   80.929816] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   80.929822] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   80.929828] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   80.929834] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   80.929841] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   80.929846] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   80.929852] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   80.929858] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   80.929864] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   80.929875] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   80.929883] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   80.929946] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   80.929957] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   80.929963] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   80.929972] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   80.929978] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   80.929984] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   80.929990] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   80.929996] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   80.931003] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   80.931009] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   80.931014] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   80.931122] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   80.931229] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   80.931236] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   80.931242] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   80.931247] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   80.931253] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   80.931259] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   80.931266] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   80.931272] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   80.931278] *** tx_vic_enable_irq: completed successfully ***
root@ing-wyze-cam3-a000 ~# dmesg 
[   80.929630] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   80.929636] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   80.929642] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   80.929648] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   80.929656] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   80.929662] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   80.929668] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   80.929674] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   80.929681] ispvic_frame_channel_s_stream: arg1=85fc0000, arg2=1
[   80.929687] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85fc0000
[   80.929694] ispvic_frame_channel_s_stream[2441]: streamon
[   80.929700] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   80.929706] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   80.929712] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   80.929718] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   80.929723] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   80.929730] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   80.929736] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   80.929743] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   80.929749] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   80.929755] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   80.929760] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   80.929766] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   80.929772] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   80.929780] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   80.929788] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   80.929795] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   80.929802] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   80.929810] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   80.929816] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   80.929822] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   80.929828] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   80.929834] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   80.929841] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   80.929846] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   80.929852] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   80.929858] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   80.929864] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   80.929875] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   80.929883] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   80.929946] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   80.929957] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   80.929963] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   80.929972] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   80.929978] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   80.929984] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   80.929990] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   80.929996] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   80.931003] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   80.931009] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   80.931014] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   80.931122] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   80.931229] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   80.931236] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   80.931242] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   80.931247] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   80.931253] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   80.931259] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   80.931266] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   80.931272] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   80.931278] *** tx_vic_enable_irq: completed successfully ***
[   81.363491] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   81.363504] *** vic_core_s_stream: VIC state transition 3 → 4 (STREAMING) ***
[   81.363509] *** VIC STATE 4: Initializing clocks for streaming ***
[   81.363517] *** Initializing CSI clocks (2 clocks) ***
[   81.363524] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[   81.363531] isp_subdev_init_clks: Using platform data clock arrays: c06af488
[   81.363539] isp_subdev_init_clks: Using platform data clock configs
[   81.363547] Platform data clock[0]: name=cgu_isp, rate=100000000
[   81.363559] Clock cgu_isp: set rate 100000000 Hz, result=0
[   81.363566] Clock cgu_isp enabled successfully
[   81.363573] Platform data clock[1]: name=isp, rate=65535
[   81.363580] Clock isp enabled successfully
[   81.389309] CPM clock gates configured
[   81.389325] isp_subdev_init_clks: Successfully initialized 2 clocks
[   81.389331] *** Initializing VIC clocks (2 clocks) ***
[   81.389337] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[   81.389345] isp_subdev_init_clks: Using platform data clock arrays: c06af5a0
[   81.389353] isp_subdev_init_clks: Using platform data clock configs
[   81.389361] Platform data clock[0]: name=cgu_isp, rate=100000000
[   81.389372] Clock cgu_isp: set rate 100000000 Hz, result=0
[   81.389379] Clock cgu_isp enabled successfully
[   81.389385] Platform data clock[1]: name=isp, rate=65535
[   81.389393] Clock isp enabled successfully
[   81.419273] CPM clock gates configured
[   81.419287] isp_subdev_init_clks: Successfully initialized 2 clocks
[   81.419293] *** VIC STATE 4: Calling ispcore_slake_module to initialize ISP core ***
[   81.419300] *** ispcore_slake_module: EXACT Binary Ninja MCP implementation ***
[   81.419307] ispcore_slake_module: VIC device=85fc0000, state=4ispcore_slake_module: ISP state >= 3, calling ispcore_core_ops_init
[   81.419316] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   81.419325] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   81.419332] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   81.419337] ispcore_slake_module: Using sensor attributes from connected sensor
[   81.419344] *** ispcore_core_ops_init_with_sensor: GOOD-THINGS approach - isp=85fb0000, sensor_attr=c06da0cc ****** ispcore_core_ops_init_with_sensor: Calling tisp_init with sensor parameters (good-things approach) ***
[   81.419353] *** This will configure MIPI CSI lanes and enable proper interrupt flow ****** ispcore_core_ops_init_with_sensor: Calling tisp_init(&sensor_params, "gc2053") ***
[   81.419363] *** tisp_init: IMPLEMENTING MISSING HARDWARE REGISTER INITIALIZATION ***
[   81.419369] *** THIS FUNCTION CONTAINS ALL THE system_reg_write CALLS FROM REFERENCE ***
[   81.419375] *** tisp_init: Invalid sensor dimensions 1x0, using defaults 1920x1080 ***
[   81.419382] *** tisp_init: FIXED - Extracted dimensions from sensor_attr: 1920x1080 ***
[   81.419389] tisp_init: Initializing ISP hardware for sensor (1920x1080)
[   81.419395] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   81.419400] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   81.419405] tisp_event_init: Initializing ISP event system
[   81.419414] tisp_event_init: SAFE event system initialized with 20 nodes
[   81.419420] tisp_event_set_cb: Setting callback for event 4
[   81.419427] tisp_event_set_cb: Event 4 callback set to c067d754
[   81.419433] tisp_event_set_cb: Setting callback for event 5
[   81.419439] tisp_event_set_cb: Event 5 callback set to c067dc1c
[   81.419445] tisp_event_set_cb: Setting callback for event 7
[   81.419451] tisp_event_set_cb: Event 7 callback set to c067d7e8
[   81.419457] tisp_event_set_cb: Setting callback for event 9
[   81.419463] tisp_event_set_cb: Event 9 callback set to c067d870
[   81.419469] tisp_event_set_cb: Setting callback for event 8
[   81.419475] tisp_event_set_cb: Event 8 callback set to c067d934
[   81.419482] *** system_irq_func_set: Registered handler c067666c at index 13 ***
[   81.427589] *** WRITING ISP CORE CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   81.427637] *** SYSTEM_REG_WRITE: reg[0xb004] = 0xf001f001 (Binary Ninja EXACT) ***
[   81.427713] *** SYSTEM_REG_WRITE: reg[0xb008] = 0x40404040 (Binary Ninja EXACT) ***
[   81.427753] *** SYSTEM_REG_WRITE: reg[0xb00c] = 0x40404040 (Binary Ninja EXACT) ***
[   81.427827] *** SYSTEM_REG_WRITE: reg[0xb010] = 0x40404040 (Binary Ninja EXACT) ***
[   81.427866] *** SYSTEM_REG_WRITE: reg[0xb014] = 0x404040 (Binary Ninja EXACT) ***
[   81.427945] system_reg_write: BLOCKED core-control reg[0xb018]=0x40404040 during streaming (preserve interrupts)
[   81.427985] system_reg_write: BLOCKED core-control reg[0xb01c]=0x40404040 during streaming (preserve interrupts)
[   81.428059] system_reg_write: BLOCKED core-control reg[0xb020]=0x40404040 during streaming (preserve interrupts)
[   81.428098] system_reg_write: BLOCKED core-control reg[0xb024]=0x404040 during streaming (preserve interrupts)
[   81.428172] *** SYSTEM_REG_WRITE: reg[0xb028] = 0x1000080 (Binary Ninja EXACT) ***
[   81.428210] *** SYSTEM_REG_WRITE: reg[0xb02c] = 0x1000080 (Binary Ninja EXACT) ***
[   81.428283] *** SYSTEM_REG_WRITE: reg[0xb030] = 0x100 (Binary Ninja EXACT) ***
[   81.428322] *** SYSTEM_REG_WRITE: reg[0xb034] = 0xffff0100 (Binary Ninja EXACT) ***
[   81.428395] *** SYSTEM_REG_WRITE: reg[0xb038] = 0x1ff00 (Binary Ninja EXACT) ***
[   81.428433] *** SYSTEM_REG_WRITE: reg[0xb04c] = 0x103 (Binary Ninja EXACT) ***
[   81.428506] *** SYSTEM_REG_WRITE: reg[0xb050] = 0x3 (Binary Ninja EXACT) ***
[   81.428542] *** WRITING CRITICAL VARYING REGISTERS - USING EXACT REFERENCE VALUES ***
[   81.428616] *** SYSTEM_REG_WRITE: reg[0xb07c] = 0x341b (Binary Ninja EXACT) ***
[   81.428654] *** SYSTEM_REG_WRITE: reg[0xb080] = 0x46b0 (Binary Ninja EXACT) ***
[   81.428729] *** SYSTEM_REG_WRITE: reg[0xb084] = 0x1813 (Binary Ninja EXACT) ***
[   81.428767] *** SYSTEM_REG_WRITE: reg[0xb08c] = 0x10a (Binary Ninja EXACT) ***
[   81.428839] *** ISP CORE CONTROL REGISTERS WRITTEN - NOW MATCHES REFERENCE DRIVER ***
[   81.428876] *** WRITING ISP CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   81.428950] system_reg_write: BLOCKED reg[0x9804]=0x3f00 during streaming to protect interrupts
[   81.428987] *** SYSTEM_REG_WRITE: reg[0x9864] = 0x7800438 (Binary Ninja EXACT) ***
[   81.429115] *** SYSTEM_REG_WRITE: reg[0x987c] = 0xc0000000 (Binary Ninja EXACT) ***
[   81.429191] *** SYSTEM_REG_WRITE: reg[0x9880] = 0x1 (Binary Ninja EXACT) ***
[   81.429229] *** SYSTEM_REG_WRITE: reg[0x9884] = 0x1 (Binary Ninja EXACT) ***
[   81.429603] *** SYSTEM_REG_WRITE: reg[0x9890] = 0x1010001 (Binary Ninja EXACT) ***
[   81.429645] *** SYSTEM_REG_WRITE: reg[0x989c] = 0x1010001 (Binary Ninja EXACT) ***
[   81.429721] *** SYSTEM_REG_WRITE: reg[0x98a8] = 0x1010001 (Binary Ninja EXACT) ***
[   81.429761] *** WRITING VIC CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   81.429835] *** SYSTEM_REG_WRITE: reg[0x9a00] = 0x50002d0 (Binary Ninja EXACT) ***
[   81.429874] *** SYSTEM_REG_WRITE: reg[0x9a04] = 0x3000300 (Binary Ninja EXACT) ***
[   81.429947] *** SYSTEM_REG_WRITE: reg[0x9a2c] = 0x50002d0 (Binary Ninja EXACT) ***
[   81.429985] *** SYSTEM_REG_WRITE: reg[0x9a34] = 0x1 (Binary Ninja EXACT) ***
[   81.430058] *** SYSTEM_REG_WRITE: reg[0x9a70] = 0x1 (Binary Ninja EXACT) ***
[   81.430095] *** SYSTEM_REG_WRITE: reg[0x9a7c] = 0x1 (Binary Ninja EXACT) ***
[   81.430169] *** SYSTEM_REG_WRITE: reg[0x9a80] = 0x500 (Binary Ninja EXACT) ***
[   81.430207] *** SYSTEM_REG_WRITE: reg[0x9a88] = 0x1 (Binary Ninja EXACT) ***
[   81.430279] *** SYSTEM_REG_WRITE: reg[0x9a94] = 0x1 (Binary Ninja EXACT) ***
[   81.430317] *** SYSTEM_REG_WRITE: reg[0x9a98] = 0x500 (Binary Ninja EXACT) ***
[   81.430390] *** TUNING SYSTEM: VIC control registers 0x9ac0/0x9ac8 REMOVED - not in Binary Ninja reference ***
[   81.430429] tisp_init: CRITICAL FIX - Using ACTUAL sensor image dimensions 1920x1080 (not frame size 1920x1080)
[   81.430502] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   81.430541] *** SYSTEM_REG_WRITE: reg[0x8] = 0x0 (Binary Ninja EXACT) ***
[   81.430615] *** SYSTEM_REG_WRITE: reg[0x1c] = 0x3f08 (Binary Ninja EXACT) ***
[   81.430651] *** tisp_init: ISP control register set to enable processing pipeline ***
[   81.430724] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   81.430762] *** tisp_init: REFERENCE DRIVER format register 0x10 = 0x133 ***
[   81.430835] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   81.430871] *** tisp_init: REFERENCE DRIVER register 0x30 = 0xffffffff ***
[   81.430944] *** SYSTEM_REG_WRITE: reg[0x24] = 0x1 (Binary Ninja EXACT) ***
[   81.430981] *** SYSTEM_REG_WRITE: reg[0x28] = 0x1 (Binary Ninja EXACT) ***
[   81.431053] *** tisp_init: ISP data flow configured (input->processing->output) ***
[   81.431091] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   81.431163] *** tisp_init: STREAMING ACTIVE - Skipping ISP control register write to prevent shutdown ***
[   81.431199] *** tisp_init: VIC streaming detected - keeping ISP controls enabled ***
[   81.431272] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   81.431311] *** tisp_init: REFERENCE DRIVER final configuration - 0x804=0x1c, 0x1c=SKIPPED, 0x800=1 ***
[   81.431386] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   81.431424] *** tisp_init: ISP frame size configured - 1920x1080 (ACTUAL sensor image) ***
[   81.431497] *** SYSTEM_REG_WRITE: reg[0x8] = 0x1 (Binary Ninja EXACT) ***
[   81.431535] *** tisp_init: CRITICAL FIX - Bayer pattern configured: mbus=0x3001 -> pattern=1 (register 8) ***
[   81.431607] *** tisp_init: CONFIGURING RAW10 BAYER PROCESSING PIPELINE ***
[   81.431645] *** SYSTEM_REG_WRITE: reg[0x14] = 0x2b (Binary Ninja EXACT) ***
[   81.431745] *** SYSTEM_REG_WRITE: reg[0x18] = 0xa0a (Binary Ninja EXACT) ***
[   81.431786] *** SYSTEM_REG_WRITE: reg[0x40] = 0x1 (Binary Ninja EXACT) ***
[   81.431823] *** SYSTEM_REG_WRITE: reg[0x44] = 0x1 (Binary Ninja EXACT) ***
[   81.431897] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   81.431934] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x1000000 (Binary Ninja EXACT) ***
[   81.432007] *** SYSTEM_REG_WRITE: reg[0x5006] = 0x100 (Binary Ninja EXACT) ***
[   81.432047] *** SYSTEM_REG_WRITE: reg[0x5008] = 0x0 (Binary Ninja EXACT) ***
[   81.432123] *** SYSTEM_REG_WRITE: reg[0x500a] = 0x1000000 (Binary Ninja EXACT) ***
[   81.432162] *** SYSTEM_REG_WRITE: reg[0x500c] = 0x100 (Binary Ninja EXACT) ***
[   81.432235] *** SYSTEM_REG_WRITE: reg[0x5018] = 0x0 (Binary Ninja EXACT) ***
[   81.432273] *** SYSTEM_REG_WRITE: reg[0x501c] = 0x1 (Binary Ninja EXACT) ***
[   81.432345] *** SYSTEM_REG_WRITE: reg[0x5020] = 0x0 (Binary Ninja EXACT) ***
[   81.432382] *** CRITICAL FIX: CCM configured using EXACT Binary Ninja register addresses ***
[   81.432699] *** CCM registers 0x5004-0x5014 programmed with identity matrix ***
[   81.432713] *** This should eliminate green frames by enabling proper color processing ***
[   81.432844] *** SYSTEM_REG_WRITE: reg[0x200] = 0x4d (Binary Ninja EXACT) ***
[   81.432947] *** SYSTEM_REG_WRITE: reg[0x204] = 0x96 (Binary Ninja EXACT) ***
[   81.432954] *** SYSTEM_REG_WRITE: reg[0x208] = 0x1d (Binary Ninja EXACT) ***
[   81.432961] *** SYSTEM_REG_WRITE: reg[0x20c] = 0x70 (Binary Ninja EXACT) ***
[   81.432967] *** SYSTEM_REG_WRITE: reg[0x210] = 0x5a (Binary Ninja EXACT) ***
[   81.433351] *** SYSTEM_REG_WRITE: reg[0x214] = 0x80 (Binary Ninja EXACT) ***
[   81.433479] *** SYSTEM_REG_WRITE: reg[0x218] = 0x80 (Binary Ninja EXACT) ***
[   81.433487] *** SYSTEM_REG_WRITE: reg[0x21c] = 0x6a (Binary Ninja EXACT) ***
[   81.433494] *** SYSTEM_REG_WRITE: reg[0x220] = 0x16 (Binary Ninja EXACT) ***
[   81.433500] *** CRITICAL FIX: RGB to YUV conversion matrix configured properly ***
[   81.433892] *** tisp_init: RAW10 BAYER PROCESSING PIPELINE CONFIGURED ***
[   81.434000] *** tisp_init: Loading ISP tuning parameters from /etc/sensor/ ***
[   81.434007] *** tisp_init: Standard tuning parameters loaded successfully ***
[   81.434012] *** tisp_init: Custom tuning parameters loaded successfully ***
[   81.434124] tisp_set_csc_version: Setting CSC version 0
[   81.434132] *** SYSTEM_REG_WRITE: reg[0xc] = 0x80700008 (Binary Ninja EXACT) ***
[   81.434139] *** CRITICAL FIX: ISP bypass register set to EXACT reference value 0x80700008 - prevents hardware reset ***
[   81.434145] *** tisp_init: CONFIGURING ISP FOR NV12 OUTPUT FORMAT ***
[   81.434532] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   81.434545] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   81.434677] *** tisp_init: ISP configured for NV12 4:2:0 output format ***
[   81.434683] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   81.434691] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   81.434825] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x0 (Binary Ninja EXACT) ***
[   81.434830] *** tisp_init: ISP-VIC frame synchronization enabled ***
[   81.435176] *** SYSTEM_REG_WRITE: reg[0x6000] = 0x1 (Binary Ninja EXACT) ***
[   81.435187] *** SYSTEM_REG_WRITE: reg[0x6004] = 0x1 (Binary Ninja EXACT) ***
[   81.435315] *** tisp_init: ISP processing pipeline fully enabled ***
[   81.435322] *** SYSTEM_REG_WRITE: reg[0x7000] = 0x1 (Binary Ninja EXACT) ***
[   81.435329] *** SYSTEM_REG_WRITE: reg[0x7004] = 0x1 (Binary Ninja EXACT) ***
[   81.435334] *** tisp_init: ISP master processing enabled - pipeline should now work ***
[   81.435729] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   81.435741] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   81.435887] tisp_init: ISP memory buffers configured
[   81.435991] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   81.435999] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   81.436010] tiziano_ae_params_refresh: Refreshing AE parameters
[   81.436409] tiziano_ae_params_refresh: AE parameters refreshed
[   81.436553] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   81.436561] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   81.436566] tiziano_ae_para_addr: Setting up AE parameter addresses
[   81.436571] tiziano_ae_para_addr: AE parameter addresses configured
[   81.436579] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   81.436975] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   81.436995] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   81.437002] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   81.437009] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   81.437016] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   81.437023] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   81.437030] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b078814 (Binary Ninja EXACT) ***
[   81.437037] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   81.437043] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   81.437050] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   81.437057] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   81.437063] tiziano_ae_set_hardware_param: Parameters written to AE0
[   81.437070] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   81.437077] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   81.437084] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   81.437091] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   81.437097] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   81.437104] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   81.437111] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   81.437117] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   81.437123] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   81.437130] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   81.437137] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   81.437143] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   81.437149] tiziano_ae_set_hardware_param: Parameters written to AE1
[   81.437155] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   81.437163] *** system_irq_func_set: Registered handler c067e92c at index 10 ***
[   81.445547] *** system_irq_func_set: Registered handler c067ea20 at index 27 ***
[   81.453871] *** system_irq_func_set: Registered handler c067e92c at index 26 ***
[   81.462354] *** system_irq_func_set: Registered handler c067eb08 at index 29 ***
[   81.470890] *** system_irq_func_set: Registered handler c067ea94 at index 28 ***
[   81.478663] *** system_irq_func_set: Registered handler c067eb7c at index 30 ***
[   81.486965] *** system_irq_func_set: Registered handler c067ebd0 at index 20 ***
[   81.495341] *** system_irq_func_set: Registered handler c067ec24 at index 18 ***
[   81.504000] *** system_irq_func_set: Registered handler c067ec78 at index 31 ***
[   81.512378] *** system_irq_func_set: Registered handler c067eccc at index 11 ***
[   81.521156] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   81.521675] tiziano_deflicker_expt: Generated 119 LUT entries
[   81.521882] tisp_event_set_cb: Setting callback for event 1
[   81.521892] tisp_event_set_cb: Event 1 callback set to c067e52c
[   81.521898] tisp_event_set_cb: Setting callback for event 6
[   81.521904] tisp_event_set_cb: Event 6 callback set to c067da8c
[   81.522304] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   81.522316] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   81.522447] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   81.522549] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   81.522556] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   81.522561] tiziano_awb_init: AWB hardware blocks enabled
[   81.522567] tiziano_gamma_init: Initializing Gamma processing
[   81.522941] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   81.523771] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   81.524175] tiziano_gib_init: Initializing GIB processing
[   81.524187] tiziano_lsc_init: Initializing LSC processing
[   81.524323] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   81.524331] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   81.524465] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   81.524473] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   81.524839] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   81.525657] tiziano_ccm_init: Initializing Color Correction Matrix
[   81.526046] tiziano_ccm_init: Using linear CCM parameters
[   81.526060] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   81.526188] jz_isp_ccm: EV=64, CT=9984
[   81.526196] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   81.526202] cm_control: saturation=128
[   81.526207] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   81.526351] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   81.526677] tiziano_ccm_init: CCM initialized successfully
[   81.526819] tiziano_dmsc_init: Initializing DMSC processing
[   81.526825] tiziano_sharpen_init: Initializing Sharpening
[   81.526831] tiziano_sharpen_init: Using linear sharpening parameters
[   81.526837] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   81.526844] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   81.527239] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   81.527518] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   81.527527] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   81.527887] tiziano_sharpen_init: Sharpening initialized successfully
[   81.527899] tiziano_sdns_init: Initializing SDNS processing
[   81.527907] tiziano_sdns_init: Using linear SDNS parameters
[   81.527913] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   81.527920] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   81.527926] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   81.527959] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   81.527967] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   81.527973] tiziano_sdns_init: SDNS processing initialized successfully
[   81.527980] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   81.527985] tiziano_mdns_init: Using linear MDNS parameters
[   81.527995] tiziano_mdns_init: MDNS processing initialized successfully
[   81.528001] tiziano_clm_init: Initializing CLM processing
[   81.528007] tiziano_dpc_init: Initializing DPC processing
[   81.528012] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   81.528018] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   81.528025] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   81.528031] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   81.528045] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   81.528052] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   81.528058] tiziano_hldc_init: Initializing HLDC processing
[   81.528065] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   81.528071] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   81.528078] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   81.528085] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   81.528092] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   81.528099] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   81.528105] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   81.528113] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   81.528119] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   81.528127] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   81.528133] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   81.528140] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   81.528147] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   81.528153] tiziano_adr_params_refresh: Refreshing ADR parameters
[   81.528159] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   81.528164] tiziano_adr_params_init: Initializing ADR parameter arrays
[   81.528171] tisp_adr_set_params: Writing ADR parameters to registers
[   81.528203] tisp_adr_set_params: ADR parameters written to hardware
[   81.528209] tisp_event_set_cb: Setting callback for event 18
[   81.528217] tisp_event_set_cb: Event 18 callback set to c067ec24
[   81.528223] tisp_event_set_cb: Setting callback for event 2
[   81.528229] tisp_event_set_cb: Event 2 callback set to c067d728
[   81.528234] tiziano_adr_init: ADR processing initialized successfully
[   81.528241] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   81.528246] tiziano_bcsh_init: Initializing BCSH processing
[   81.528251] tiziano_ydns_init: Initializing YDNS processing
[   81.528256] tiziano_rdns_init: Initializing RDNS processing
[   81.528261] *** tisp_init: ALLOCATING ISP PROCESSING BUFFERS ***
[   81.528276] *** SYSTEM_REG_WRITE: reg[0xa02c] = 0x2038000 (Binary Ninja EXACT) ***
[   81.528284] *** SYSTEM_REG_WRITE: reg[0xa030] = 0x2039000 (Binary Ninja EXACT) ***
[   81.528291] *** SYSTEM_REG_WRITE: reg[0xa034] = 0x203a000 (Binary Ninja EXACT) ***
[   81.528297] *** SYSTEM_REG_WRITE: reg[0xa038] = 0x203b000 (Binary Ninja EXACT) ***
[   81.528305] *** SYSTEM_REG_WRITE: reg[0xa03c] = 0x203c000 (Binary Ninja EXACT) ***
[   81.528311] *** SYSTEM_REG_WRITE: reg[0xa040] = 0x203c800 (Binary Ninja EXACT) ***
[   81.528319] *** SYSTEM_REG_WRITE: reg[0xa044] = 0x203d000 (Binary Ninja EXACT) ***
[   81.528325] *** SYSTEM_REG_WRITE: reg[0xa048] = 0x203d800 (Binary Ninja EXACT) ***
[   81.528332] *** SYSTEM_REG_WRITE: reg[0xa04c] = 0x33 (Binary Ninja EXACT) ***
[   81.528339] *** tisp_init: AE0 buffer allocated at 0x02038000 ***
[   81.528345] *** CRITICAL FIX: data_b2f3c initialized to 0x82038000 (prevents stack corruption) ***
[   81.528353] *** SYSTEM_REG_WRITE: reg[0xa82c] = 0x528000 (Binary Ninja EXACT) ***
[   81.528360] *** SYSTEM_REG_WRITE: reg[0xa830] = 0x529000 (Binary Ninja EXACT) ***
[   81.528367] *** SYSTEM_REG_WRITE: reg[0xa834] = 0x52a000 (Binary Ninja EXACT) ***
[   81.528374] *** SYSTEM_REG_WRITE: reg[0xa838] = 0x52b000 (Binary Ninja EXACT) ***
[   81.528381] *** SYSTEM_REG_WRITE: reg[0xa83c] = 0x52c000 (Binary Ninja EXACT) ***
[   81.528388] *** SYSTEM_REG_WRITE: reg[0xa840] = 0x52c800 (Binary Ninja EXACT) ***
[   81.528395] *** SYSTEM_REG_WRITE: reg[0xa844] = 0x52d000 (Binary Ninja EXACT) ***
[   81.528401] *** SYSTEM_REG_WRITE: reg[0xa848] = 0x52d800 (Binary Ninja EXACT) ***
[   81.528408] *** SYSTEM_REG_WRITE: reg[0xa84c] = 0x33 (Binary Ninja EXACT) ***
[   81.528415] *** tisp_init: AE1 buffer allocated at 0x00528000 ***
[   81.528419] *** tisp_init: FINAL REGISTER SEQUENCE ***
[   81.528426] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   81.528432] *** tisp_init: STREAMING ACTIVE - Skipping second ISP control register write ***
[   81.528439] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   81.528444] *** tisp_init: INITIALIZING ISP SUB-MODULES ***
[   81.528451] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   81.528461] tiziano_ae_params_refresh: Refreshing AE parameters
[   81.528473] tiziano_ae_params_refresh: AE parameters refreshed
[   81.528479] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   81.528486] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   81.528491] tiziano_ae_para_addr: Setting up AE parameter addresses
[   81.528497] tiziano_ae_para_addr: AE parameter addresses configured
[   81.528503] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   81.528511] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   81.528518] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   81.528525] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   81.528532] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   81.528539] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   81.528546] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   81.528553] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b078814 (Binary Ninja EXACT) ***
[   81.528559] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   81.528567] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   81.528573] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   81.528580] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   81.528586] tiziano_ae_set_hardware_param: Parameters written to AE0
[   81.528592] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   81.528599] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   81.528605] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   81.528612] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   81.528618] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   81.528625] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   81.528631] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   81.528638] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   81.528645] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   81.528651] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   81.528658] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   81.528665] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   81.528671] tiziano_ae_set_hardware_param: Parameters written to AE1
[   81.528676] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   81.528684] *** system_irq_func_set: Registered handler c067e92c at index 10 ***
[   81.537073] *** system_irq_func_set: Registered handler c067ea20 at index 27 ***
[   81.545739] *** system_irq_func_set: Registered handler c067e92c at index 26 ***
[   81.554107] *** system_irq_func_set: Registered handler c067eb08 at index 29 ***
[   81.562760] *** system_irq_func_set: Registered handler c067ea94 at index 28 ***
[   81.571155] *** system_irq_func_set: Registered handler c067eb7c at index 30 ***
[   81.578831] *** system_irq_func_set: Registered handler c067ebd0 at index 20 ***
[   81.587179] *** system_irq_func_set: Registered handler c067ec24 at index 18 ***
[   81.595725] *** system_irq_func_set: Registered handler c067ec78 at index 31 ***
[   81.604123] *** system_irq_func_set: Registered handler c067eccc at index 11 ***
[   81.612452] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   81.612878] tiziano_deflicker_expt: Generated 119 LUT entries
[   81.613010] tisp_event_set_cb: Setting callback for event 1
[   81.613019] tisp_event_set_cb: Event 1 callback set to c067e52c
[   81.613141] tisp_event_set_cb: Setting callback for event 6
[   81.613148] tisp_event_set_cb: Event 6 callback set to c067da8c
[   81.613593] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   81.613737] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   81.613747] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   81.613755] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   81.613761] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   81.614157] tiziano_awb_init: AWB hardware blocks enabled
[   81.614169] tiziano_gamma_init: Initializing Gamma processing
[   81.614297] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   81.614962] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   81.618502] tiziano_gib_init: Initializing GIB processing
[   81.618515] tiziano_lsc_init: Initializing LSC processing
[   81.618643] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   81.618651] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   81.618659] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   81.618667] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   81.619033] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   81.623734] tiziano_ccm_init: Initializing Color Correction Matrix
[   81.623747] tiziano_ccm_init: Using linear CCM parameters
[   81.623754] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   81.623761] jz_isp_ccm: EV=64, CT=9984
[   81.623767] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   81.623773] cm_control: saturation=128
[   81.623778] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   81.623785] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   81.623790] tiziano_ccm_init: CCM initialized successfully
[   81.623795] tiziano_dmsc_init: Initializing DMSC processing
[   81.623800] tiziano_sharpen_init: Initializing Sharpening
[   81.623806] tiziano_sharpen_init: Using linear sharpening parameters
[   81.623811] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   81.623819] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   81.623824] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   81.623851] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   81.623859] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   81.623864] tiziano_sharpen_init: Sharpening initialized successfully
[   81.623869] tiziano_sdns_init: Initializing SDNS processing
[   81.623877] tiziano_sdns_init: Using linear SDNS parameters
[   81.623883] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   81.623890] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   81.623895] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   81.623929] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   81.623935] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   81.623941] tiziano_sdns_init: SDNS processing initialized successfully
[   81.623947] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   81.623952] tiziano_mdns_init: Using linear MDNS parameters
[   81.623963] tiziano_mdns_init: MDNS processing initialized successfully
---- FPGA board is ready ----
  Board UID : 30AB6E51
  Board HW ID : 72000460
  Board rev.  : 5DE5A975
  Board date  : 20190326
-----------------------------
[   81.623968] tiziano_clm_init: Initializing CLM processing
[   81.623973] tiziano_dpc_init: Initializing DPC processing
[   81.623979] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   81.623985] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   81.623991] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   81.623997] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   81.624012] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   81.624019] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   81.624024] tiziano_hldc_init: Initializing HLDC processing
[   81.624031] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   81.624037] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   81.624044] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   81.624051] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   81.624058] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   81.624065] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   81.624071] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   81.624078] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   81.624085] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   81.624092] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   81.624099] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   81.624106] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   81.624113] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   81.624119] tiziano_adr_params_refresh: Refreshing ADR parameters
[   81.624125] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   81.624129] tiziano_adr_params_init: Initializing ADR parameter arrays
[   81.624136] tisp_adr_set_params: Writing ADR parameters to registers
[   81.624169] tisp_adr_set_params: ADR parameters written to hardware
[   81.624175] tisp_event_set_cb: Setting callback for event 18
[   81.624182] tisp_event_set_cb: Event 18 callback set to c067ec24
[   81.624187] tisp_event_set_cb: Setting callback for event 2
[   81.624194] tisp_event_set_cb: Event 2 callback set to c067d728
[   81.624199] tiziano_adr_init: ADR processing initialized successfully
[   81.624205] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   81.624211] tiziano_bcsh_init: Initializing BCSH processing
[   81.624216] tiziano_ydns_init: Initializing YDNS processing
[   81.624221] tiziano_rdns_init: Initializing RDNS processing
[   81.624226] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   81.624231] tisp_event_init: Initializing ISP event system
[   81.624239] tisp_event_init: SAFE event system initialized with 20 nodes
[   81.624245] tisp_event_set_cb: Setting callback for event 4
[   81.624251] tisp_event_set_cb: Event 4 callback set to c067d754
[   81.624256] tisp_event_set_cb: Setting callback for event 5
[   81.624263] tisp_event_set_cb: Event 5 callback set to c067dc1c
[   81.624268] tisp_event_set_cb: Setting callback for event 7
[   81.624275] tisp_event_set_cb: Event 7 callback set to c067d7e8
[   81.624280] tisp_event_set_cb: Setting callback for event 9
[   81.624287] tisp_event_set_cb: Event 9 callback set to c067d870
[   81.624292] tisp_event_set_cb: Setting callback for event 8
[   81.624299] tisp_event_set_cb: Event 8 callback set to c067d934
[   81.624304] *** tisp_init: BINARY NINJA REFERENCE - No event processing thread created ***
[   81.624310] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   81.624315] tisp_param_operate_init: Initializing parameter operations
[   81.624323] tisp_netlink_init: Initializing netlink communication
[   81.624329] tisp_netlink_init: Trying standard NETLINK_GENERIC protocol (16)
[   81.624359] tisp_netlink_init: NETLINK_GENERIC failed, trying custom protocol 0x17
[   81.624369] tisp_netlink_init: Netlink socket created successfully
[   81.624375] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   81.624380] tisp_code_create_tuning_node: Device already created, skipping
[   81.624387] *** tisp_init: ISP HARDWARE PIPELINE FULLY INITIALIZED - THIS SHOULD TRIGGER REGISTER ACTIVITY ***
[   81.624393] *** tisp_init: All hardware blocks enabled, registers configured, events ready ***
[   81.624399] *** ispcore_core_ops_init_with_sensor: tisp_init SUCCESS - MIPI CSI should now be configured ***
[   81.624405] *** ispcore_core_ops_init_with_sensor: VIC already in state 4 (>= 3) ****** ispcore_core_ops_init_with_sensor: SUCCESS - Core initialized with sensor attributes ***
[   81.624414] ispcore_slake_module: Initializing channelsispcore_slake_module: Channel 0 enabled
[   81.624422] ispcore_slake_module: Channel 1 enabledispcore_slake_module: Channel 2 enabled
[   81.624430] ispcore_slake_module: Channel 3 enabledispcore_slake_module: Channel 4 enabled
[   81.624438] ispcore_slake_module: Channel 5 enabledispcore_slake_module: Calling VIC control function (0x4000001, 0)
[   81.624446] ispcore_slake_module: VIC control register written: 0x4000001ispcore_slake_module: Set VIC state to INIT (1)
[   81.624453] ispcore_slake_module: Processing subdevices*** DEBUG: isp_dev=85fb0000, isp_dev->subdevs=85fb3274 ***
[   81.624467] *** ispcore_slake_module: Calling slake_module for CSI subdev ***
[   81.624473] *** tx_isp_csi_slake_subdev: CSI slake/shutdown - current state=4 ***
[   81.624479] tx_isp_csi_slake_subdev: CSI in streaming state, stopping stream
[   81.624484] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   81.624491] csi_video_s_stream: sd=85219400, enable=0
[   81.624496] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   81.624505] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   81.624512] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   81.624517] csi_video_s_stream: Stream OFF - CSI state set to 3
[   81.624523] tx_isp_csi_slake_subdev: CSI in state 3, calling core_ops_init(disable)
[   81.624531] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=0
[   81.624538] tx_isp_csi_slake_subdev: CSI state 2->1, disabling clocks
[   81.624544] tx_isp_csi_slake_subdev: Disabled clock 1
[   81.624550] tx_isp_csi_slake_subdev: Disabled clock 0
[   81.624556] *** tx_isp_csi_slake_subdev: CSI slake complete, final state=1 ***
[   81.624561] ispcore_slake_module: CSI slake success
[   81.624565] *** ispcore_slake_module: Calling slake_module for VIC subdev ***
[   81.624572] *** tx_isp_vic_slake_subdev: ENTRY - sd=85fc0000 ***
[   81.624579] *** tx_isp_vic_slake_subdev: VIC slake/shutdown - vic_dev=85fc0000, current state=1 ***
[   81.624585] *** tx_isp_vic_slake_subdev: VIC slake complete, final state=1 ***
[   81.624591] ispcore_slake_module: VIC slake success
[   81.624595] *** ispcore_slake_module: All subdev slake operations completed using helper functions ***
[   81.624601] ispcore_slake_module: Managing ISP clocks
[   81.624605] ispcore_slake_module: Disabled IPU clockispcore_slake_module: Disabled ISP clock
[   81.624613] ispcore_slake_module: Complete, result=0<6>[   81.624619] *** ispcore_slake_module SUCCESS - ISP core should now be initialized ***
[   81.624625] *** vic_core_s_stream: VIC initialized, final state=1 ***
[   81.624632] *** tx_isp_video_s_stream: subdev[1] s_stream SUCCESS ***
[   81.624639] *** tx_isp_video_s_stream: Calling subdev[2]->ops->video->s_stream(1) ***
[   81.624646] *** vin_s_stream: SAFE implementation - sd=84cdf000, enable=1 ***
[   81.624653] vin_s_stream: VIN state = 3, enable = 1
[   81.624658] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   81.624665] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   81.624671] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   81.624677] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   81.624683] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   81.624689] *** tx_isp_video_s_stream: subdev[2] s_stream SUCCESS ***
[   81.624695] *** tx_isp_video_s_stream: Calling subdev[4]->ops->video->s_stream(1) ***
[   81.624702] gc2053: s_stream called with enable=1
[   81.624709] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   81.624715] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   81.624721] gc2053: About to write streaming registers for interface 1
[   81.624727] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   81.624737] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   81.625059] sensor_write: reg=0xfe val=0x00 SUCCESS
[   81.625068] sensor_write_array: reg[1] 0xfe=0x00 OK
[   81.625077] sensor_write: reg=0x3e val=0x91, client=8554dd00, adapter=i2c0, addr=0x37
[   81.625407] sensor_write: reg=0x3e val=0x91 SUCCESS
[   81.625415] sensor_write_array: reg[2] 0x3e=0x91 OK
[   81.625421] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   81.625428] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   81.625434] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   81.625440] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   81.625446] *** tx_isp_video_s_stream: subdev[4] s_stream SUCCESS ***
[   81.625453] *** tx_isp_video_s_stream: Calling subdev[5]->ops->video->s_stream(1) ***
[   81.625459] gc2053: s_stream called with enable=1
[   81.625465] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   81.625471] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   81.625477] gc2053: About to write streaming registers for interface 1
[   81.625483] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   81.625492] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   81.625804] sensor_write: reg=0xfe val=0x00 SUCCESS
[   81.625811] sensor_write_array: reg[1] 0xfe=0x00 OK
[   81.625819] sensor_write: reg=0x3e val=0x91, client=8554dd00, adapter=i2c0, addr=0x37
[   81.626133] sensor_write: reg=0x3e val=0x91 SUCCESS
[   81.626140] sensor_write_array: reg[2] 0x3e=0x91 OK
[   81.626147] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   81.626153] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   81.626159] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   81.626165] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   81.626171] *** tx_isp_video_s_stream: subdev[5] s_stream SUCCESS ***
[   81.626177] *** VIC POST-SENSOR REASSERT: re-applying routing/mask after sensor stream-on ***
[   81.665231] *** VIC POST-SENSOR REASSERT: No status bits asserted in 20ms window ***
[   81.665277] ISP IOCTL: cmd=0x800456d0 arg=0x7f8c56f0
[   81.665285] TX_ISP_VIDEO_LINK_SETUP: config=0
[   81.665291] TX_ISP_VIDEO_LINK_SETUP: Link config unchanged (0)
[   81.665299] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   81.665305] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   81.665311] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   81.665318] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   81.665325] VIC activated: state 1 -> 2 (READY)
[   81.665331] *** VIC ACTIVATION: Buffer allocation DEFERRED to prevent Wyze Cam memory exhaustion ***
[   81.665336] *** VIC ACTIVATION: Buffers will be allocated on-demand during QBUF operations ***
[   81.665342] *** VIC ACTIVATION: Free buffer list initialized (empty) - allocation deferred ***
[   81.665348] *** VIC ACTIVATION: Using GOOD-THINGS deferred buffer allocation strategy ***
[   81.665354] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   81.665361] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   81.665367] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   81.665374] csi_video_s_stream: sd=85219400, enable=1
[   81.665380] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   81.665389] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   81.665395] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   81.665402] *** CSI STREAMING: Configuring CSI hardware for streaming (current state=1) ***
[   81.665410] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=1
[   81.665415] *** CSI STREAMING: CSI hardware configured successfully for streaming ***
[   81.665421] csi_video_s_stream: Stream ON - CSI state set to 4
[   81.665428] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85fc0000, enable=1 ***
[   81.665435] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   81.665439] *** vic_core_s_stream: STREAM ON ***
[   81.665445] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   81.665451] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   81.665457] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   81.665464] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   81.665471] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   81.665476] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   81.665482] *** STREAMING: Configuring CPM registers for VIC access ***
[   81.689266] STREAMING: CPM clocks configured for VIC access
[   81.689281] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   81.689287] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   81.689293] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   81.689299] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   81.689305] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   81.689311] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   81.689320] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   81.689327] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   81.689334] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   81.689339] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   81.689345] *** VIC unlock: Commands written, checking VIC status register ***
[   81.689352] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   81.689357] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   81.689363] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   81.689369] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   81.689375] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   81.689380] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   81.689456] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   81.689465] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   81.689471] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   81.689479] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   81.689485] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   81.689492] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   81.689498] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   81.689504] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   81.689510] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   81.689516] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   81.689523] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000001) ***
[   81.689528] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   81.689534] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   81.689541] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   81.689547] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   81.689552] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   81.689559] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   81.689565] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   81.689571] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   81.689577] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   81.689584] *** ISP CORE VERIFY: 0x30=0x8fffffff, 0x10=0x00000133 ***
[   81.689589] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   81.689599] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x07800438, 0x0c=0x00000001, 0x100=0x000002d0, 0x14=0x00000001 ***
[   81.689605] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   81.689611] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   81.689619] *** VIC INTERRUPT: imr_ok=1, imcr_ok=0, config_ok=1, control_ok=0 ***
[   81.689625] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   81.689631] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   81.689636] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   81.689642] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   81.689648] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   81.689654] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   81.689662] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   81.689669] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   81.689675] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   81.689681] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   81.689687] ispvic_frame_channel_s_stream: arg1=85fc0000, arg2=1
[   81.689693] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85fc0000
[   81.689700] ispvic_frame_channel_s_stream[2441]: streamon
[   81.689707] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   81.689713] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   81.689718] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   81.689724] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   81.689729] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   81.689737] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   81.689742] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   81.689749] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   81.689755] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   81.689761] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   81.689767] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   81.689773] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   81.689779] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   81.689787] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   81.689795] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   81.689802] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   81.689810] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   81.689817] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   81.689823] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   81.689829] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   81.689835] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   81.689842] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   81.689848] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   81.689854] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   81.689859] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   81.689866] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   81.689871] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   81.689884] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x07800438 [0x300]=0x80040020 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   81.689893] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x000002d0 [0x14]=0x00000001 (PRIMARY 0x14=stride) ***
[   81.689957] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   81.689968] *** VIC BUFS (PRIMARY): [0x318]=0x06300000 [0x31c]=0x066f4800 [0x320]=0x06ae9000 [0x324]=0x06edd800 [0x328]=0x072d2000 ***
[   81.689975] *** VIC CTRL (PRIMARY): [0x300]=0x80040020 ***
[   81.689983] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   81.689990] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   81.689995] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   81.690001] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   81.690009] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   81.691017] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   81.691023] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   81.691028] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   81.691136] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   81.691243] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   81.691251] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   81.691257] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   81.691262] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   81.691268] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   81.691274] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   81.691282] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   81.691287] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   81.691293] *** tx_vic_enable_irq: completed successfully ***
root@ing-wyze-cam3-a000 ~# [INFO:WS.cpp]: Server started on port 8089
dset jpeg streamMngCtx suceess
root@ing-wyze-cam3-a000 ~# dmesg [INFO:RTSP.cpp]: stream 0 available at: rtsp://192.168.50.211/ch0
[INFO:RTSP.cpp]: stream 1 available at: rtsp://192.168.50.211/ch1

[   81.689700] ispvic_frame_channel_s_stream[2441]: streamon
[   81.689707] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   81.689713] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   81.689718] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   81.689724] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   81.689729] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   81.689737] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   81.689742] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   81.689749] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   81.689755] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   81.689761] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   81.689767] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   81.689773] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   81.689779] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   81.689787] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   81.689795] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   81.689802] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   81.689810] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   81.689817] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   81.689823] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   81.689829] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   81.689835] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   81.689842] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   81.689848] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   81.689854] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   81.689859] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   81.689866] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   81.689871] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   81.689884] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x07800438 [0x300]=0x80040020 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   81.689893] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x000002d0 [0x14]=0x00000001 (PRIMARY 0x14=stride) ***
[   81.689957] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   81.689968] *** VIC BUFS (PRIMARY): [0x318]=0x06300000 [0x31c]=0x066f4800 [0x320]=0x06ae9000 [0x324]=0x06edd800 [0x328]=0x072d2000 ***
[   81.689975] *** VIC CTRL (PRIMARY): [0x300]=0x80040020 ***
[   81.689983] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   81.689990] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   81.689995] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   81.690001] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   81.690009] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   81.691017] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   81.691023] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   81.691028] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   81.691136] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   81.691243] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   81.691251] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   81.691257] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   81.691262] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   81.691268] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   81.691274] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   81.691282] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   81.691287] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   81.691293] *** tx_vic_enable_irq: completed successfully ***
[   82.107821] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   82.107836] *** vic_core_s_stream: VIC state 2 - letting tx_isp_video_s_stream handle state 2 → 3 transition ***
[   82.107842] *** vic_core_s_stream: VIC initialized, final state=2 ***
[   82.107851] *** vin_s_stream: SAFE implementation - sd=84cdf000, enable=1 ***
[   82.107858] vin_s_stream: VIN state = 4, enable = 1
[   82.107864] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   82.107874] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   82.107880] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   82.107886] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   82.107892] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   82.107900] gc2053: s_stream called with enable=1
[   82.107907] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   82.107913] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   82.107920] gc2053: About to write streaming registers for interface 1
[   82.107926] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   82.107935] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.118402] sensor_write: reg=0xfe val=0x00 SUCCESS
[   82.118415] sensor_write_array: reg[1] 0xfe=0x00 OK
[   82.118426] sensor_write: reg=0x3e val=0x91, client=8554dd00, adapter=i2c0, addr=0x37
[   82.118742] sensor_write: reg=0x3e val=0x91 SUCCESS
[   82.118749] sensor_write_array: reg[2] 0x3e=0x91 OK
[   82.118755] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   82.118762] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   82.118768] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   82.118774] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   82.118782] gc2053: s_stream called with enable=1
[   82.118788] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   82.118794] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   82.118801] gc2053: About to write streaming registers for interface 1
[   82.118807] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   82.118816] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.119136] sensor_write: reg=0xfe val=0x00 SUCCESS
[   82.119142] sensor_write_array: reg[1] 0xfe=0x00 OK
[   82.119151] sensor_write: reg=0x3e val=0x91, client=8554dd00, adapter=i2c0, addr=0x37
[   82.119490] sensor_write: reg=0x3e val=0x91 SUCCESS
[   82.119498] sensor_write_array: reg[2] 0x3e=0x91 OK
[   82.119504] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   82.119511] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   82.119517] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   82.119523] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   82.339136] ISP M0 device open called from pid 2485
[   82.339212] *** REFERENCE DRIVER IMPLEMENTATION ***
[   82.339222] ISP M0 tuning buffer allocated: 81160000 (size=0x500c, aligned)
[   82.339228] tisp_par_ioctl global variable set: 81160000
[   82.339289] isp_core_tunning_unlocked_ioctl: Auto-initializing tuning for V4L2 control (one-time)
[   82.339298] isp_core_tunning_unlocked_ioctl: Initializing tuning data structure
[   82.339304] isp_core_tuning_init: Initializing tuning data structure
[   82.339324] isp_core_tuning_init: Tuning data structure initialized at 81168000
[   82.339332] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   82.339337] *** SAFE: mode_flag properly initialized using struct member access ***
[   82.339344] isp_core_tunning_unlocked_ioctl: Tuning data allocated at 81168000
[   82.339349] *** BINARY NINJA REFERENCE: Skipping auto-initialization - no hardware reset during tuning setup ***
[   82.339355] isp_core_tunning_unlocked_ioctl: ISP tuning auto-enabled for V4L2 controls (permanent)
[   82.339362] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.339370] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   82.339375] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   82.339381] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   82.339386] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   82.339412] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561b
[   82.339419] isp_core_tunning_unlocked_ioctl: Get control cmd=0x980900
[   82.339425] CRITICAL: Cannot access brightness field - PREVENTS BadVA CRASH
[   82.339433] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561b
[   82.339440] isp_core_tunning_unlocked_ioctl: Get control cmd=0x980902
[   82.339446] CRITICAL: Cannot access saturation field at 81168024 - PREVENTING BadVA CRASH
[   82.339808] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.339820] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980901 value=128
[   82.339828] Set control: cmd=0x980901 value=128
[   82.339892] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.339900] isp_core_tunning_unlocked_ioctl: Set control cmd=0x98091b value=128
[   82.339906] Set control: cmd=0x98091b value=128
[   82.339965] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.339973] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980902 value=128
[   82.339980] Set control: cmd=0x980902 value=128
[   82.339986] tisp_bcsh_saturation: saturation=128
[   82.339991] tiziano_bcsh_update: Updating BCSH parameters
[   82.339999]   Brightness: 128, Contrast: 128, Saturation: 128, Hue: 0
[   82.340004] tiziano_bcsh_update: BCSH update completed (simplified implementation)
[   82.340065] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.340073] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980900 value=128
[   82.340080] Set control: cmd=0x980900 value=128
[   82.340156] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.340164] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980901 value=128
[   82.340170] Set control: cmd=0x980901 value=128
[   82.340228] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.340236] isp_core_tunning_unlocked_ioctl: Set control cmd=0x98091b value=128
[   82.340243] Set control: cmd=0x98091b value=128
[   82.340302] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.340310] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980902 value=128
[   82.340316] Set control: cmd=0x980902 value=128
[   82.340322] tisp_bcsh_saturation: saturation=128
[   82.340327] tiziano_bcsh_update: Updating BCSH parameters
[   82.340334]   Brightness: 128, Contrast: 128, Saturation: 128, Hue: 0
[   82.340340] tiziano_bcsh_update: BCSH update completed (simplified implementation)
[   82.340400] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.340408] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980900 value=128
[   82.340414] Set control: cmd=0x980900 value=128
[   82.340479] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.340488] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.340494] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.340564] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.340572] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.340578] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.341694] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.341707] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980914 value=0
[   82.341714] Set control: cmd=0x980914 value=0
[   82.341895] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.341905] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980915 value=0
[   82.341912] Set control: cmd=0x980915 value=0
[   82.342036] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.342046] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.342052] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.342198] ISP IOCTL: cmd=0x800456d3 arg=0x0
[   82.342209] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=0 ***
[   82.342216] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   82.342224] csi_video_s_stream: sd=85219400, enable=0
[   82.342230] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   82.342238] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   82.342245] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   82.342251] csi_video_s_stream: Stream OFF - CSI state set to 3
[   82.342259] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85fc0000, enable=0 ***
[   82.342266] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   82.342270] *** vic_core_s_stream: STREAM OFF ***
[   82.342278] *** vin_s_stream: SAFE implementation - sd=84cdf000, enable=0 ***
[   82.342284] vin_s_stream: VIN state = 4, enable = 0
[   82.342290] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   82.342297] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   82.342303] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   82.342309] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   82.342314] vin_s_stream: VIN state set to 3 (SAFE implementation)
[   82.342322] gc2053: s_stream called with enable=0
[   82.342330] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   82.342336] gc2053: *** STOPPING SENSOR HARDWARE STREAMING ***
[   82.342342] gc2053: Writing MIPI stream OFF registers (0x3e=0x00)
[   82.342351] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.342676] sensor_write: reg=0xfe val=0x00 SUCCESS
[   82.342683] sensor_write_array: reg[1] 0xfe=0x00 OK
[   82.342692] sensor_write: reg=0x3e val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.343365] sensor_write: reg=0x3e val=0x00 SUCCESS
[   82.343377] sensor_write_array: reg[2] 0x3e=0x00 OK
[   82.343384] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   82.343391] gc2053: Sensor hardware streaming stopped
[   82.343398] gc2053: s_stream called with enable=0
[   82.343405] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   82.343411] gc2053: *** STOPPING SENSOR HARDWARE STREAMING ***
[   82.343417] gc2053: Writing MIPI stream OFF registers (0x3e=0x00)
[   82.343426] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.346869] sensor_write: reg=0xfe val=0x00 SUCCESS
[   82.346882] sensor_write_array: reg[1] 0xfe=0x00 OK
[   82.346892] sensor_write: reg=0x3e val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.347208] sensor_write: reg=0x3e val=0x00 SUCCESS
[   82.347214] sensor_write_array: reg[2] 0x3e=0x00 OK
[   82.347221] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   82.347228] gc2053: Sensor hardware streaming stopped
[   82.347243] ISP IOCTL: cmd=0x800456d1 arg=0x7f8c56f0
[   82.347250] tx_isp_video_link_destroy: Destroying links for config 0
[   82.347258] tx_isp_video_link_destroy: All links destroyed, config reset to -1
[   82.347267] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.347274] isp_core_tunning_unlocked_ioctl: Set control cmd=0x8000164 value=1
[   82.347281] Set control: cmd=0x8000164 value=1
[   82.347289] ISP IOCTL: cmd=0x800456d0 arg=0x7f8c56f0
[   82.347295] TX_ISP_VIDEO_LINK_SETUP: config=0
[   82.347301] TX_ISP_VIDEO_LINK_SETUP: Link config changed from -1 to 0
[   82.347306] TX_ISP_VIDEO_LINK_SETUP: Link config updated to 0
[   82.347313] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   82.347320] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   82.347326] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   82.347332] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   82.347340] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   82.347346] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   82.347352] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   82.347358] csi_video_s_stream: sd=85219400, enable=1
[   82.347364] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   82.347372] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   82.347379] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   82.347386] *** CSI STREAMING: Configuring CSI hardware for streaming (current state=3) ***
[   82.347394] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=1
[   82.347399] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   82.347406] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   82.347412] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   82.347418] *** csi_core_ops_init: interface_type=1 (1=MIPI, 2=DVP) ***
[   82.347716] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.347727] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   82.347733] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   82.347739] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   82.347744] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   82.399189] *** CRITICAL: Triggering CSI hardware state machine for CSI Lane Config ***
[   82.399205] *** CRITICAL: VIC registers 0x160/0x1e0/0x260 configured with value 0xb ***
[   82.419201] *** CRITICAL: CSI hardware state machine trigger sequence completed ***
[   82.419214] *** CSI Lane Config writes should now be generated automatically by hardware ***
[   82.419221] *** CSI STREAMING: CSI hardware configured successfully for streaming ***
[   82.419226] csi_video_s_stream: Stream ON - CSI state set to 4
[   82.419236] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85fc0000, enable=1 ***
[   82.419242] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   82.419248] *** vic_core_s_stream: STREAM ON ***
[   82.419254] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   82.419259] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   82.419266] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   82.419276] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   82.419282] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   82.419288] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   82.419294] *** STREAMING: Configuring CPM registers for VIC access ***
[   82.449216] STREAMING: CPM clocks configured for VIC access
[   82.449230] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   82.449236] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   82.449244] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   82.449250] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   82.449255] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   82.449261] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   82.449270] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   82.449276] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   82.449284] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   82.449290] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   82.449295] *** VIC unlock: Commands written, checking VIC status register ***
[   82.449302] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   82.449308] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   82.449314] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   82.449319] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   82.449324] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   82.449330] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   82.449404] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   82.449412] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   82.449418] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   82.449426] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   82.449432] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   82.449439] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   82.449446] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   82.449451] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   82.449457] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   82.449463] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   82.449470] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000001) ***
[   82.449475] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   82.449481] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   82.449488] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   82.449494] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   82.449499] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   82.449506] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   82.449512] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   82.449518] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   82.449523] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   82.449530] *** ISP CORE VERIFY: 0x30=0x8fffffff, 0x10=0x00000133 ***
[   82.449536] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   82.449546] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x07800438, 0x0c=0x00000001, 0x100=0x000002d0, 0x14=0x00000001 ***
[   82.449552] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   82.449558] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   82.449566] *** VIC INTERRUPT: imr_ok=1, imcr_ok=0, config_ok=1, control_ok=0 ***
[   82.449572] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   82.449577] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   82.449583] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   82.449588] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   82.449595] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   82.449601] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   82.449609] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   82.449616] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   82.449621] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   82.449628] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   82.449634] ispvic_frame_channel_s_stream: arg1=85fc0000, arg2=1
[   82.449640] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85fc0000
[   82.449647] ispvic_frame_channel_s_stream[2441]: streamon
[   82.449654] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   82.449660] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   82.449665] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   82.449671] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   82.449676] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   82.449684] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   82.449689] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   82.449696] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   82.449702] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   82.449708] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   82.449714] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   82.449720] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   82.449726] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   82.449734] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   82.449741] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   82.449749] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   82.449756] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   82.449764] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   82.449770] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   82.449776] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   82.449782] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   82.449788] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   82.449795] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   82.449800] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   82.449806] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   82.449813] ispvic_frame_channel_qbuf: arg1=85fc0000, arg2=  (null)
[   82.449818] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   82.449831] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x07800438 [0x300]=0x80040020 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   82.449839] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x000002d0 [0x14]=0x00000001 (PRIMARY 0x14=stride) ***
[   82.449904] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   82.449915] *** VIC BUFS (PRIMARY): [0x318]=0x06300000 [0x31c]=0x066f4800 [0x320]=0x06ae9000 [0x324]=0x06edd800 [0x328]=0x072d2000 ***
[   82.449922] *** VIC CTRL (PRIMARY): [0x300]=0x80040020 ***
[   82.449930] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   82.449937] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   82.449942] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   82.449948] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   82.449956] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   82.450964] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   82.450970] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   82.450975] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   82.451083] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   82.451191] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   82.451198] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   82.451204] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   82.451209] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   82.451215] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   82.451221] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   82.451229] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   82.451235] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   82.451240] *** tx_vic_enable_irq: completed successfully ***
[   82.859252] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   82.859267] *** vic_core_s_stream: VIC state 2 - letting tx_isp_video_s_stream handle state 2 → 3 transition ***
[   82.859273] *** vic_core_s_stream: VIC initialized, final state=2 ***
[   82.859283] *** vin_s_stream: SAFE implementation - sd=84cdf000, enable=1 ***
[   82.859289] vin_s_stream: VIN state = 3, enable = 1
[   82.859295] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   82.859305] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   82.859311] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   82.859317] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   82.859323] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   82.859331] gc2053: s_stream called with enable=1
[   82.859338] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   82.859344] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   82.859351] gc2053: About to write streaming registers for interface 1
[   82.859357] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   82.859367] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.859686] sensor_write: reg=0xfe val=0x00 SUCCESS
[   82.859693] sensor_write_array: reg[1] 0xfe=0x00 OK
[   82.859702] sensor_write: reg=0x3e val=0x91, client=8554dd00, adapter=i2c0, addr=0x37
[   82.860021] sensor_write: reg=0x3e val=0x91 SUCCESS
[   82.860028] sensor_write_array: reg[2] 0x3e=0x91 OK
[   82.860035] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   82.860041] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   82.860047] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   82.860053] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   82.860060] gc2053: s_stream called with enable=1
[   82.860067] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   82.860072] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   82.860079] gc2053: About to write streaming registers for interface 1
[   82.860085] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   82.860093] sensor_write: reg=0xfe val=0x00, client=8554dd00, adapter=i2c0, addr=0x37
[   82.860407] sensor_write: reg=0xfe val=0x00 SUCCESS
[   82.860415] sensor_write_array: reg[1] 0xfe=0x00 OK
[   82.860423] sensor_write: reg=0x3e val=0x91, client=8554dd00, adapter=i2c0, addr=0x37
[   82.860737] sensor_write: reg=0x3e val=0x91 SUCCESS
[   82.860743] sensor_write_array: reg[2] 0x3e=0x91 OK
[   82.860750] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   82.860756] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   82.860762] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   82.860768] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   82.861007] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   82.861020] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980918 value=2
[   82.861027] Set control: cmd=0x980918 value=2
[   82.861172] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.861183] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.861189] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.861327] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.861336] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.861341] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.861466] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.861475] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.861481] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.861594] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.861603] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.861609] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.861757] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.861767] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.861772] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.861896] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.861905] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.861911] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.862038] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.862046] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.862052] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.862179] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.862188] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.862193] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.862406] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.862415] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.862421] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   82.862549] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   82.862558] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   82.862564] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   83.180199] *** FRAME CHANNEL OPEN: minor=54 ***
[   83.180211] *** FRAME CHANNEL OPEN: Device not in array, creating new entry for minor 54 ***
[   83.180218] *** FRAME CHANNEL OPEN: Assigned to channel 0 ***
[   83.180225] *** FRAME CHANNEL 0: State set to 3 (ready for streaming) - Binary Ninja EXACT ***
[   83.180230] *** SAFE: Frame channel device stored in file->private_data ***
[   83.180236] *** FRAME CHANNEL 0 OPENED SUCCESSFULLY - NOW READY FOR IOCTLS ***
[   83.180245] Channel 0: Format 1920x1080, pixfmt=0x32315659, minor=54
[   83.180263] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc07056c3 ***
[   83.180271] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc07056c3 ***
[   83.180279] Channel 0: Set format 1920x1080 pixfmt=0x3231564e
[   83.180873] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0145608 ***
[   83.180883] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc0145608 ***
[   83.180890] *** Channel 0: REQBUFS - MEMORY-AWARE implementation ***
[   83.180897] Channel 0: Request 4 buffers, type=1 memory=2
[   83.180903] Channel 0: USERPTR mode - client will provide buffers
[   83.180909] Channel 0: USERPTR mode - 4 user buffers expected
[   83.180919] *** Channel 0: REQBUFS allocated VBM buffer array for 4 buffers at 820e4b80 ***
[   83.180927] *** Channel 0: VIC active_buffer_count set to 4 ***
[   83.180932] *** REQBUFS: VIC DMA will be configured during streaming via vic_pipo_mdma_enable ***
[   83.180939] *** Channel 0: MEMORY-AWARE REQBUFS SUCCESS - 4 buffers ***
[   83.180963] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.180971] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.180977] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.180984] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   83.180991] *** Channel 0: QBUF - Buffer received: index=0, type=1, memory=2 ***
[   83.180999] *** Channel 0: QBUF - Buffer m.offset=0x70d9000, m.userptr=0x70d9000 ***
[   83.181005] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.181013] *** Channel 0: QBUF - Validation: buffer.index=0, state->buffer_count=4 ***
[   83.181019] *** Channel 0: QBUF - Queue buffer index=0 ***
[   83.181025] *** QBUF: No buffer allocated for index 0 - VBM initialization mode ***
[   83.181033] *** Channel 0: QBUF - Using buffer struct   (null) for index 0 ***
[   83.181039] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   83.181046] *** Channel 0: QBUF EVENT - No VIC callback ***
[   83.181053] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x70d9000 ***
[   83.181061] *** Channel 0: QBUF - Buffer 0: phys_addr=0x70d9000, size=4147200 (VALIDATED) ***
[   83.181069] *** Channel 0: QBUF VBM - Stored buffer[0] = 0x70d9000, total_count=1 ***
[   83.181077] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=820e4b80, vbm_buffer_count=1 ***
[   83.181083] *** Channel 0: QBUF - VBM buffer slot[0] available ***
[   83.181090] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x70d9000 ***
[   83.181097] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   83.181108] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.181115] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.181121] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.181127] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   83.181135] *** Channel 0: QBUF - Buffer received: index=1, type=1, memory=2 ***
[   83.181142] *** Channel 0: QBUF - Buffer m.offset=0x73d6000, m.userptr=0x73d6000 ***
[   83.181149] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.181156] *** Channel 0: QBUF - Validation: buffer.index=1, state->buffer_count=4 ***
[   83.181162] *** Channel 0: QBUF - Queue buffer index=1 ***
[   83.181168] *** QBUF: No buffer allocated for index 1 - VBM initialization mode ***
[   83.181175] *** Channel 0: QBUF - Using buffer struct   (null) for index 1 ***
[   83.181181] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   83.181187] *** Channel 0: QBUF EVENT - No VIC callback ***
[   83.181194] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x73d6000 ***
[   83.181201] *** Channel 0: QBUF - Buffer 1: phys_addr=0x73d6000, size=4147200 (VALIDATED) ***
[   83.181209] *** Channel 0: QBUF VBM - Stored buffer[1] = 0x73d6000, total_count=2 ***
[   83.181217] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=820e4b80, vbm_buffer_count=2 ***
[   83.181223] *** Channel 0: QBUF - VBM buffer slot[1] available ***
[   83.181230] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x73d6000 ***
[   83.181237] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   83.181245] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.181252] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.181258] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.181264] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   83.181271] *** Channel 0: QBUF - Buffer received: index=2, type=1, memory=2 ***
[   83.181279] *** Channel 0: QBUF - Buffer m.offset=0x76d3000, m.userptr=0x76d3000 ***
[   83.181286] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.181293] *** Channel 0: QBUF - Validation: buffer.index=2, state->buffer_count=4 ***
[   83.181299] *** Channel 0: QBUF - Queue buffer index=2 ***
[   83.181305] *** QBUF: No buffer allocated for index 2 - VBM initialization mode ***
[   83.181312] *** Channel 0: QBUF - Using buffer struct   (null) for index 2 ***
[   83.181318] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   83.181324] *** Channel 0: QBUF EVENT - No VIC callback ***
[   83.181331] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x76d3000 ***
[   83.181339] *** Channel 0: QBUF - Buffer 2: phys_addr=0x76d3000, size=4147200 (VALIDATED) ***
[   83.181347] *** Channel 0: QBUF VBM - Stored buffer[2] = 0x76d3000, total_count=3 ***
[   83.181354] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=820e4b80, vbm_buffer_count=3 ***
[   83.181361] *** Channel 0: QBUF - VBM buffer slot[2] available ***
[   83.181367] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x76d3000 ***
[   83.181374] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   83.181382] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.181389] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.181395] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.181401] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   83.181408] *** Channel 0: QBUF - Buffer received: index=3, type=1, memory=2 ***
[   83.181415] *** Channel 0: QBUF - Buffer m.offset=0x79d0000, m.userptr=0x79d0000 ***
[   83.181423] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.181429] *** Channel 0: QBUF - Validation: buffer.index=3, state->buffer_count=4 ***
[   83.181436] *** Channel 0: QBUF - Queue buffer index=3 ***
[   83.181442] *** QBUF: No buffer allocated for index 3 - VBM initialization mode ***
[   83.181449] *** Channel 0: QBUF - Using buffer struct   (null) for index 3 ***
[   83.181455] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   83.181461] *** Channel 0: QBUF EVENT - No VIC callback ***
[   83.181467] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x79d0000 ***
[   83.181475] *** Channel 0: QBUF - Buffer 3: phys_addr=0x79d0000, size=4147200 (VALIDATED) ***
[   83.181483] *** Channel 0: QBUF VBM - Stored buffer[3] = 0x79d0000, total_count=4 ***
[   83.181491] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=820e4b80, vbm_buffer_count=4 ***
[   83.181497] *** Channel 0: QBUF - VBM buffer slot[3] available ***
[   83.181504] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x79d0000 ***
[   83.181510] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   83.181602] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x80045612 ***
[   83.181612] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x80045612 ***
[   83.181619] *** Channel 0: VIDIOC_STREAMON - Binary Ninja implementation ***
[   83.181625] Channel 0: STREAMON - Enqueuing buffers in driver
[   83.181631] *** Channel 0: STREAMON - Core device is stateless, only managing streaming flag ***
[   83.183408] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.183422] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.183429] *** Channel 0: Frame completion wait ***
[   83.183434] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.183441] *** Channel 0: Frame wait returned 10 ***
[   83.183447] *** Channel 0: Frame was ready, consuming it ***
[   83.183551] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0445611 ***
[   83.183560] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc0445611 ***
[   83.183567] *** Channel 0: DQBUF - dequeue buffer request ***
[   83.183572] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   83.183583] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   83.183589] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   83.183596] *** Channel 0: DQBUF waiting for frame completion (timeout=200ms) ***
[   83.183805] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.183817] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.183823] *** Channel 0: Frame completion wait ***
[   83.183829] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.236015] *** FRAME CHANNEL OPEN: minor=53 ***
[   83.236027] *** FRAME CHANNEL OPEN: Device not in array, creating new entry for minor 53 ***
[   83.236034] *** FRAME CHANNEL OPEN: Assigned to channel 1 ***
[   83.236041] *** FRAME CHANNEL 1: State set to 3 (ready for streaming) - Binary Ninja EXACT ***
[   83.236046] *** SAFE: Frame channel device stored in file->private_data ***
[   83.236052] *** FRAME CHANNEL 1 OPENED SUCCESSFULLY - NOW READY FOR IOCTLS ***
[   83.236061] Channel 1: Format 640x360, pixfmt=0x32315659, minor=53
[   83.236078] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc07056c3 ***
[   83.236086] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0xc07056c3 ***
[   83.236094] Channel 1: Set format 640x360 pixfmt=0x3231564e
[   83.236937] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0145608 ***
[   83.236947] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0xc0145608 ***
[   83.236954] *** Channel 1: REQBUFS - MEMORY-AWARE implementation ***
[   83.236961] Channel 1: Request 2 buffers, type=1 memory=2
[   83.236967] Channel 1: USERPTR mode - client will provide buffers
[   83.236973] Channel 1: USERPTR mode - 2 user buffers expected
[   83.236983] *** Channel 1: REQBUFS allocated VBM buffer array for 2 buffers at 820e4880 ***
[   83.236990] *** Channel 1: VIC active_buffer_count set to 2 ***
[   83.236996] *** REQBUFS: VIC DMA will be configured during streaming via vic_pipo_mdma_enable ***
[   83.237003] *** Channel 1: MEMORY-AWARE REQBUFS SUCCESS - 2 buffers ***
[   83.237016] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.237023] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.237029] *** Channel 1: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.237036] *** Channel 1: QBUF - Buffer copied from user successfully ***
[   83.237043] *** Channel 1: QBUF - Buffer received: index=0, type=1, memory=2 ***
[   83.237051] *** Channel 1: QBUF - Buffer m.offset=0x7e07100, m.userptr=0x7e07100 ***
[   83.237057] *** Channel 1: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.237065] *** Channel 1: QBUF - Validation: buffer.index=0, state->buffer_count=2 ***
[   83.237071] *** Channel 1: QBUF - Queue buffer index=0 ***
[   83.237077] *** QBUF: No buffer allocated for index 0 - VBM initialization mode ***
[   83.237085] *** Channel 1: QBUF - Using buffer struct   (null) for index 0 ***
[   83.237092] *** Channel 1: QBUF - Using REAL buffer address from userptr: 0x7e07100 ***
[   83.237101] *** Channel 1: QBUF - Buffer 0: phys_addr=0x7e07100, size=460800 (VALIDATED) ***
[   83.237108] *** Channel 1: QBUF VBM - Stored buffer[0] = 0x7e07100, total_count=1 ***
[   83.237116] *** Channel 1: QBUF - VBM buffer check: vbm_buffer_addresses=820e4880, vbm_buffer_count=1 ***
[   83.237123] *** Channel 1: QBUF - VBM buffer slot[0] available ***
[   83.237129] *** Channel 1: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x7e07100 ***
[   83.237137] *** Channel 1: QBUF completed successfully (MIPS-safe) ***
[   83.237146] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.237153] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.237159] *** Channel 1: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.237165] *** Channel 1: QBUF - Buffer copied from user successfully ***
[   83.237173] *** Channel 1: QBUF - Buffer received: index=1, type=1, memory=2 ***
[   83.237180] *** Channel 1: QBUF - Buffer m.offset=0x7e5d500, m.userptr=0x7e5d500 ***
[   83.237187] *** Channel 1: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.237194] *** Channel 1: QBUF - Validation: buffer.index=1, state->buffer_count=2 ***
[   83.237200] *** Channel 1: QBUF - Queue buffer index=1 ***
[   83.237206] *** QBUF: No buffer allocated for index 1 - VBM initialization mode ***
[   83.237213] *** Channel 1: QBUF - Using buffer struct   (null) for index 1 ***
[   83.237220] *** Channel 1: QBUF - Using REAL buffer address from userptr: 0x7e5d500 ***
[   83.237228] *** Channel 1: QBUF - Buffer 1: phys_addr=0x7e5d500, size=460800 (VALIDATED) ***
[   83.237235] *** Channel 1: QBUF VBM - Stored buffer[1] = 0x7e5d500, total_count=2 ***
[   83.237243] *** Channel 1: QBUF - VBM buffer check: vbm_buffer_addresses=820e4880, vbm_buffer_count=2 ***
[   83.237249] *** Channel 1: QBUF - VBM buffer slot[1] available ***
[   83.237256] *** Channel 1: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x7e5d500 ***
[   83.237263] *** Channel 1: QBUF completed successfully (MIPS-safe) ***
[   83.237355] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x80045612 ***
[   83.237365] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x80045612 ***
[   83.237373] *** Channel 1: VIDIOC_STREAMON - Binary Ninja implementation ***
[   83.237379] Channel 1: STREAMON - Enqueuing buffers in driver
[   83.237385] *** Channel 1: STREAMON - Core device is stateless, only managing streaming flag ***
[   83.241098] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.241111] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.241118] *** Channel 1: Frame completion wait ***
[   83.241124] *** Channel 1: Waiting for frame (timeout=100ms) ***
[   83.241131] *** Channel 1: Frame wait returned 10 ***
[   83.241136] *** Channel 1: Frame was ready, consuming it ***
[   83.241195] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0445611 ***
[   83.241203] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0xc0445611 ***
[   83.241209] *** Channel 1: DQBUF - dequeue buffer request ***
[   83.241215] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   83.241225] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   83.241232] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   83.241239] *** Channel 1: DQBUF waiting for frame completion (timeout=200ms) ***
[   83.241255] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.241262] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.241268] *** Channel 1: Frame completion wait ***
[   83.241273] *** Channel 1: Waiting for frame (timeout=100ms) ***
[   83.279844] *** Channel 0: Frame wait returned 0 ***
[   83.279856] *** Channel 0: Frame wait timeout/error, generating frame ***
[   83.279876] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.279883] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.279890] *** Channel 0: Frame completion wait ***
[   83.279895] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.279901] *** Channel 0: Frame wait returned 10 ***
[   83.279907] *** Channel 0: Frame was ready, consuming it ***
[   83.279915] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.279922] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.279928] *** Channel 0: Frame completion wait ***
[   83.279933] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.339140] *** Channel 1: Frame wait returned 0 ***
[   83.339152] *** Channel 1: Frame wait timeout/error, generating frame ***
[   83.339174] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.339182] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.339189] *** Channel 1: Frame completion wait ***
[   83.339194] *** Channel 1: Waiting for frame (timeout=100ms) ***
[   83.339201] *** Channel 1: Frame wait returned 10 ***
[   83.339206] *** Channel 1: Frame was ready, consuming it ***
[   83.339214] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.339221] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.339226] *** Channel 1: Frame completion wait ***
[   83.339232] *** Channel 1: Waiting for frame (timeout=100ms) ***
[   83.348028] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   83.348040] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   83.348046] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   83.348052] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   83.348058] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   83.379142] *** Channel 0: DQBUF wait returned 0 ***
[   83.379154] *** Channel 0: DQBUF timeout, generating frame ***
[   83.379163] *** Channel 0: DQBUF complete - buffer[0] seq=-1 flags=0x3 ***
[   83.379202] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   83.379210] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   83.379217] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   83.379223] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   83.379228] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   83.379352] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0445611 ***
[   83.379362] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc0445611 ***
[   83.379368] *** Channel 0: DQBUF - dequeue buffer request ***
[   83.379374] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   83.379384] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   83.379390] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   83.379397] *** Channel 0: DQBUF waiting for frame completion (timeout=200ms) ***
[   83.379415] *** Channel 0: Frame wait returned 0 ***
[   83.379422] *** Channel 0: Frame wait timeout/error, generating frame ***
[   83.379434] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.379442] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.379448] *** Channel 0: Frame completion wait ***
[   83.379454] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.379460] *** Channel 0: Frame wait returned 10 ***
[   83.379466] *** Channel 0: Frame was ready, consuming it ***
[   83.379473] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.379480] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.379486] *** Channel 0: Frame completion wait ***
[   83.379491] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.389243] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.389256] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.389263] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.389269] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   83.389277] *** Channel 0: QBUF - Buffer received: index=0, type=1, memory=2 ***
[   83.389284] *** Channel 0: QBUF - Buffer m.offset=0x70d9000, m.userptr=0x70d9000 ***
[   83.389291] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.389298] *** Channel 0: QBUF - Validation: buffer.index=0, state->buffer_count=4 ***
[   83.389305] *** Channel 0: QBUF - Queue buffer index=0 ***
[   83.389310] *** QBUF: No buffer allocated for index 0 - VBM initialization mode ***
[   83.389318] *** Channel 0: QBUF - Using buffer struct   (null) for index 0 ***
[   83.389325] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   83.389332] *** Channel 0: QBUF EVENT - No VIC callback ***
[   83.389339] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x70d9000 ***
[   83.389347] *** Channel 0: QBUF - Buffer 0: phys_addr=0x70d9000, size=4147200 (VALIDATED) ***
[   83.389355] *** Channel 0: QBUF VBM - Stored buffer[0] = 0x70d9000, total_count=4 ***
[   83.389362] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=820e4b80, vbm_buffer_count=4 ***
[   83.389369] *** Channel 0: QBUF - VBM buffer slot[0] available ***
[   83.389376] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x70d9000 ***
[   83.389390] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   83.389509] *** Channel 0: Frame wait returned 9 ***
[   83.389517] *** Channel 0: Frame was ready, consuming it ***
[   83.389530] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.389538] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.389544] *** Channel 0: Frame completion wait ***
[   83.389550] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.439116] *** Channel 1: DQBUF wait returned 0 ***
[   83.439127] *** Channel 1: DQBUF timeout, generating frame ***
[   83.439136] *** Channel 1: DQBUF complete - buffer[0] seq=-1 flags=0x3 ***
[   83.439244] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0445611 ***
[   83.439253] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0xc0445611 ***
[   83.439260] *** Channel 1: DQBUF - dequeue buffer request ***
[   83.439266] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   83.439276] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85f29400 (name=gc2053) ***
[   83.439282] *** tx_isp_get_sensor: Found real sensor: 85f29400 ***
[   83.439289] *** Channel 1: DQBUF waiting for frame completion (timeout=200ms) ***
[   83.439306] *** Channel 1: Frame wait returned 0 ***
[   83.439312] *** Channel 1: Frame wait timeout/error, generating frame ***
[   83.439323] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.439330] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.439336] *** Channel 1: Frame completion wait ***
[   83.439342] *** Channel 1: Waiting for frame (timeout=100ms) ***
[   83.439348] *** Channel 1: Frame wait returned 10 ***
[   83.439354] *** Channel 1: Frame was ready, consuming it ***
[   83.439362] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.439368] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.439374] *** Channel 1: Frame completion wait ***
[   83.439380] *** Channel 1: Waiting for frame (timeout=100ms) ***
[   83.441018] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   83.441048] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   83.441055] *** Channel 1: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   83.441062] *** Channel 1: QBUF - Buffer copied from user successfully ***
[   83.441069] *** Channel 1: QBUF - Buffer received: index=0, type=1, memory=2 ***
[   83.441076] *** Channel 1: QBUF - Buffer m.offset=0x7e07100, m.userptr=0x7e07100 ***
[   83.441084] *** Channel 1: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   83.441090] *** Channel 1: QBUF - Validation: buffer.index=0, state->buffer_count=2 ***
[   83.441097] *** Channel 1: QBUF - Queue buffer index=0 ***
[   83.441103] *** QBUF: No buffer allocated for index 0 - VBM initialization mode ***
[   83.441111] *** Channel 1: QBUF - Using buffer struct   (null) for index 0 ***
[   83.441118] *** Channel 1: QBUF - Using REAL buffer address from userptr: 0x7e07100 ***
[   83.441126] *** Channel 1: QBUF - Buffer 0: phys_addr=0x7e07100, size=460800 (VALIDATED) ***
[   83.441134] *** Channel 1: QBUF VBM - Stored buffer[0] = 0x7e07100, total_count=2 ***
[   83.441142] *** Channel 1: QBUF - VBM buffer check: vbm_buffer_addresses=820e4880, vbm_buffer_count=2 ***
[   83.441149] *** Channel 1: QBUF - VBM buffer slot[0] available ***
[   83.441156] *** Channel 1: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x7e07100 ***
[   83.441166] *** Channel 1: QBUF completed successfully (MIPS-safe) ***
[   83.441254] *** Channel 1: Frame wait returned 10 ***
[   83.441261] *** Channel 1: Frame was ready, consuming it ***
[   83.441274] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.441282] *** Frame channel 1 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.441288] *** Channel 1: Frame completion wait ***
[   83.441294] *** Channel 1: Waiting for frame (timeout=100ms) ***
[   83.489116] *** Channel 0: Frame wait returned 0 ***
[   83.489128] *** Channel 0: Frame wait timeout/error, generating frame ***
[   83.489149] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.489156] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.489163] *** Channel 0: Frame completion wait ***
[   83.489169] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   83.489175] *** Channel 0: Frame wait returned 10 ***
[   83.489180] *** Channel 0: Frame was ready, consuming it ***
[   83.489188] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   83.489195] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   83.489201] *** Channel 0: Frame completion wait ***
[   83.489206] *** Channel 0: Waiting for frame (timeout=100ms) ***
root@ing-wyze-cam3-a000 ~# cat /proc/interrupts 
           CPU0       
  9:          0   jz-intc  i2s_irq
 11:      16349   jz-intc  jz-timerost
 14:        100   jz-intc  ipu
 15:      76653   jz-intc  jz-sfc
 18:          0   jz-intc  pdma
 23:          0   jz-intc  GPIO C
 24:          1   jz-intc  GPIO B
 25:          0   jz-intc  GPIO A
 29:          1   jz-intc  dwc2
 37:          0   jz-intc  isp-m0
 38:          0   jz-intc  isp-w02
 44:      10185   jz-intc  jzmmc_v1.2.1
 45:          0   jz-intc  jzmmc_v1.2.0
 58:        383   jz-intc  uart1
 68:        160   jz-intc  jz-i2c.0
 70:         23   jz-intc  avpu.0
126:          0    GPIO B  GPIO Button
134:          1    GPIO B  mmc-insert-detect
ERR:          0
root@ing-wyze-cam3-a000 ~# cat /opt/trace.txt 
ISP Register Monitor v1.3 initializing
ISP Monitor: initialized region isp-w01 at phys 0x0x10023000 size 0x1000
ISP Monitor: initialized region isp-m0 at phys 0x0x13300000 size 0x100000
ISP Monitor: initialized region isp-w02 at phys 0x0x133e0000 size 0x10000
ISP Monitor: initialized region isp-csi at phys 0x0x10022000 size 0x1000
ISP isp-w02: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x54560031 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x8: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x80700008 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x28: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xf00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x60: 0x0 -> 0x800800 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x64: 0x0 -> 0x9d09d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x70: 0x0 -> 0x6002 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x2c: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x90: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x98: 0x0 -> 0x30000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xa8: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x74: 0x0 -> 0x7003 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xac: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x40000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xc (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xdc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0xff808000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x80007000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xec: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x114: 0x0 -> 0x777111 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x0 -> 0x3f00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9864: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x987c: 0x0 -> 0xc0000000 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9880: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9884: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9890: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x989c: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x98a8: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a00: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a04: 0x0 -> 0x3000300 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a2c: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a34: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a70: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a7c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a80: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a88: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a98: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0x0 -> 0xf001f001 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xfc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x100: 0x0 -> 0x2d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x0 -> 0x2c000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x7800000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a4: 0x0 -> 0x100010 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb00c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb010: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb014: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb018: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb01c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb020: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb024: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb028: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb02c: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb030: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb034: 0x0 -> 0xffff0100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb038: 0x0 -> 0x1ff00 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb04c: 0x0 -> 0x103 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb050: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb078: 0x0 -> 0x10000000 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb07c: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb080: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb084: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a8: 0x0 -> 0x4440 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1b0: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb088: 0x0 -> 0x1fdeff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb08c: 0x0 -> 0x1fff (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x10: 0x0 -> 0x133 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2b (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x2 -> 0x1 (delta: 320.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x2 -> 0x1 (delta: 320.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x8c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x2c000 -> 0x1f40000 (delta: 320.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x7800000 -> 0x780002b (delta: 320.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xa (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x1c: 0x0 -> 0x8 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x30: 0x0 -> 0x8fffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x80007000 -> 0x80007001 (delta: 320.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a0: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x3f00 -> 0x0 (delta: 320.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0xf001f001 -> 0x7 (delta: 320.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x40404040 -> 0x0 (delta: 320.000 ms)
root@ing-wyze-cam3-a000 ~# 
