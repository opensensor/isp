[   28.133688] *** tx_isp_init: EXACT Binary Ninja MCP reference implementation ***
[   28.135864] *** PROBE: tx_isp_platform_probe CALLED for device tx-isp ***
[   28.135883] *** PROBE: ISP device allocated successfully: 85fa0000 ***
[   28.135897] *** PROBE: ISP core registers mapped at 0x13300000 for system_reg_write ***
[   28.135903] *** PROBE: ISP device mutex and spinlock initialized ***
[   28.135910] *** PROBE: Event callback structure initialized at 0x840e2380 (offset 0xc from isp_dev) ***
[   28.135921] parse_rmem_bootarg: Found rmem=29M@0x06300000 (size=0x01d00000)
[   28.135928] *** PROBE: Initialized rmem_addr=0x06300000, size=0x01d00000 ***
[   28.135933] *** PROBE: Platform data: c06b5b60 ***
[   28.135939] *** PROBE: Platform data validation passed ***
[   28.135944] *** REFERENCE DRIVER: Individual subdevices will initialize their own memory regions ***
[   28.135950] *** PLATFORM DEVICES ALREADY REGISTERED IN INIT - SKIPPING DUPLICATE REGISTRATION ***
[   28.135956] *** tx_isp_module_init: EXACT Binary Ninja reference implementation ***
[   28.135961] *** tx_isp_module_init: Registering subdev platform drivers FIRST ***
[   28.135967] *** TX ISP SUBDEV PLATFORM DRIVERS REGISTRATION ***
[   28.157038] All ISP subdev platform drivers registered successfully
[   28.160362] *** tx_isp_create_graph_and_nodes: EXACT Binary Ninja reference implementation ***
[   28.160377] *** Registering platform device 0 from platform data ***
[   28.167675] *** tx_isp_subdev_init: CALLED for device 'isp-w00' ***
[   28.167691] *** tx_isp_subdev_init: pdev=c06b5840, sd=854a8800, ops=c06b5e60 ***
[   28.167697] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.167703] *** tx_isp_subdev_init: ops=c06b5e60, ops->core=c06b5e94 ***
[   28.167709] *** tx_isp_subdev_init: ops->core->init=c066c0e8 ***
[   28.167716] *** tx_isp_subdev_init: Set sd->dev=c06b5850, sd->pdev=c06b5840 ***
[   28.167723] *** tx_isp_subdev_init: CSI subdev registered at slot 0 ***
[   28.167729] tx_isp_module_init: Module initialized for isp-w00
[   28.167735] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.167741] *** isp-w00: Skipping IRQ request - device has no IRQ resource ***
[   28.167748] tx_isp_subdev_init: platform_get_resource returned c06b5938 for device isp-w00
[   28.167756] tx_isp_subdev_init: Memory resource found: start=0x10022000, end=0x10022fff, size=0x00001000
[   28.167764] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   28.167770] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   28.167778] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b5840, sd=854a8800, ourISPdev=85fa0000 ***
[   28.167785] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w00' to ourISPdev=85fa0000 ***
[   28.167791] *** DEBUG: Device name comparison - checking 'isp-w00' ***
[   28.167796] *** DEBUG: About to check device name matches ***
[   28.167803] *** CSI BASIC REGISTERS SET: b0022000 (from tx_isp_subdev_init) ***
[   28.167809] *** LINKED CSI device: 854a8800, regs: b0022000 ***
[   28.167815] *** CSI PROBE: Set dev_priv to csi_dev 854a8800 AFTER subdev_init ***
[   28.167822] *** CSI PROBE: Set host_priv to csi_dev 854a8800 AFTER subdev_init ***
[   28.167828] *** CSI PROBE: Using register mapping from tx_isp_subdev_init: b0022000 ***
[   28.167834] *** CSI PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   28.167853] *** Platform device 0 (isp-w00) registered successfully ***
[   28.167860] *** Registering platform device 1 from platform data ***
[   28.170339] *** VIC PROBE: IRQ numbers initialized to 38 ***
[   28.170353] *** VIC PROBE: Primary VIC registers mapped at 0x133e0000 -> b33e0000 ***
[   28.170360] *** VIC PROBE: VIC control registers mapped at 0x10023000 -> b0023000 ***
[   28.170366] *** VIC PROBE: Hardware IRQ function pointers set using SAFE struct members (tx_isp_enable/disable_irq) ***
[   28.170373] *** VIC PROBE: Secondary VIC register test - 0x1e0 = 0x00000000 (mapping verified) ***
[   28.170379] *** VIC PROBE: VIC interrupt registers will be configured during tx_isp_vic_start ***
[   28.170384] *** BINARY NINJA MCP: VIC buffer management ENABLED - following reference driver ***
[   28.170389] *** VIC will operate in FULL mode with complete buffer operations ***
[   28.170395] *** BINARY NINJA MCP: VIC full initialization complete - buffer management ENABLED ***
[   28.170402] *** VIC PROBE: Initialized default dimensions 1920x1080 and critical fields ***
[   28.170408] *** VIC PROBE: Event callback structure stored in VIC device field ***
[   28.170414] *** VIC PROBE: Stored vic_dev pointer 8521b400 in subdev dev_priv ***
[   28.170420] *** VIC PROBE: Set host_priv to vic_dev 8521b400 for Binary Ninja compatibility ***
[   28.170426] *** VIC PROBE: Skipping tx_isp_vic_hw_init - working branch configures interrupts during VIC operations ***
[   28.170433] *** tx_isp_subdev_init: CALLED for device 'isp-w02' ***
[   28.170441] *** tx_isp_subdev_init: pdev=c06b5958, sd=8521b400, ops=c06b5de0 ***
[   28.170447] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.170454] *** tx_isp_subdev_init: ops=c06b5de0, ops->core=c06b5dfc ***
[   28.170460] *** tx_isp_subdev_init: ops->core->init=c068168c ***
[   28.170467] *** tx_isp_subdev_init: Set sd->dev=c06b5968, sd->pdev=c06b5958 ***
[   28.170473] *** tx_isp_subdev_init: VIC device linked and registered at slot 1 ***
[   28.170479] tx_isp_module_init: Module initialized for isp-w02
[   28.170485] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.170493] *** tx_isp_request_irq: platform_get_irq returned 38 for device isp-w02 ***
[   28.170499] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 38 (device: isp-w02) ***
[   28.170509] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c06746e0, thread=c0667584, flags=0x80, name=isp-w02, dev_id=85fa0000) ***
[   28.170518] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c06746e0, thread=c0667584 ***
[   28.176142] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   28.176153] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[   28.176160] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[   28.176169] tx_isp_subdev_init: platform_get_resource returned c06b5a50 for device isp-w02
[   28.176177] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[   28.176185] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   28.176191] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   28.176199] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b5958, sd=8521b400, ourISPdev=85fa0000 ***
[   28.176206] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=85fa0000 ***
[   28.176212] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   28.176217] *** DEBUG: About to check device name matches ***
[   28.176223] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   28.176229] *** DEBUG: Retrieved vic_dev from subdev data: 8521b400 ***
[   28.176235] *** DEBUG: About to set ourISPdev->vic_dev = 8521b400 ***
[   28.176241] *** DEBUG: ourISPdev before linking: 85fa0000 ***
[   28.176246] *** DEBUG: ourISPdev->vic_dev set to: 8521b400 ***
[   28.176252] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   28.176257] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   28.176263] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   28.176271] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   28.176276] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   28.176281] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   28.176287] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   28.176309] *** Platform device 1 (isp-w02) registered successfully ***
[   28.176316] *** Registering platform device 2 from platform data ***
[   28.176643] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[   28.176659] *** tx_isp_subdev_init: pdev=c06b5768, sd=8520fc00, ops=c06b6cc4 ***
[   28.176665] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.176671] *** tx_isp_subdev_init: ops=c06b6cc4, ops->core=c06b6ce4 ***
[   28.176677] *** tx_isp_subdev_init: ops->core->init=c068dde4 ***
[   28.176684] *** tx_isp_subdev_init: Set sd->dev=c06b5778, sd->pdev=c06b5768 ***
[   28.176691] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b6cc4 ***
[   28.176697] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06b5e60 ***
[   28.176703] tx_isp_module_init: Module initialized for isp-w01
[   28.176709] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.176717] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b5768, sd=8520fc00, ourISPdev=85fa0000 ***
[   28.176724] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=85fa0000 ***
[   28.176730] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[   28.176735] *** DEBUG: About to check device name matches ***
[   28.176741] *** DEBUG: VIN device name matched! Setting up VIN device ***
[   28.176747] *** LINKED VIN device: 8520fc00 ***
[   28.176754] *** VIN SUBDEV OPS CONFIGURED: core=c06b6ce4, video=c06b6cd8, s_stream=c068dfdc ***
[   28.176761] *** REGISTERED VIN SUBDEV AT SLOT 2 WITH VIDEO OPS ***
[   28.176767] *** VIN PROBE: Set dev_priv to vin_dev 8520fc00 AFTER subdev_init ***
[   28.176773] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   28.176792] *** Platform device 2 (isp-w01) registered successfully ***
[   28.176799] *** Registering platform device 3 from platform data ***
[   28.179292] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   28.179307] *** tx_isp_subdev_init: pdev=c06b5628, sd=8520fa00, ops=c06b5f14 ***
[   28.179314] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.179321] *** tx_isp_subdev_init: ops=c06b5f14, ops->core=c06bcd9c ***
[   28.179326] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   28.179333] *** tx_isp_subdev_init: Set sd->dev=c06b5638, sd->pdev=c06b5628 ***
[   28.179339] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b5f14 ***
[   28.179346] *** tx_isp_subdev_init: ops->sensor=c06bcd90, csi_subdev_ops=c06b5e60 ***
[   28.179352] tx_isp_module_init: Module initialized for isp-fs
[   28.179358] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.179364] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   28.179371] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   28.179377] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   28.179385] *** FS PROBE: Set dev_priv to fs_dev 8520fa00 AFTER subdev_init ***
[   28.179391] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   28.179409] *** Platform device 3 (isp-fs) registered successfully ***
[   28.179416] *** Registering platform device 4 from platform data ***
[   28.186425] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   28.186439] *** tx_isp_create_core_device: Creating ISP core device ***
[   28.186455] *** tx_isp_create_core_device: Core device created successfully: 85fb4000 ***
[   28.186462] *** CORE PROBE: Set dev_priv to core_dev 85fb4000 ***
[   28.186468] *** CORE PROBE: Set host_priv to core_dev 85fb4000 - PREVENTS BadVA CRASH ***
[   28.186475] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   28.186483] *** tx_isp_subdev_init: pdev=c06b54f0, sd=85fb4000, ops=c06b5c18 ***
[   28.186489] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.186495] *** tx_isp_subdev_init: ops=c06b5c18, ops->core=c06b5c44 ***
[   28.186501] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   28.186508] *** tx_isp_subdev_init: Set sd->dev=c06b5500, sd->pdev=c06b54f0 ***
[   28.186515] *** tx_isp_subdev_init: Core ISP subdev registered at slot 3 ***
[   28.186521] tx_isp_module_init: Module initialized for isp-m0
[   28.186527] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.186535] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   28.186541] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   28.186551] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c06746e0, thread=c0667584, flags=0x80, name=isp-m0, dev_id=85fa0000) ***
[   28.186559] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c06746e0, thread=c0667584 ***
[   28.189413] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   28.189424] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   28.189431] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   28.189439] tx_isp_subdev_init: platform_get_resource returned c06b55f0 for device isp-m0
[   28.189447] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   28.189457] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   28.189463] *** tx_isp_subdev_init: Clock count stored: 3 ***
[   28.189471] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b54f0, sd=85fb4000, ourISPdev=85fa0000 ***
[   28.189479] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=85fa0000 ***
[   28.189485] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   28.189489] *** DEBUG: About to check device name matches ***
[   28.189496] *** DEBUG: CORE device name matched! Setting up Core device ***
[   28.189502] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   28.189509] *** tx_isp_link_core_device: Linking core device 85fb4000 to ISP device 85fa0000 ***
[   28.189515] *** tx_isp_link_core_device: Core device linked successfully ***
[   28.189522] *** Core subdev already registered at slot 3: 85fb4000 ***
[   28.189528] *** LINKED CORE device: 85fb4000 ***
[   28.189533] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   28.189539] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   28.189545] *** tx_isp_core_device_init: Initializing core device: 85fb4000 ***
[   28.189557] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   28.189562] *** tx_isp_core_device_init: Core device initialized successfully ***
[   28.189567] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   28.189575] *** tx_isp_link_core_device: Linking core device 85fb4000 to ISP device 85fa0000 ***
[   28.189580] *** tx_isp_link_core_device: Core device linked successfully ***
[   28.189587] *** Core subdev already registered at slot 3: 85fb4000 ***
[   28.189601] *** tx_isp_core_probe: Assigned frame_channels=85fb4400 to core_dev ***
[   28.189606] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   28.189612] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   28.189617] *** tx_isp_core_probe: Calling sensor_early_init ***
[   28.189623] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   28.189629] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   28.189634] *** tx_isp_core_probe: Core device setup complete ***
[   28.189640] ***   - Core device: 85fb4000 ***
[   28.189645] ***   - Channel count: 6 ***
[   28.189651] ***   - Linked to ISP device: 85fa0000 ***
[   28.189656] *** tx_isp_core_probe: Initializing core tuning system ***
[   28.189661] isp_core_tuning_init: Initializing tuning data structure
[   28.189673] isp_core_tuning_init: Tuning data structure initialized at 84bf6000
[   28.189679] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   28.189685] *** SAFE: mode_flag properly initialized using struct member access ***
[   28.189690] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   28.189695] *** tx_isp_core_probe: Set platform driver data ***
[   28.189701] *** tx_isp_core_probe: Set global core device reference ***
[   28.189706] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   28.189711] ***   - Core device: 85fb4000 ***
[   28.189717] ***   - Tuning device: 84bf6000 ***
[   28.189722] *** tx_isp_core_probe: Creating frame channel devices ***
[   28.189727] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   28.190088] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   28.197735] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   28.200268] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   28.202983] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   28.202994] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   28.203000] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   28.203005] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   28.203011] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   28.203019] tisp_code_create_tuning_node: Allocated dynamic major 251
[   28.211549] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   28.211560] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   28.211566] *** tx_isp_core_probe: Core probe completed successfully ***
[   28.211586] *** Platform device 4 (isp-m0) registered successfully ***
[   28.211593] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   28.211615] *** Created /proc/jz/isp directory ***
[   28.211623] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   28.211632] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   28.211638] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   28.211645] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c0683858 ***
[   28.211653] *** PROC ENTRY FIX: Using ISP device 85fa0000 instead of VIC device 8521b400 for isp-w02 ***
[   28.211661] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   28.211668] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   28.211677] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   28.211686] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   28.211695] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   28.211701] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   28.211706] *** Misc device registration handled via main tx-isp device ***
[   28.211711] *** Misc device registration handled via main tx-isp device ***
[   28.211717] *** Misc device registration handled via main tx-isp device ***
[   28.211722] *** Misc device registration handled via main tx-isp device ***
[   28.211727] *** Misc device registration handled via main tx-isp device ***
[   28.211733] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   28.211741] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   28.211749] *** Frame channel 1 initialized: 640x360, state=2 ***
[   28.211754] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   28.211761] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 8521b400 ***
[   28.211767] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   28.211771] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   28.211779] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   28.211785] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   28.211791] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   28.211797] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   28.211801] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   28.211807] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   28.211812] *** PROBE: Binary Ninja reference implementation complete ***
[   28.216755] *** tx_isp_init: Platform device and driver registered successfully ***
[   30.238775] === gc2053 SENSOR MODULE INIT ===
[   30.241238] gc2053 I2C driver registered, waiting for device creation by ISP
[   33.173406] ISP opened successfully
[   33.173739] ISP IOCTL: cmd=0x805056c1 arg=0x776ced60
[   33.173753] subdev_sensor_ops_ioctl: cmd=0x2000000
[   33.173758] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[   33.173764] *** Creating I2C sensor device on adapter 0 ***
[   33.173774] *** Creating I2C device: gc2053 at 0x37 ***
[   33.173778] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[   33.173787] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[   33.173792] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[   33.183094] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[   33.190240] === GC2053 SENSOR PROBE START ===
[   33.190257] sensor_probe: client=8555fe00, addr=0x37, adapter=84074c10 (i2c0)
[   33.190262] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[   33.190268] Requesting reset GPIO 18
[   33.190276] GPIO reset sequence: HIGH -> LOW -> HIGH
root@ing-wyze-cam3-a000 ~# dmesg 
[   28.170518] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c06746e0, thread=c0667584 ***
[   28.176191] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   28.176199] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b5958, sd=8521b400, ourISPdev=85fa0000 ***
[   28.176206] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=85fa0000 ***
[   28.176212] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   28.176217] *** DEBUG: About to check device name matches ***
[   28.176223] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   28.176229] *** DEBUG: Retrieved vic_dev from subdev data: 8521b400 ***
[   28.176235] *** DEBUG: About to set ourISPdev->vic_dev = 8521b400 ***
[   28.176241] *** DEBUG: ourISPdev before linking: 85fa0000 ***
[   28.176246] *** DEBUG: ourISPdev->vic_dev set to: 8521b400 ***
[   28.176252] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   28.176257] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   28.176263] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   28.176271] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   28.176276] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   28.176281] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   28.176287] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   28.176309] *** Platform device 1 (isp-w02) registered successfully ***
[   28.176316] *** Registering platform device 2 from platform data ***
[   28.176643] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[   28.176659] *** tx_isp_subdev_init: pdev=c06b5768, sd=8520fc00, ops=c06b6cc4 ***
[   28.176665] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.176671] *** tx_isp_subdev_init: ops=c06b6cc4, ops->core=c06b6ce4 ***
[   28.176677] *** tx_isp_subdev_init: ops->core->init=c068dde4 ***
[   28.176684] *** tx_isp_subdev_init: Set sd->dev=c06b5778, sd->pdev=c06b5768 ***
[   28.176691] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b6cc4 ***
[   28.176697] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06b5e60 ***
[   28.176703] tx_isp_module_init: Module initialized for isp-w01
[   28.176709] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.176717] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b5768, sd=8520fc00, ourISPdev=85fa0000 ***
[   28.176724] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=85fa0000 ***
[   28.176730] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[   28.176735] *** DEBUG: About to check device name matches ***
[   28.176741] *** DEBUG: VIN device name matched! Setting up VIN device ***
[   28.176747] *** LINKED VIN device: 8520fc00 ***
[   28.176754] *** VIN SUBDEV OPS CONFIGURED: core=c06b6ce4, video=c06b6cd8, s_stream=c068dfdc ***
[   28.176761] *** REGISTERED VIN SUBDEV AT SLOT 2 WITH VIDEO OPS ***
[   28.176767] *** VIN PROBE: Set dev_priv to vin_dev 8520fc00 AFTER subdev_init ***
[   28.176773] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   28.176792] *** Platform device 2 (isp-w01) registered successfully ***
[   28.176799] *** Registering platform device 3 from platform data ***
[   28.179292] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   28.179307] *** tx_isp_subdev_init: pdev=c06b5628, sd=8520fa00, ops=c06b5f14 ***
[   28.179314] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.179321] *** tx_isp_subdev_init: ops=c06b5f14, ops->core=c06bcd9c ***
[   28.179326] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   28.179333] *** tx_isp_subdev_init: Set sd->dev=c06b5638, sd->pdev=c06b5628 ***
[   28.179339] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b5f14 ***
[   28.179346] *** tx_isp_subdev_init: ops->sensor=c06bcd90, csi_subdev_ops=c06b5e60 ***
[   28.179352] tx_isp_module_init: Module initialized for isp-fs
[   28.179358] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.179364] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   28.179371] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   28.179377] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   28.179385] *** FS PROBE: Set dev_priv to fs_dev 8520fa00 AFTER subdev_init ***
[   28.179391] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   28.179409] *** Platform device 3 (isp-fs) registered successfully ***
[   28.179416] *** Registering platform device 4 from platform data ***
[   28.186425] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   28.186439] *** tx_isp_create_core_device: Creating ISP core device ***
[   28.186455] *** tx_isp_create_core_device: Core device created successfully: 85fb4000 ***
[   28.186462] *** CORE PROBE: Set dev_priv to core_dev 85fb4000 ***
[   28.186468] *** CORE PROBE: Set host_priv to core_dev 85fb4000 - PREVENTS BadVA CRASH ***
[   28.186475] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   28.186483] *** tx_isp_subdev_init: pdev=c06b54f0, sd=85fb4000, ops=c06b5c18 ***
[   28.186489] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   28.186495] *** tx_isp_subdev_init: ops=c06b5c18, ops->core=c06b5c44 ***
[   28.186501] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   28.186508] *** tx_isp_subdev_init: Set sd->dev=c06b5500, sd->pdev=c06b54f0 ***
[   28.186515] *** tx_isp_subdev_init: Core ISP subdev registered at slot 3 ***
[   28.186521] tx_isp_module_init: Module initialized for isp-m0
[   28.186527] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   28.186535] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   28.186541] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   28.186551] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c06746e0, thread=c0667584, flags=0x80, name=isp-m0, dev_id=85fa0000) ***
[   28.186559] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c06746e0, thread=c0667584 ***
[   28.189413] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   28.189424] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   28.189431] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   28.189439] tx_isp_subdev_init: platform_get_resource returned c06b55f0 for device isp-m0
[   28.189447] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   28.189457] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   28.189463] *** tx_isp_subdev_init: Clock count stored: 3 ***
[   28.189471] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b54f0, sd=85fb4000, ourISPdev=85fa0000 ***
[   28.189479] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=85fa0000 ***
[   28.189485] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   28.189489] *** DEBUG: About to check device name matches ***
[   28.189496] *** DEBUG: CORE device name matched! Setting up Core device ***
[   28.189502] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   28.189509] *** tx_isp_link_core_device: Linking core device 85fb4000 to ISP device 85fa0000 ***
[   28.189515] *** tx_isp_link_core_device: Core device linked successfully ***
[   28.189522] *** Core subdev already registered at slot 3: 85fb4000 ***
[   28.189528] *** LINKED CORE device: 85fb4000 ***
[   28.189533] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   28.189539] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   28.189545] *** tx_isp_core_device_init: Initializing core device: 85fb4000 ***
[   28.189557] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   28.189562] *** tx_isp_core_device_init: Core device initialized successfully ***
[   28.189567] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   28.189575] *** tx_isp_link_core_device: Linking core device 85fb4000 to ISP device 85fa0000 ***
[   28.189580] *** tx_isp_link_core_device: Core device linked successfully ***
[   28.189587] *** Core subdev already registered at slot 3: 85fb4000 ***
[   28.189601] *** tx_isp_core_probe: Assigned frame_channels=85fb4400 to core_dev ***
[   28.189606] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   28.189612] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   28.189617] *** tx_isp_core_probe: Calling sensor_early_init ***
[   28.189623] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   28.189629] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   28.189634] *** tx_isp_core_probe: Core device setup complete ***
[   28.189640] ***   - Core device: 85fb4000 ***
[   28.189645] ***   - Channel count: 6 ***
[   28.189651] ***   - Linked to ISP device: 85fa0000 ***
[   28.189656] *** tx_isp_core_probe: Initializing core tuning system ***
[   28.189661] isp_core_tuning_init: Initializing tuning data structure
[   28.189673] isp_core_tuning_init: Tuning data structure initialized at 84bf6000
[   28.189679] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   28.189685] *** SAFE: mode_flag properly initialized using struct member access ***
[   28.189690] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   28.189695] *** tx_isp_core_probe: Set platform driver data ***
[   28.189701] *** tx_isp_core_probe: Set global core device reference ***
[   28.189706] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   28.189711] ***   - Core device: 85fb4000 ***
[   28.189717] ***   - Tuning device: 84bf6000 ***
[   28.189722] *** tx_isp_core_probe: Creating frame channel devices ***
[   28.189727] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   28.190088] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   28.197735] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   28.200268] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   28.202983] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   28.202994] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   28.203000] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   28.203005] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   28.203011] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   28.203019] tisp_code_create_tuning_node: Allocated dynamic major 251
[   28.211549] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   28.211560] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   28.211566] *** tx_isp_core_probe: Core probe completed successfully ***
[   28.211586] *** Platform device 4 (isp-m0) registered successfully ***
[   28.211593] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   28.211615] *** Created /proc/jz/isp directory ***
[   28.211623] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   28.211632] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   28.211638] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   28.211645] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c0683858 ***
[   28.211653] *** PROC ENTRY FIX: Using ISP device 85fa0000 instead of VIC device 8521b400 for isp-w02 ***
[   28.211661] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   28.211668] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   28.211677] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   28.211686] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   28.211695] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   28.211701] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   28.211706] *** Misc device registration handled via main tx-isp device ***
[   28.211711] *** Misc device registration handled via main tx-isp device ***
[   28.211717] *** Misc device registration handled via main tx-isp device ***
[   28.211722] *** Misc device registration handled via main tx-isp device ***
[   28.211727] *** Misc device registration handled via main tx-isp device ***
[   28.211733] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   28.211741] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   28.211749] *** Frame channel 1 initialized: 640x360, state=2 ***
[   28.211754] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   28.211761] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 8521b400 ***
[   28.211767] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   28.211771] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   28.211779] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   28.211785] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   28.211791] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   28.211797] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   28.211801] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   28.211807] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   28.211812] *** PROBE: Binary Ninja reference implementation complete ***
[   28.216755] *** tx_isp_init: Platform device and driver registered successfully ***
[   30.238775] === gc2053 SENSOR MODULE INIT ===
[   30.241238] gc2053 I2C driver registered, waiting for device creation by ISP
[   33.173406] ISP opened successfully
[   33.173739] ISP IOCTL: cmd=0x805056c1 arg=0x776ced60
[   33.173753] subdev_sensor_ops_ioctl: cmd=0x2000000
[   33.173758] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[   33.173764] *** Creating I2C sensor device on adapter 0 ***
[   33.173774] *** Creating I2C device: gc2053 at 0x37 ***
[   33.173778] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[   33.173787] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[   33.173792] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[   33.183094] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[   33.190240] === GC2053 SENSOR PROBE START ===
[   33.190257] sensor_probe: client=8555fe00, addr=0x37, adapter=84074c10 (i2c0)
[   33.190262] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[   33.190268] Requesting reset GPIO 18
[   33.190276] GPIO reset sequence: HIGH -> LOW -> HIGH
[   33.412077] GPIO reset sequence completed successfully
[   33.412090] === GPIO INITIALIZATION COMPLETE ===
[   33.412100] sensor_probe: Initialized sensor info - name=gc2053, i2c_addr=0x37
[   33.412116] sensor_probe: data_interface=1, sensor_max_fps=30
[   33.412122] sensor_probe: MIPI 30fps
[   33.412129] *** tx_isp_subdev_init: CALLED for device 'gc2053' ***
[   33.412137] *** tx_isp_subdev_init: pdev=c06df168, sd=85fbb000, ops=c06df248 ***
[   33.412143] *** tx_isp_subdev_init: ourISPdev=85fa0000 ***
[   33.412150] *** tx_isp_subdev_init: ops=c06df248, ops->core=c06df274 ***
[   33.412156] *** tx_isp_subdev_init: ops->core->init=c06dc6bc ***
[   33.412163] *** tx_isp_subdev_init: Set sd->dev=c06df178, sd->pdev=c06df168 ***
[   33.412170] *** tx_isp_subdev_init: DETECTED SENSOR SUBDEV - ops=c06df248, ops->sensor=c06df25c ***
[   33.412176] *** tx_isp_subdev_init: Set up sensor module notify handler ***
[   33.412183] *** tx_isp_subdev_init: SENSOR subdev registered at slot 4, sd=85fbb000 ***
[   33.412190] *** tx_isp_subdev_init: SENSOR ops=c06df248, ops->sensor=c06df25c ***
[   33.412196] *** tx_isp_subdev_init: Core state transitions handled by slake_module ***
[   33.412202] tx_isp_module_init: Module initialized for (null)
[   33.412208] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   33.412216] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06df168, sd=85fbb000, ourISPdev=85fa0000 ***
[   33.412224] *** tx_isp_subdev_auto_link: Auto-linking device 'gc2053' to ourISPdev=85fa0000 ***
[   33.412229] *** DEBUG: Device name comparison - checking 'gc2053' ***
[   33.412234] *** DEBUG: About to check device name matches ***
[   33.412242] *** DETECTED SENSOR DEVICE: 'gc2053' - checking for existing registration ***
[   33.412248] *** SENSOR 'gc2053' registered at subdev index 5 ***
[   33.412254] *** SENSOR subdev: 85fbb000, ops: c06df248 ***
[   33.412260] *** SENSOR ops->sensor: c06df25c ***
[   33.412266] *** SENSOR REGISTERED: Caching sensor dimensions from /proc/jz/sensor/ ***
[   33.412272] *** cache_sensor_dimensions_from_proc: Reading sensor dimensions during probe ***
[   33.412349] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   33.412357] *** cache_sensor_dimensions_from_proc: Successfully cached 1920x1080 ***
[   33.412364] sensor_probe: I2C client association complete
[   33.412372]   sd=85fbb000, client=8555fe00, addr=0x37, adapter=i2c0
[   33.412394] === TESTING I2C COMMUNICATION AFTER GPIO RESET ===
[   33.412404] sensor_read: reg=0xf0, client=8555fe00, adapter=i2c0, addr=0x37
[   33.412814] sensor_read: reg=0xf0 value=0x20 SUCCESS
[   33.412823] I2C test read (0xf0): ret=0, val=0x20 (expected 0x20)
[   33.412828] *** SUCCESS: I2C communication working after GPIO reset! ***
[   33.412837] sensor_read: reg=0xf1, client=8555fe00, adapter=i2c0, addr=0x37
[   33.413327] sensor_read: reg=0xf1 value=0x53 SUCCESS
[   33.413334] I2C test read (0xf1): ret=0, val=0x53 (expected 0x53)
[   33.413340] === I2C COMMUNICATION TEST COMPLETE ===
[   33.413347] Registering gc2053 with ISP framework (sd=85fbb000, sensor=85fbb000)
[   33.413353] gc2053 registered with ISP framework successfully
[   33.413375] *** MIPS-SAFE: I2C device created successfully at 0x8555fe00 ***
[   33.413383] *** MIPS-SAFE: Module reference acquired for gc2053 ***
[   33.413390] *** MIPS-SAFE: Sensor subdev data found, device ready ***
[   33.413396] *** I2C DEVICE READY: gc2053 at 0x37 (MIPS-safe) ***
[   33.413403] *** I2C sensor device created successfully: gc2053 at 0x37 ***
[   33.413439] ISP IOCTL: cmd=0xc050561a arg=0x7feaecb8
[   33.413446] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 0
[   33.413452] TX_ISP_SENSOR_ENUM_INPUT: Returning sensor 'gc2053' at index 0
[   33.413460] ISP IOCTL: cmd=0xc050561a arg=0x7feaecb8
[   33.413466] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 1
[   33.413472] TX_ISP_SENSOR_ENUM_INPUT: No sensor at index 1 - returning error to end enumeration
[   33.413480] ISP IOCTL: cmd=0xc0045627 arg=0x7feaed10
[   33.413490] ISP IOCTL: cmd=0x800856d5 arg=0x7feaed08
[   33.413495] TX_ISP_GET_BUF: IOCTL handler called
[   33.413502] TX_ISP_GET_BUF: core_dev=85fb4000, isp_dev=85fa0000
[   33.413508] TX_ISP_GET_BUF: Using dimensions 1920x1080 from core device
[   33.413516] TX_ISP_GET_BUF: Returning buffer size=4685424, paddr=0x6300000
[   33.486305] ISP IOCTL: cmd=0x800856d4 arg=0x7feaed08
[   33.486319] TX_ISP_SET_BUF: addr=0x6300000 size=0
[   33.486552] ISP IOCTL: cmd=0x40045626 arg=0x7feaed20
[   33.486565] subdev_sensor_ops_ioctl: cmd=0x2000003
[   33.486571] subdev_sensor_ops_ioctl: IOCTL 0x2000003 - Get sensor input
[   33.486577] subdev_sensor_ops_ioctl: Auto-selected first sensor at slot 0 as index 0
[   33.486583] subdev_sensor_ops_ioctl: Returning current sensor index 0
[   33.486591] ISP IOCTL: cmd=0x80045612 arg=0x0
[   33.486599] *** tx_isp_video_s_stream: EXACT Binary Ninja reference implementation - enable=1 ***
[   33.486604] === ISP Subdevice Array Status ===
[   33.486613]   [0]: isp-w00 (sd=854a8800)
[   33.486619]   [1]: isp-w02 (sd=8521b400)
[   33.486625]   [2]: isp-w01 (sd=8520fc00)
[   33.486632]   [3]: isp-m0 (sd=85fb4000)
[   33.486639]   [4]: gc2053 (sd=85fbb000)
[   33.486645]   [5]: gc2053 (sd=85fbb000)
[   33.486651]   [6]: (empty)
[   33.486655]   [7]: (empty)
[   33.486661]   [8]: (empty)
[   33.486665]   [9]: (empty)
[   33.486671]   [10]: (empty)
[   33.486675]   [11]: (empty)
[   33.486681]   [12]: (empty)
[   33.486685]   [13]: (empty)
[   33.486691]   [14]: (empty)
[   33.486695]   [15]: (empty)
[   33.486700] === End Subdevice Array ===
[   33.486705] *** tx_isp_video_s_stream: STREAM ON - Initializing core first ***
[   33.486711] *** tx_isp_video_s_stream: VIC state is 1, calling activate_module ***
[   33.486717] *** ispcore_activate_module: Fixed for our struct layouts ***
[   33.486722] *** VIC device in state 1, proceeding with activation ***
[   33.486729] *** CLOCK CONFIGURATION SECTION: clk_array=  (null), clk_count=2 ***
[   33.486734] *** SUBDEVICE VALIDATION SECTION ***
[   33.486739] VIC device state set to 2 (activated)
[   33.486744] *** CRITICAL FUNCTION POINTER CALL SECTION ***
[   33.486749] *** CALLING CRITICAL VIC INITIALIZATION FUNCTION ***
[   33.486755] *** VIC control register written with 0x4000000 to ISP+0x9a00 ***
[   33.486760] *** SUBDEVICE INITIALIZATION LOOP ***
[   33.486765] *** SUBDEVICE INITIALIZATION: Traversing backwards to initialize sensors first ***
[   33.486771] Calling subdev 5 initialization (REVERSE ORDER - sensors first)
[   33.486779] *** SENSOR_INIT: gc2053 enable=1 ***
[   33.486787] SENSOR_INIT: Configuring gc2053 (chip_id=0x2053, 1920x1080)
[   33.486794] *** CALLING SENSOR_WRITE_ARRAY WITH c06dfe20 (should be 137 registers) ***
[   33.486804] sensor_write: reg=0xfe val=0x80, client=8555fe00, adapter=i2c0, addr=0x37
[   33.487129] sensor_write: reg=0xfe val=0x80 SUCCESS
[   33.487136] sensor_write_array: reg[1] 0xfe=0x80 OK
[   33.487145] sensor_write: reg=0xfe val=0x80, client=8555fe00, adapter=i2c0, addr=0x37
[   33.487464] sensor_write: reg=0xfe val=0x80 SUCCESS
[   33.487472] sensor_write_array: reg[2] 0xfe=0x80 OK
[   33.487480] sensor_write: reg=0xfe val=0x80, client=8555fe00, adapter=i2c0, addr=0x37
[   33.487794] sensor_write: reg=0xfe val=0x80 SUCCESS
[   33.487801] sensor_write_array: reg[3] 0xfe=0x80 OK
[   33.487809] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.488123] sensor_write: reg=0xfe val=0x00 SUCCESS
[   33.488129] sensor_write_array: reg[4] 0xfe=0x00 OK
[   33.488137] sensor_write: reg=0xf2 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.488451] sensor_write: reg=0xf2 val=0x00 SUCCESS
[   33.488457] sensor_write_array: reg[5] 0xf2=0x00 OK
[   33.488466] sensor_write: reg=0xf3 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.488779] sensor_write: reg=0xf3 val=0x00 SUCCESS
[   33.488785] sensor_write_array: reg[6] 0xf3=0x00 OK
[   33.488794] sensor_write: reg=0xf4 val=0x36, client=8555fe00, adapter=i2c0, addr=0x37
[   33.489107] sensor_write: reg=0xf4 val=0x36 SUCCESS
[   33.489114] sensor_write_array: reg[7] 0xf4=0x36 OK
[   33.489122] sensor_write: reg=0xf5 val=0xc0, client=8555fe00, adapter=i2c0, addr=0x37
[   33.493531] sensor_write: reg=0xf5 val=0xc0 SUCCESS
[   33.493545] sensor_write_array: reg[8] 0xf5=0xc0 OK
[   33.493555] sensor_write: reg=0xf6 val=0x44, client=8555fe00, adapter=i2c0, addr=0x37
[   33.493873] sensor_write: reg=0xf6 val=0x44 SUCCESS
[   33.493880] sensor_write_array: reg[9] 0xf6=0x44 OK
[   33.493888] sensor_write: reg=0xf7 val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.494205] sensor_write: reg=0xf7 val=0x01 SUCCESS
[   33.494213] sensor_write_array: reg[10] 0xf7=0x01 OK
[   33.494221] sensor_write: reg=0xf8 val=0x68, client=8555fe00, adapter=i2c0, addr=0x37
[   33.494533] sensor_write: reg=0xf8 val=0x68 SUCCESS
[   33.494542] sensor_write: reg=0xf9 val=0x40, client=8555fe00, adapter=i2c0, addr=0x37
[   33.494855] sensor_write: reg=0xf9 val=0x40 SUCCESS
[   33.494864] sensor_write: reg=0xfc val=0x8e, client=8555fe00, adapter=i2c0, addr=0x37
[   33.495177] sensor_write: reg=0xfc val=0x8e SUCCESS
[   33.495185] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.495498] sensor_write: reg=0xfe val=0x00 SUCCESS
[   33.495507] sensor_write: reg=0x87 val=0x18, client=8555fe00, adapter=i2c0, addr=0x37
[   33.495820] sensor_write: reg=0x87 val=0x18 SUCCESS
[   33.495828] sensor_write: reg=0xee val=0x30, client=8555fe00, adapter=i2c0, addr=0x37
[   33.496141] sensor_write: reg=0xee val=0x30 SUCCESS
[   33.496149] sensor_write: reg=0xd0 val=0xb7, client=8555fe00, adapter=i2c0, addr=0x37
[   33.496463] sensor_write: reg=0xd0 val=0xb7 SUCCESS
[   33.496471] sensor_write: reg=0x03 val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.496783] sensor_write: reg=0x03 val=0x04 SUCCESS
[   33.496792] sensor_write: reg=0x04 val=0x60, client=8555fe00, adapter=i2c0, addr=0x37
[   33.497105] sensor_write: reg=0x04 val=0x60 SUCCESS
[   33.497113] sensor_write: reg=0x05 val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.497426] sensor_write: reg=0x05 val=0x04 SUCCESS
[   33.497434] sensor_write: reg=0x06 val=0x4c, client=8555fe00, adapter=i2c0, addr=0x37
[   33.502119] sensor_write: reg=0x06 val=0x4c SUCCESS
[   33.502134] sensor_write: reg=0x07 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.502457] sensor_write: reg=0x07 val=0x00 SUCCESS
[   33.502467] sensor_write: reg=0x08 val=0x11, client=8555fe00, adapter=i2c0, addr=0x37
[   33.502781] sensor_write: reg=0x08 val=0x11 SUCCESS
[   33.502789] sensor_write: reg=0x09 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.503103] sensor_write: reg=0x09 val=0x00 SUCCESS
[   33.503111] sensor_write: reg=0x0a val=0x02, client=8555fe00, adapter=i2c0, addr=0x37
[   33.503423] sensor_write: reg=0x0a val=0x02 SUCCESS
[   33.503432] sensor_write: reg=0x0b val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.503735] sensor_write: reg=0x0b val=0x00 SUCCESS
[   33.503745] sensor_write: reg=0x0c val=0x02, client=8555fe00, adapter=i2c0, addr=0x37
[   33.504059] sensor_write: reg=0x0c val=0x02 SUCCESS
[   33.504069] sensor_write: reg=0x0d val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.504390] sensor_write: reg=0x0d val=0x04 SUCCESS
[   33.504399] sensor_write: reg=0x0e val=0x40, client=8555fe00, adapter=i2c0, addr=0x37
[   33.504712] sensor_write: reg=0x0e val=0x40 SUCCESS
[   33.504720] sensor_write: reg=0x12 val=0xe2, client=8555fe00, adapter=i2c0, addr=0x37
[   33.505031] sensor_write: reg=0x12 val=0xe2 SUCCESS
[   33.505040] sensor_write: reg=0x13 val=0x16, client=8555fe00, adapter=i2c0, addr=0x37
[   33.505353] sensor_write: reg=0x13 val=0x16 SUCCESS
[   33.505361] sensor_write: reg=0x19 val=0x0a, client=8555fe00, adapter=i2c0, addr=0x37
[   33.505674] sensor_write: reg=0x19 val=0x0a SUCCESS
[   33.505683] sensor_write: reg=0x21 val=0x1c, client=8555fe00, adapter=i2c0, addr=0x37
[   33.505995] sensor_write: reg=0x21 val=0x1c SUCCESS
[   33.506004] sensor_write: reg=0x28 val=0x0a, client=8555fe00, adapter=i2c0, addr=0x37
[   33.506317] sensor_write: reg=0x28 val=0x0a SUCCESS
[   33.506325] sensor_write: reg=0x29 val=0x24, client=8555fe00, adapter=i2c0, addr=0x37
[   33.506637] sensor_write: reg=0x29 val=0x24 SUCCESS
[   33.506645] sensor_write: reg=0x2b val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.511813] sensor_write: reg=0x2b val=0x04 SUCCESS
[   33.511827] sensor_write: reg=0x32 val=0xf8, client=8555fe00, adapter=i2c0, addr=0x37
[   33.512204] sensor_write: reg=0x32 val=0xf8 SUCCESS
[   33.512217] sensor_write: reg=0x37 val=0x03, client=8555fe00, adapter=i2c0, addr=0x37
[   33.512534] sensor_write: reg=0x37 val=0x03 SUCCESS
[   33.512543] sensor_write: reg=0x39 val=0x15, client=8555fe00, adapter=i2c0, addr=0x37
[   33.512857] sensor_write: reg=0x39 val=0x15 SUCCESS
[   33.512865] sensor_write: reg=0x43 val=0x07, client=8555fe00, adapter=i2c0, addr=0x37
[   33.513178] sensor_write: reg=0x43 val=0x07 SUCCESS
[   33.513187] sensor_write: reg=0x44 val=0x40, client=8555fe00, adapter=i2c0, addr=0x37
[   33.513499] sensor_write: reg=0x44 val=0x40 SUCCESS
[   33.513508] sensor_write: reg=0x46 val=0x0b, client=8555fe00, adapter=i2c0, addr=0x37
[   33.513812] sensor_write: reg=0x46 val=0x0b SUCCESS
[   33.513822] sensor_write: reg=0x4b val=0x20, client=8555fe00, adapter=i2c0, addr=0x37
[   33.514135] sensor_write: reg=0x4b val=0x20 SUCCESS
[   33.514144] sensor_write: reg=0x4e val=0x08, client=8555fe00, adapter=i2c0, addr=0x37
[   33.514458] sensor_write: reg=0x4e val=0x08 SUCCESS
[   33.514467] sensor_write: reg=0x55 val=0x20, client=8555fe00, adapter=i2c0, addr=0x37
[   33.514777] sensor_write: reg=0x55 val=0x20 SUCCESS
[   33.514786] sensor_write: reg=0x66 val=0x05, client=8555fe00, adapter=i2c0, addr=0x37
[   33.515099] sensor_write: reg=0x66 val=0x05 SUCCESS
[   33.515107] sensor_write: reg=0x67 val=0x05, client=8555fe00, adapter=i2c0, addr=0x37
[   33.515421] sensor_write: reg=0x67 val=0x05 SUCCESS
[   33.515429] sensor_write: reg=0x77 val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.515742] sensor_write: reg=0x77 val=0x01 SUCCESS
[   33.515751] sensor_write: reg=0x78 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.516063] sensor_write: reg=0x78 val=0x00 SUCCESS
[   33.516072] sensor_write: reg=0x7c val=0x93, client=8555fe00, adapter=i2c0, addr=0x37
[   33.522105] sensor_write: reg=0x7c val=0x93 SUCCESS
[   33.522119] sensor_write_array: reg[50] 0x7c=0x93 OK
[   33.522129] sensor_write: reg=0x8c val=0x12, client=8555fe00, adapter=i2c0, addr=0x37
[   33.522453] sensor_write: reg=0x8c val=0x12 SUCCESS
[   33.522462] sensor_write: reg=0x8d val=0x92, client=8555fe00, adapter=i2c0, addr=0x37
[   33.522777] sensor_write: reg=0x8d val=0x92 SUCCESS
[   33.522785] sensor_write: reg=0x90 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.523099] sensor_write: reg=0x90 val=0x00 SUCCESS
[   33.523107] sensor_write: reg=0x41 val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.523420] sensor_write: reg=0x41 val=0x04 SUCCESS
[   33.523429] sensor_write: reg=0x42 val=0x9d, client=8555fe00, adapter=i2c0, addr=0x37
[   33.523740] sensor_write: reg=0x42 val=0x9d SUCCESS
[   33.523749] sensor_write: reg=0x9d val=0x10, client=8555fe00, adapter=i2c0, addr=0x37
[   33.524051] sensor_write: reg=0x9d val=0x10 SUCCESS
[   33.524061] sensor_write: reg=0xce val=0x7c, client=8555fe00, adapter=i2c0, addr=0x37
[   33.524386] sensor_write: reg=0xce val=0x7c SUCCESS
[   33.524395] sensor_write: reg=0xd2 val=0x41, client=8555fe00, adapter=i2c0, addr=0x37
[   33.524709] sensor_write: reg=0xd2 val=0x41 SUCCESS
[   33.524718] sensor_write: reg=0xd3 val=0xdc, client=8555fe00, adapter=i2c0, addr=0x37
[   33.525031] sensor_write: reg=0xd3 val=0xdc SUCCESS
[   33.525039] sensor_write: reg=0xe6 val=0x50, client=8555fe00, adapter=i2c0, addr=0x37
[   33.525353] sensor_write: reg=0xe6 val=0x50 SUCCESS
[   33.525361] sensor_write: reg=0xb6 val=0xc0, client=8555fe00, adapter=i2c0, addr=0x37
[   33.525674] sensor_write: reg=0xb6 val=0xc0 SUCCESS
[   33.525683] sensor_write: reg=0xb0 val=0x70, client=8555fe00, adapter=i2c0, addr=0x37
[   33.525996] sensor_write: reg=0xb0 val=0x70 SUCCESS
[   33.526004] sensor_write: reg=0xb1 val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.526317] sensor_write: reg=0xb1 val=0x01 SUCCESS
[   33.526325] sensor_write: reg=0xb2 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.526639] sensor_write: reg=0xb2 val=0x00 SUCCESS
[   33.526647] sensor_write: reg=0xb3 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.526959] sensor_write: reg=0xb3 val=0x00 SUCCESS
[   33.526968] sensor_write: reg=0xb4 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.532101] sensor_write: reg=0xb4 val=0x00 SUCCESS
[   33.532116] sensor_write: reg=0xb8 val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.532433] sensor_write: reg=0xb8 val=0x01 SUCCESS
[   33.532442] sensor_write: reg=0xb9 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.532760] sensor_write: reg=0xb9 val=0x00 SUCCESS
[   33.532769] sensor_write: reg=0x26 val=0x30, client=8555fe00, adapter=i2c0, addr=0x37
[   33.533081] sensor_write: reg=0x26 val=0x30 SUCCESS
[   33.533090] sensor_write: reg=0xfe val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.533403] sensor_write: reg=0xfe val=0x01 SUCCESS
[   33.533412] sensor_write: reg=0x40 val=0x23, client=8555fe00, adapter=i2c0, addr=0x37
[   33.533725] sensor_write: reg=0x40 val=0x23 SUCCESS
[   33.533734] sensor_write: reg=0x55 val=0x07, client=8555fe00, adapter=i2c0, addr=0x37
[   33.534036] sensor_write: reg=0x55 val=0x07 SUCCESS
[   33.534046] sensor_write: reg=0x60 val=0x40, client=8555fe00, adapter=i2c0, addr=0x37
[   33.534361] sensor_write: reg=0x60 val=0x40 SUCCESS
[   33.534369] sensor_write: reg=0xfe val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.534683] sensor_write: reg=0xfe val=0x04 SUCCESS
[   33.534691] sensor_write: reg=0x14 val=0x78, client=8555fe00, adapter=i2c0, addr=0x37
[   33.535005] sensor_write: reg=0x14 val=0x78 SUCCESS
[   33.535013] sensor_write: reg=0x15 val=0x78, client=8555fe00, adapter=i2c0, addr=0x37
[   33.535326] sensor_write: reg=0x15 val=0x78 SUCCESS
[   33.535335] sensor_write: reg=0x16 val=0x78, client=8555fe00, adapter=i2c0, addr=0x37
[   33.535647] sensor_write: reg=0x16 val=0x78 SUCCESS
[   33.535656] sensor_write: reg=0x17 val=0x78, client=8555fe00, adapter=i2c0, addr=0x37
[   33.535973] sensor_write: reg=0x17 val=0x78 SUCCESS
[   33.535982] sensor_write: reg=0xfe val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.536295] sensor_write: reg=0xfe val=0x01 SUCCESS
[   33.536303] sensor_write: reg=0x92 val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.536617] sensor_write: reg=0x92 val=0x00 SUCCESS
[   33.536625] sensor_write: reg=0x94 val=0x03, client=8555fe00, adapter=i2c0, addr=0x37
[   33.542102] sensor_write: reg=0x94 val=0x03 SUCCESS
[   33.542117] sensor_write: reg=0x95 val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.542435] sensor_write: reg=0x95 val=0x04 SUCCESS
[   33.542443] sensor_write: reg=0x96 val=0x38, client=8555fe00, adapter=i2c0, addr=0x37
[   33.542761] sensor_write: reg=0x96 val=0x38 SUCCESS
[   33.542770] sensor_write: reg=0x97 val=0x07, client=8555fe00, adapter=i2c0, addr=0x37
[   33.543083] sensor_write: reg=0x97 val=0x07 SUCCESS
[   33.543092] sensor_write: reg=0x98 val=0x80, client=8555fe00, adapter=i2c0, addr=0x37
[   33.543405] sensor_write: reg=0x98 val=0x80 SUCCESS
[   33.543414] sensor_write: reg=0xfe val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.543727] sensor_write: reg=0xfe val=0x01 SUCCESS
[   33.543735] sensor_write: reg=0x01 val=0x05, client=8555fe00, adapter=i2c0, addr=0x37
[   33.544103] sensor_write: reg=0x01 val=0x05 SUCCESS
[   33.544113] sensor_write: reg=0x02 val=0x89, client=8555fe00, adapter=i2c0, addr=0x37
[   33.544436] sensor_write: reg=0x02 val=0x89 SUCCESS
[   33.544445] sensor_write: reg=0x04 val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.544759] sensor_write: reg=0x04 val=0x01 SUCCESS
[   33.544767] sensor_write: reg=0x07 val=0xa6, client=8555fe00, adapter=i2c0, addr=0x37
[   33.545081] sensor_write: reg=0x07 val=0xa6 SUCCESS
[   33.545089] sensor_write: reg=0x08 val=0xa9, client=8555fe00, adapter=i2c0, addr=0x37
[   33.545402] sensor_write: reg=0x08 val=0xa9 SUCCESS
[   33.545410] sensor_write: reg=0x09 val=0xa8, client=8555fe00, adapter=i2c0, addr=0x37
[   33.545723] sensor_write: reg=0x09 val=0xa8 SUCCESS
[   33.545731] sensor_write: reg=0x0a val=0xa7, client=8555fe00, adapter=i2c0, addr=0x37
[   33.546045] sensor_write: reg=0x0a val=0xa7 SUCCESS
[   33.546053] sensor_write: reg=0x0b val=0xff, client=8555fe00, adapter=i2c0, addr=0x37
[   33.546366] sensor_write: reg=0x0b val=0xff SUCCESS
[   33.546374] sensor_write: reg=0x0c val=0xff, client=8555fe00, adapter=i2c0, addr=0x37
[   33.546687] sensor_write: reg=0x0c val=0xff SUCCESS
[   33.546695] sensor_write: reg=0x0f val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.547008] sensor_write: reg=0x0f val=0x00 SUCCESS
[   33.547017] sensor_write: reg=0x50 val=0x1c, client=8555fe00, adapter=i2c0, addr=0x37
[   33.552102] sensor_write: reg=0x50 val=0x1c SUCCESS
[   33.552117] sensor_write: reg=0x89 val=0x03, client=8555fe00, adapter=i2c0, addr=0x37
[   33.552435] sensor_write: reg=0x89 val=0x03 SUCCESS
[   33.552444] sensor_write: reg=0xfe val=0x04, client=8555fe00, adapter=i2c0, addr=0x37
[   33.552763] sensor_write: reg=0xfe val=0x04 SUCCESS
[   33.552771] sensor_write: reg=0x28 val=0x86, client=8555fe00, adapter=i2c0, addr=0x37
[   33.553085] sensor_write: reg=0x28 val=0x86 SUCCESS
[   33.553093] sensor_write_array: reg[100] 0x28=0x86 OK
[   33.553102] sensor_write: reg=0x29 val=0x86, client=8555fe00, adapter=i2c0, addr=0x37
[   33.553415] sensor_write: reg=0x29 val=0x86 SUCCESS
[   33.553424] sensor_write: reg=0x2a val=0x86, client=8555fe00, adapter=i2c0, addr=0x37
[   33.553737] sensor_write: reg=0x2a val=0x86 SUCCESS
[   33.553745] sensor_write: reg=0x2b val=0x68, client=8555fe00, adapter=i2c0, addr=0x37
[   33.554113] sensor_write: reg=0x2b val=0x68 SUCCESS
[   33.554123] sensor_write: reg=0x2c val=0x68, client=8555fe00, adapter=i2c0, addr=0x37
[   33.554436] sensor_write: reg=0x2c val=0x68 SUCCESS
[   33.554445] sensor_write: reg=0x2d val=0x68, client=8555fe00, adapter=i2c0, addr=0x37
[   33.554759] sensor_write: reg=0x2d val=0x68 SUCCESS
[   33.554769] sensor_write: reg=0x2e val=0x68, client=8555fe00, adapter=i2c0, addr=0x37
[   33.555080] sensor_write: reg=0x2e val=0x68 SUCCESS
[   33.555088] sensor_write: reg=0x2f val=0x68, client=8555fe00, adapter=i2c0, addr=0x37
[   33.555401] sensor_write: reg=0x2f val=0x68 SUCCESS
[   33.555410] sensor_write: reg=0x30 val=0x4f, client=8555fe00, adapter=i2c0, addr=0x37
[   33.555723] sensor_write: reg=0x30 val=0x4f SUCCESS
[   33.555731] sensor_write: reg=0x31 val=0x68, client=8555fe00, adapter=i2c0, addr=0x37
[   33.556043] sensor_write: reg=0x31 val=0x68 SUCCESS
[   33.556051] sensor_write: reg=0x32 val=0x67, client=8555fe00, adapter=i2c0, addr=0x37
[   33.556364] sensor_write: reg=0x32 val=0x67 SUCCESS
[   33.556373] sensor_write: reg=0x33 val=0x66, client=8555fe00, adapter=i2c0, addr=0x37
[   33.556685] sensor_write: reg=0x33 val=0x66 SUCCESS
[   33.556694] sensor_write: reg=0x34 val=0x66, client=8555fe00, adapter=i2c0, addr=0x37
[   33.559487] sensor_write: reg=0x34 val=0x66 SUCCESS
[   33.559500] sensor_write: reg=0x35 val=0x66, client=8555fe00, adapter=i2c0, addr=0x37
[   33.559818] sensor_write: reg=0x35 val=0x66 SUCCESS
[   33.559827] sensor_write: reg=0x36 val=0x66, client=8555fe00, adapter=i2c0, addr=0x37
[   33.560143] sensor_write: reg=0x36 val=0x66 SUCCESS
[   33.560153] sensor_write: reg=0x37 val=0x66, client=8555fe00, adapter=i2c0, addr=0x37
[   33.560467] sensor_write: reg=0x37 val=0x66 SUCCESS
[   33.560475] sensor_write: reg=0x38 val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.560789] sensor_write: reg=0x38 val=0x62 SUCCESS
[   33.560797] sensor_write: reg=0x39 val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.561111] sensor_write: reg=0x39 val=0x62 SUCCESS
[   33.561119] sensor_write: reg=0x3a val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.561433] sensor_write: reg=0x3a val=0x62 SUCCESS
[   33.561441] sensor_write: reg=0x3b val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.561755] sensor_write: reg=0x3b val=0x62 SUCCESS
[   33.561763] sensor_write: reg=0x3c val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.562113] sensor_write: reg=0x3c val=0x62 SUCCESS
[   33.562125] sensor_write: reg=0x3d val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.562439] sensor_write: reg=0x3d val=0x62 SUCCESS
[   33.562447] sensor_write: reg=0x3e val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.564216] sensor_write: reg=0x3e val=0x62 SUCCESS
[   33.564229] sensor_write: reg=0x3f val=0x62, client=8555fe00, adapter=i2c0, addr=0x37
[   33.564555] sensor_write: reg=0x3f val=0x62 SUCCESS
[   33.564564] sensor_write: reg=0xfe val=0x01, client=8555fe00, adapter=i2c0, addr=0x37
[   33.572105] sensor_write: reg=0xfe val=0x01 SUCCESS
[   33.572121] sensor_write: reg=0x9a val=0x06, client=8555fe00, adapter=i2c0, addr=0x37
[   33.572438] sensor_write: reg=0x9a val=0x06 SUCCESS
[   33.572447] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.572764] sensor_write: reg=0xfe val=0x00 SUCCESS
[   33.572773] sensor_write: reg=0x7b val=0x2a, client=8555fe00, adapter=i2c0, addr=0x37
[   33.573085] sensor_write: reg=0x7b val=0x2a SUCCESS
[   33.573094] sensor_write: reg=0x23 val=0x2d, client=8555fe00, adapter=i2c0, addr=0x37
[   33.573407] sensor_write: reg=0x23 val=0x2d SUCCESS
[   33.573416] sensor_write: reg=0xfe val=0x03, client=8555fe00, adapter=i2c0, addr=0x37
[   33.573729] sensor_write: reg=0xfe val=0x03 SUCCESS
[   33.573737] sensor_write: reg=0x01 val=0x27, client=8555fe00, adapter=i2c0, addr=0x37
[   33.574050] sensor_write: reg=0x01 val=0x27 SUCCESS
[   33.574059] sensor_write: reg=0x02 val=0x56, client=8555fe00, adapter=i2c0, addr=0x37
[   33.574429] sensor_write: reg=0x02 val=0x56 SUCCESS
[   33.574439] sensor_write: reg=0x03 val=0x8e, client=8555fe00, adapter=i2c0, addr=0x37
[   33.574757] sensor_write: reg=0x03 val=0x8e SUCCESS
[   33.574765] sensor_write: reg=0x12 val=0x80, client=8555fe00, adapter=i2c0, addr=0x37
[   33.575079] sensor_write: reg=0x12 val=0x80 SUCCESS
[   33.575088] sensor_write: reg=0x13 val=0x07, client=8555fe00, adapter=i2c0, addr=0x37
[   33.575401] sensor_write: reg=0x13 val=0x07 SUCCESS
[   33.575410] sensor_write: reg=0x15 val=0x12, client=8555fe00, adapter=i2c0, addr=0x37
[   33.575723] sensor_write: reg=0x15 val=0x12 SUCCESS
[   33.575732] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   33.576045] sensor_write: reg=0xfe val=0x00 SUCCESS
[   33.576053] sensor_write: reg=0x3e val=0x91, client=8555fe00, adapter=i2c0, addr=0x37
[   33.576367] sensor_write: reg=0x3e val=0x91 SUCCESS
[   33.576373] sensor_write_array: Complete - wrote 137 registers, 0 errors
[   33.576380] *** SENSOR_WRITE_ARRAY RETURNED: 0 ***
[   33.576386] *** SENSOR_INIT: gc2053 initialization complete - marked as initialized ***
[   33.576393] Calling subdev 4 initialization (REVERSE ORDER - sensors first)
[   33.576400] *** SENSOR_INIT: gc2053 enable=1 ***
[   33.576406] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   33.576412] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   33.576419] Calling subdev 2 initialization (REVERSE ORDER - sensors first)
[   33.576425] VIN: tx_isp_vin_init: EXACT Binary Ninja implementation with safety checks = 0x1
[   33.576432] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   33.576440] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   33.576447] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   33.576453] VIN: tx_isp_vin_init: a0 (sensor) = 85fbb000
[   33.576459] VIN: tx_isp_vin_init: using VIN device from global ISP: 8520fc00
[   33.576465] VIN: tx_isp_vin_init: calling sensor init function = 0x1
[   33.576471] *** SENSOR_INIT: gc2053 enable=1 ***
[   33.576477] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   33.576483] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   33.576489] VIN: tx_isp_vin_init: sensor init returned = 0x0
[   33.576495] VIN: tx_isp_vin_init: *** VIN STATE SET SAFELY *** = 0x3
[   33.576501] VIN: tx_isp_vin_init: EXACT Binary Ninja result = 0x0
[   33.576507] Calling subdev 1 initialization (REVERSE ORDER - sensors first)
[   33.576513] *** vic_core_ops_init: ENTRY - sd=8521b400, enable=1 ***
[   33.576520] *** vic_core_ops_init: vic_dev=8521b400, current state check ***
[   33.576526] *** vic_core_ops_init: current_state=2, enable=1 ***
[   33.576531] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   33.576537] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   33.576543] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   33.576549] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   33.576555] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   33.576563] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   33.576568] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   33.576574] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   33.576580] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   33.576586] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   33.576591] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   33.576597] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   33.576605] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   33.576611] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   33.576616] *** tx_vic_enable_irq: completed successfully ***
[   33.576622] Calling subdev 0 initialization (REVERSE ORDER - sensors first)
[   33.576630] csi_core_ops_init: sd=854a8800, csi_dev=854a8800, enable=1
[   33.576635] *** VIC device final state set to 2 (fully activated) ***
[   33.576641] *** ispcore_activate_module: SUCCESS - ALL REGISTER WRITES SHOULD NOW BE TRIGGERED ***
[   33.576647] *** tx_isp_video_s_stream: ispcore_activate_module completed ***
[   33.576653] *** tx_isp_video_s_stream: VIC state is 2, calling VIC core->init ***
[   33.576659] *** vic_core_ops_init: ENTRY - sd=8521b400, enable=1 ***
[   33.576665] *** vic_core_ops_init: vic_dev=8521b400, current state check ***
[   33.576671] *** vic_core_ops_init: current_state=2, enable=1 ***
[   33.576677] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   33.576683] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   33.576688] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   33.576694] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   33.576700] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   33.576707] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   33.576713] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   33.576718] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   33.576724] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   33.576730] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   33.576735] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   33.576741] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   33.576748] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   33.576753] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   33.576759] *** tx_vic_enable_irq: completed successfully ***
[   33.576764] *** tx_isp_video_s_stream: VIC core->init completed, VIC should now be state 3 ***
[   33.576770] *** tx_isp_video_s_stream: Core initialization complete, proceeding with subdev streaming ***
[   33.576776] *** tx_isp_video_s_stream: CRITICAL FIX - Initializing all subdevs before streaming ***
[   33.576783] *** tx_isp_video_s_stream: Initializing CSI subdev ***
[   33.576791] csi_core_ops_init: sd=854a8800, csi_dev=854a8800, enable=1
[   33.576796] *** tx_isp_video_s_stream: CSI init SUCCESS ***
[   33.576801] *** tx_isp_video_s_stream: Initializing VIC subdev ***
[   33.576808] *** vic_core_ops_init: ENTRY - sd=8521b400, enable=1 ***
[   33.576814] *** vic_core_ops_init: vic_dev=8521b400, current state check ***
[   33.576820] *** vic_core_ops_init: current_state=3, enable=1 ***
[   33.576825] *** tx_isp_video_s_stream: VIC init SUCCESS ***
[   33.576831] *** tx_isp_video_s_stream: Initializing Sensor subdev ***
[   33.576837] *** SENSOR_INIT: gc2053 enable=1 ***
[   33.576843] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   33.576849] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   33.576855] *** tx_isp_video_s_stream: Sensor init SUCCESS ***
[   33.576860] *** tx_isp_video_s_stream: All subdev initialization complete - proceeding with s_stream ***
[   33.576867] *** tx_isp_video_s_stream: Calling subdev[0]->ops->video->s_stream(1) ***
[   33.576873] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   33.576879] csi_video_s_stream: sd=854a8800, enable=1
[   33.576885] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   33.576892] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   33.576898] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   33.576903] csi_video_s_stream: Stream ON - CSI state set to 4
[   33.576909] *** tx_isp_video_s_stream: subdev[0] s_stream SUCCESS ***
[   33.576916] *** tx_isp_video_s_stream: Calling subdev[1]->ops->video->s_stream(1) ***
[   33.576923] *** vic_core_s_stream: BINARY NINJA EXACT - sd=8521b400, enable=1 ***
[   33.576929] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=3 ***
[   33.576934] *** vic_core_s_stream: STREAM ON ***
[   33.576940] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   33.576945] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   33.576951] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   33.576959] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   33.576965] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   33.576971] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   33.576977] *** STREAMING: Configuring CPM registers for VIC access ***
[   33.602106] STREAMING: CPM clocks configured for VIC access
[   33.602121] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   33.602127] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   33.602134] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   33.602140] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   33.602146] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   33.602151] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   33.602159] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   33.602165] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   33.602172] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   33.602177] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   33.602183] *** VIC unlock: Commands written, checking VIC status register ***
[   33.602190] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   33.602195] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   33.602201] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   33.602207] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   33.602212] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   33.602218] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   33.602294] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   33.602302] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   33.602309] *** VIC REGISTER CONFIG: Writing VIC configuration registers (vic_start_ok=0) ***
[   33.602317] *** VIC REGISTER CONFIG: VIC configuration registers written (0xc=2, 0x10=0x07800438, 0x14=3840) ***
[   33.602324] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   33.602329] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   33.602337] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   33.602343] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   33.602349] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   33.602354] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   33.602360] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   33.602367] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   33.602372] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   33.602377] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   33.602384] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   33.602390] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   33.602396] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   33.602402] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   33.602408] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   33.602414] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   33.602420] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   33.602427] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   33.602432] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   33.602441] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   33.602447] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   33.602453] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   33.602461] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   33.602467] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   33.602473] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   33.602478] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   33.602484] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   33.602491] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   33.602497] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   33.602505] ispvic_frame_channel_qbuf: arg1=8521b400, arg2=  (null)
[   33.602511] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   33.602517] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   33.602523] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   33.602529] ispvic_frame_channel_s_stream: arg1=8521b400, arg2=1
[   33.602535] ispvic_frame_channel_s_stream: s0 (vic_dev) = 8521b400
[   33.602543] ispvic_frame_channel_s_stream[2441]: streamon
[   33.602549] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   33.602555] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   33.602561] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   33.602566] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   33.602571] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   33.602579] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   33.602584] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   33.602591] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   33.602597] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   33.602603] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   33.602609] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   33.602615] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   33.602621] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   33.602629] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   33.602636] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   33.602644] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   33.602651] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   33.602659] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   33.602665] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   33.602671] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   33.602676] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   33.602683] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   33.602689] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   33.602695] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   33.602700] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   33.602707] ispvic_frame_channel_qbuf: arg1=8521b400, arg2=  (null)
[   33.602712] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   33.602723] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   33.602731] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   33.602795] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   33.602805] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   33.602811] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   33.602820] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   33.602827] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   33.602832] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   33.602839] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   33.602845] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   33.603852] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   33.603857] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   33.603863] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   33.603970] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   33.604077] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   33.604084] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   33.604090] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   33.604095] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   33.604101] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   33.604107] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   33.604115] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   33.604121] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   33.604126] *** tx_vic_enable_irq: completed successfully ***
[   34.000399] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   34.000412] *** vic_core_s_stream: VIC state transition 3 → 4 (STREAMING) ***
[   34.000418] *** VIC STATE 4: Initializing clocks for streaming ***
[   34.000426] *** Initializing CSI clocks (2 clocks) ***
[   34.000432] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[   34.000439] isp_subdev_init_clks: Using platform data clock arrays: c06b5928
[   34.000445] isp_subdev_init_clks: Using platform data clock configs
[   34.000453] Platform data clock[0]: name=cgu_isp, rate=100000000
[   34.000465] Clock cgu_isp: set rate 100000000 Hz, result=0
[   34.000472] Clock cgu_isp enabled successfully
[   34.000479] Platform data clock[1]: name=isp, rate=65535
[   34.000486] Clock isp enabled successfully
root@ing-wyze-cam3-a000 ~# dmesg 
[   33.602805] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   33.602811] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   33.602820] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   33.602827] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   33.602832] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   33.602839] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   33.602845] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   33.603852] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   33.603857] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   33.603863] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   33.603970] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   33.604077] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   33.604084] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   33.604090] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   33.604095] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   33.604101] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   33.604107] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   33.604115] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   33.604121] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   33.604126] *** tx_vic_enable_irq: completed successfully ***
[   34.000399] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   34.000412] *** vic_core_s_stream: VIC state transition 3 → 4 (STREAMING) ***
[   34.000418] *** VIC STATE 4: Initializing clocks for streaming ***
[   34.000426] *** Initializing CSI clocks (2 clocks) ***
[   34.000432] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[   34.000439] isp_subdev_init_clks: Using platform data clock arrays: c06b5928
[   34.000445] isp_subdev_init_clks: Using platform data clock configs
[   34.000453] Platform data clock[0]: name=cgu_isp, rate=100000000
[   34.000465] Clock cgu_isp: set rate 100000000 Hz, result=0
[   34.000472] Clock cgu_isp enabled successfully
[   34.000479] Platform data clock[1]: name=isp, rate=65535
[   34.000486] Clock isp enabled successfully
[   34.022234] CPM clock gates configured
[   34.022246] isp_subdev_init_clks: Successfully initialized 2 clocks
[   34.022253] *** Initializing VIC clocks (2 clocks) ***
[   34.022259] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[   34.022267] isp_subdev_init_clks: Using platform data clock arrays: c06b5a40
[   34.022274] isp_subdev_init_clks: Using platform data clock configs
[   34.022283] Platform data clock[0]: name=cgu_isp, rate=100000000
[   34.022293] Clock cgu_isp: set rate 100000000 Hz, result=0
[   34.022299] Clock cgu_isp enabled successfully
[   34.022305] Platform data clock[1]: name=isp, rate=65535
[   34.022313] Clock isp enabled successfully
[   34.052285] CPM clock gates configured
[   34.052300] isp_subdev_init_clks: Successfully initialized 2 clocks
[   34.052307] *** VIC STATE 4: Calling ispcore_slake_module to initialize ISP core ***
[   34.052313] *** ispcore_slake_module: EXACT Binary Ninja MCP implementation ***
[   34.052321] ispcore_slake_module: VIC device=8521b400, state=4<6>[   34.052331] *** ispcore_core_ops_init: ENTRY - sd=85fb4000, on=1 ***
[   34.052338] *** ispcore_core_ops_init: sd->dev_priv=85fb4000, sd->host_priv=85fb4000 ***
[   34.052345] *** ispcore_core_ops_init: sd->pdev=c06b54f0, sd->ops=c06b5c18 ***
[   34.052351] *** ispcore_core_ops_init: EXACT Binary Ninja MCP implementation, on=1 ***
[   34.052356] *** ispcore_core_ops_init: ISP device=85fa0000 ****** ispcore_core_ops_init: Frame sync work structure initialized ***
[   34.052364] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   34.052374] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   34.052381] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   34.052387] ispcore_core_ops_init: Using sensor attributes from sensor: gc2053
[   34.052392] *** ispcore_core_ops_init: s0 (core_dev) = 85fb4000 from sd->host_priv ***
[   34.052399] ispcore_core_ops_init: core_dev=85fb4000, vic_dev=8521b400, vic_state=4
[   34.052403] *** ispcore_core_ops_init: INITIALIZING CORE (on=1) ****** ispcore_core_ops_init: Current vic_state (VIC state): 4 ***
[   34.052412] *** ispcore_core_ops_init: VIC already streaming (state 4) - initializing during streaming ****** ispcore_core_ops_init: VIC state check passed, proceeding with initialization ***
[   34.052421] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   34.052428] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   34.052435] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   34.052439] *** ispcore_core_ops_init: BINARY NINJA MCP - Second tisp_init call (00079058) ***
[   34.052445] *** tisp_init: IMPLEMENTING MISSING HARDWARE REGISTER INITIALIZATION ***
[   34.052450] *** THIS FUNCTION CONTAINS ALL THE system_reg_write CALLS FROM REFERENCE ***
[   34.052457] *** tisp_init: FIXED - Extracted dimensions from sensor_attr: 2200x1418 ***
[   34.052463] tisp_init: Initializing ISP hardware for sensor (2200x1418)
[   34.052469] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   34.052475] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   34.052480] tisp_event_init: Initializing ISP event system
[   34.052489] tisp_event_init: SAFE event system initialized with 20 nodes
[   34.052495] tisp_event_set_cb: Setting callback for event 4
[   34.052501] tisp_event_set_cb: Event 4 callback set to c0684498
[   34.052507] tisp_event_set_cb: Setting callback for event 5
[   34.052513] tisp_event_set_cb: Event 5 callback set to c0684960
[   34.052519] tisp_event_set_cb: Setting callback for event 7
[   34.052525] tisp_event_set_cb: Event 7 callback set to c068452c
[   34.052531] tisp_event_set_cb: Setting callback for event 9
[   34.052537] tisp_event_set_cb: Event 9 callback set to c06845b4
[   34.052543] tisp_event_set_cb: Setting callback for event 8
[   34.052549] tisp_event_set_cb: Event 8 callback set to c0684678
[   34.052556] *** system_irq_func_set: Registered handler c067d3f4 at index 13 ***
[   34.081122] *** WRITING ISP CORE CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   34.081315] *** SYSTEM_REG_WRITE: reg[0xb004] = 0xf001f001 (Binary Ninja EXACT) ***
[   34.081534] *** SYSTEM_REG_WRITE: reg[0xb008] = 0x40404040 (Binary Ninja EXACT) ***
[   34.081653] *** SYSTEM_REG_WRITE: reg[0xb00c] = 0x40404040 (Binary Ninja EXACT) ***
[   34.082735] *** SYSTEM_REG_WRITE: reg[0xb010] = 0x40404040 (Binary Ninja EXACT) ***
[   34.082746] *** SYSTEM_REG_WRITE: reg[0xb014] = 0x404040 (Binary Ninja EXACT) ***
[   34.082754] system_reg_write: BLOCKED core-control reg[0xb018]=0x40404040 during streaming (preserve interrupts)
[   34.082761] system_reg_write: BLOCKED core-control reg[0xb01c]=0x40404040 during streaming (preserve interrupts)
[   34.082769] system_reg_write: BLOCKED core-control reg[0xb020]=0x40404040 during streaming (preserve interrupts)
[   34.082776] system_reg_write: BLOCKED core-control reg[0xb024]=0x404040 during streaming (preserve interrupts)
[   34.082783] *** SYSTEM_REG_WRITE: reg[0xb028] = 0x1000080 (Binary Ninja EXACT) ***
[   34.082790] *** SYSTEM_REG_WRITE: reg[0xb02c] = 0x1000080 (Binary Ninja EXACT) ***
[   34.082797] *** SYSTEM_REG_WRITE: reg[0xb030] = 0x100 (Binary Ninja EXACT) ***
[   34.082804] *** SYSTEM_REG_WRITE: reg[0xb034] = 0xffff0100 (Binary Ninja EXACT) ***
[   34.082811] *** SYSTEM_REG_WRITE: reg[0xb038] = 0x1ff00 (Binary Ninja EXACT) ***
[   34.082817] *** SYSTEM_REG_WRITE: reg[0xb04c] = 0x103 (Binary Ninja EXACT) ***
[   34.082824] *** SYSTEM_REG_WRITE: reg[0xb050] = 0x3 (Binary Ninja EXACT) ***
[   34.082829] *** WRITING CRITICAL VARYING REGISTERS - USING EXACT REFERENCE VALUES ***
[   34.082837] *** SYSTEM_REG_WRITE: reg[0xb07c] = 0x341b (Binary Ninja EXACT) ***
[   34.082843] *** SYSTEM_REG_WRITE: reg[0xb080] = 0x46b0 (Binary Ninja EXACT) ***
[   34.082850] *** SYSTEM_REG_WRITE: reg[0xb084] = 0x1813 (Binary Ninja EXACT) ***
[   34.082857] *** SYSTEM_REG_WRITE: reg[0xb08c] = 0x10a (Binary Ninja EXACT) ***
[   34.082862] *** ISP CORE CONTROL REGISTERS WRITTEN - NOW MATCHES REFERENCE DRIVER ***
[   34.082868] *** WRITING ISP CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   34.082875] system_reg_write: BLOCKED reg[0x9804]=0x3f00 during streaming to protect interrupts
[   34.082882] *** SYSTEM_REG_WRITE: reg[0x9864] = 0x7800438 (Binary Ninja EXACT) ***
[   34.082889] *** SYSTEM_REG_WRITE: reg[0x987c] = 0xc0000000 (Binary Ninja EXACT) ***
[   34.082895] *** SYSTEM_REG_WRITE: reg[0x9880] = 0x1 (Binary Ninja EXACT) ***
[   34.082902] *** SYSTEM_REG_WRITE: reg[0x9884] = 0x1 (Binary Ninja EXACT) ***
[   34.082909] *** SYSTEM_REG_WRITE: reg[0x9890] = 0x1010001 (Binary Ninja EXACT) ***
[   34.082915] *** SYSTEM_REG_WRITE: reg[0x989c] = 0x1010001 (Binary Ninja EXACT) ***
[   34.082923] *** SYSTEM_REG_WRITE: reg[0x98a8] = 0x1010001 (Binary Ninja EXACT) ***
[   34.082928] *** WRITING VIC CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   34.082935] *** SYSTEM_REG_WRITE: reg[0x9a00] = 0x50002d0 (Binary Ninja EXACT) ***
[   34.082942] *** SYSTEM_REG_WRITE: reg[0x9a04] = 0x3000300 (Binary Ninja EXACT) ***
[   34.082949] *** SYSTEM_REG_WRITE: reg[0x9a2c] = 0x50002d0 (Binary Ninja EXACT) ***
[   34.082955] *** SYSTEM_REG_WRITE: reg[0x9a34] = 0x1 (Binary Ninja EXACT) ***
[   34.082962] *** SYSTEM_REG_WRITE: reg[0x9a70] = 0x1 (Binary Ninja EXACT) ***
[   34.082969] *** SYSTEM_REG_WRITE: reg[0x9a7c] = 0x1 (Binary Ninja EXACT) ***
[   34.082975] *** SYSTEM_REG_WRITE: reg[0x9a80] = 0x500 (Binary Ninja EXACT) ***
[   34.082981] *** SYSTEM_REG_WRITE: reg[0x9a88] = 0x1 (Binary Ninja EXACT) ***
[   34.082988] *** SYSTEM_REG_WRITE: reg[0x9a94] = 0x1 (Binary Ninja EXACT) ***
[   34.082995] *** SYSTEM_REG_WRITE: reg[0x9a98] = 0x500 (Binary Ninja EXACT) ***
[   34.083001] *** TUNING SYSTEM: VIC control registers 0x9ac0/0x9ac8 REMOVED - not in Binary Ninja reference ***
[   34.083009] tisp_init: CRITICAL FIX - Using ACTUAL sensor image dimensions 1920x1080 (not frame size 2200x1418)
[   34.083016] *** SYSTEM_REG_WRITE: reg[0x4] = 0x898058a (Binary Ninja EXACT) ***
[   34.083022] *** SYSTEM_REG_WRITE: reg[0x8] = 0x0 (Binary Ninja EXACT) ***
[   34.083029] *** SYSTEM_REG_WRITE: reg[0x1c] = 0x3f08 (Binary Ninja EXACT) ***
[   34.083034] *** tisp_init: ISP control register set to enable processing pipeline ***
[   34.083041] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   34.083047] *** tisp_init: REFERENCE DRIVER format register 0x10 = 0x133 ***
[   34.083054] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   34.083059] *** tisp_init: REFERENCE DRIVER register 0x30 = 0xffffffff ***
[   34.083066] *** SYSTEM_REG_WRITE: reg[0x24] = 0x1 (Binary Ninja EXACT) ***
[   34.083072] *** SYSTEM_REG_WRITE: reg[0x28] = 0x1 (Binary Ninja EXACT) ***
[   34.083078] *** tisp_init: ISP data flow configured (input->processing->output) ***
[   34.083084] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   34.083090] *** tisp_init: STREAMING ACTIVE - Skipping ISP control register write to prevent shutdown ***
[   34.083096] *** tisp_init: VIC streaming detected - keeping ISP controls enabled ***
[   34.083103] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   34.083110] *** tisp_init: REFERENCE DRIVER final configuration - 0x804=0x1c, 0x1c=SKIPPED, 0x800=1 ***
[   34.083117] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   34.083123] *** tisp_init: ISP frame size configured - 1920x1080 (ACTUAL sensor image) ***
[   34.083130] *** SYSTEM_REG_WRITE: reg[0x8] = 0x1 (Binary Ninja EXACT) ***
[   34.083137] *** tisp_init: CRITICAL FIX - Bayer pattern configured: mbus=0x3001 -> pattern=1 (register 8) ***
[   34.083142] *** tisp_init: CONFIGURING RAW10 BAYER PROCESSING PIPELINE ***
[   34.083149] *** SYSTEM_REG_WRITE: reg[0x14] = 0x2b (Binary Ninja EXACT) ***
[   34.083155] *** SYSTEM_REG_WRITE: reg[0x18] = 0xa0a (Binary Ninja EXACT) ***
[   34.083162] *** SYSTEM_REG_WRITE: reg[0x40] = 0x1 (Binary Ninja EXACT) ***
[   34.083169] *** SYSTEM_REG_WRITE: reg[0x44] = 0x1 (Binary Ninja EXACT) ***
[   34.083175] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   34.083182] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x1000000 (Binary Ninja EXACT) ***
[   34.083189] *** SYSTEM_REG_WRITE: reg[0x5006] = 0x100 (Binary Ninja EXACT) ***
[   34.083197] *** SYSTEM_REG_WRITE: reg[0x5008] = 0x0 (Binary Ninja EXACT) ***
[   34.083204] *** SYSTEM_REG_WRITE: reg[0x500a] = 0x1000000 (Binary Ninja EXACT) ***
[   34.083211] *** SYSTEM_REG_WRITE: reg[0x500c] = 0x100 (Binary Ninja EXACT) ***
[   34.083218] *** SYSTEM_REG_WRITE: reg[0x5018] = 0x0 (Binary Ninja EXACT) ***
[   34.083225] *** SYSTEM_REG_WRITE: reg[0x501c] = 0x1 (Binary Ninja EXACT) ***
[   34.083231] *** SYSTEM_REG_WRITE: reg[0x5020] = 0x0 (Binary Ninja EXACT) ***
[   34.083237] *** CRITICAL FIX: CCM configured using EXACT Binary Ninja register addresses ***
[   34.083243] *** CCM registers 0x5004-0x5014 programmed with identity matrix ***
[   34.083248] *** This should eliminate green frames by enabling proper color processing ***
[   34.083255] *** SYSTEM_REG_WRITE: reg[0x200] = 0x4d (Binary Ninja EXACT) ***
[   34.083261] *** SYSTEM_REG_WRITE: reg[0x204] = 0x96 (Binary Ninja EXACT) ***
[   34.083268] *** SYSTEM_REG_WRITE: reg[0x208] = 0x1d (Binary Ninja EXACT) ***
[   34.083275] *** SYSTEM_REG_WRITE: reg[0x20c] = 0x70 (Binary Ninja EXACT) ***
[   34.083281] *** SYSTEM_REG_WRITE: reg[0x210] = 0x5a (Binary Ninja EXACT) ***
[   34.083287] *** SYSTEM_REG_WRITE: reg[0x214] = 0x80 (Binary Ninja EXACT) ***
[   34.083294] *** SYSTEM_REG_WRITE: reg[0x218] = 0x80 (Binary Ninja EXACT) ***
[   34.083301] *** SYSTEM_REG_WRITE: reg[0x21c] = 0x6a (Binary Ninja EXACT) ***
[   34.083307] *** SYSTEM_REG_WRITE: reg[0x220] = 0x16 (Binary Ninja EXACT) ***
[   34.083313] *** CRITICAL FIX: RGB to YUV conversion matrix configured properly ***
[   34.083318] *** tisp_init: RAW10 BAYER PROCESSING PIPELINE CONFIGURED ***
[   34.083324] *** tisp_init: Loading ISP tuning parameters from /etc/sensor/ ***
[   34.083329] *** tisp_init: Standard tuning parameters loaded successfully ***
[   34.083335] *** tisp_init: Custom tuning parameters loaded successfully ***
[   34.083341] tisp_set_csc_version: Setting CSC version 0
[   34.085977] *** SYSTEM_REG_WRITE: reg[0xc] = 0x80700008 (Binary Ninja EXACT) ***
[   34.086023] *** CRITICAL FIX: ISP bypass register set to EXACT reference value 0x80700008 - prevents hardware reset ***
[   34.086097] *** tisp_init: CONFIGURING ISP FOR NV12 OUTPUT FORMAT ***
[   34.086148] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   34.086155] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   34.086161] *** tisp_init: ISP configured for NV12 4:2:0 output format ***
[   34.086167] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   34.086173] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   34.086180] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x0 (Binary Ninja EXACT) ***
[   34.086185] *** tisp_init: ISP-VIC frame synchronization enabled ***
[   34.086191] *** SYSTEM_REG_WRITE: reg[0x6000] = 0x1 (Binary Ninja EXACT) ***
[   34.086198] *** SYSTEM_REG_WRITE: reg[0x6004] = 0x1 (Binary Ninja EXACT) ***
[   34.086203] *** tisp_init: ISP processing pipeline fully enabled ***
[   34.086210] *** SYSTEM_REG_WRITE: reg[0x7000] = 0x1 (Binary Ninja EXACT) ***
[   34.086217] *** SYSTEM_REG_WRITE: reg[0x7004] = 0x1 (Binary Ninja EXACT) ***
[   34.086222] *** tisp_init: ISP master processing enabled - pipeline should now work ***
[   34.086229] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   34.086235] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   34.086241] tisp_init: ISP memory buffers configured
[   34.086246] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   34.086253] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   34.086263] tiziano_ae_params_refresh: Refreshing AE parameters
[   34.086275] tiziano_ae_params_refresh: AE parameters refreshed
[   34.086280] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   34.086287] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   34.086292] tiziano_ae_para_addr: Setting up AE parameter addresses
[   34.086297] tiziano_ae_para_addr: AE parameter addresses configured
[   34.086303] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   34.086311] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   34.086317] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   34.086325] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   34.086331] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   34.086338] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   34.086345] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   34.086352] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b6c2814 (Binary Ninja EXACT) ***
[   34.086359] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   34.086366] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   34.086373] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   34.086379] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   34.086385] tiziano_ae_set_hardware_param: Parameters written to AE0
[   34.086391] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   34.086398] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   34.086405] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   34.086411] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   34.086417] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   34.086424] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   34.086431] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   34.086437] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   34.086444] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   34.086451] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   34.086457] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   34.086463] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   34.086469] tiziano_ae_set_hardware_param: Parameters written to AE1
[   34.086475] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   34.086483] *** system_irq_func_set: Registered handler c0685670 at index 10 ***
[   34.111389] *** system_irq_func_set: Registered handler c0685764 at index 27 ***
[   34.124939] *** system_irq_func_set: Registered handler c0685670 at index 26 ***
[   34.140806] *** system_irq_func_set: Registered handler c068584c at index 29 ***
[   34.153160] *** system_irq_func_set: Registered handler c06857d8 at index 28 ***
[   34.166290] *** system_irq_func_set: Registered handler c06858c0 at index 30 ***
[   34.177780] *** system_irq_func_set: Registered handler c0685914 at index 20 ***
[   34.189300] *** system_irq_func_set: Registered handler c0685968 at index 18 ***
[   34.200924] *** system_irq_func_set: Registered handler c06859bc at index 31 ***
[   34.212253] *** system_irq_func_set: Registered handler c0685a10 at index 11 ***
[   34.223512] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   34.223649] tiziano_deflicker_expt: Generated 119 LUT entries
[   34.223656] tisp_event_set_cb: Setting callback for event 1
[   34.223663] tisp_event_set_cb: Event 1 callback set to c0685270
[   34.224048] tisp_event_set_cb: Setting callback for event 6
[   34.224174] tisp_event_set_cb: Event 6 callback set to c06847d0
[   34.224181] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   34.224293] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   34.224301] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   34.224309] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   34.224316] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   34.224688] tiziano_awb_init: AWB hardware blocks enabled
[   34.224701] tiziano_gamma_init: Initializing Gamma processing
[   34.224847] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   34.225527] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   34.230083] tiziano_gib_init: Initializing GIB processing
[   34.230096] tiziano_lsc_init: Initializing LSC processing
[   34.230102] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   34.230109] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   34.230117] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   34.230124] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   34.230129] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   34.230188] tiziano_ccm_init: Initializing Color Correction Matrix
[   34.230194] tiziano_ccm_init: Using linear CCM parameters
[   34.230200] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   34.230206] jz_isp_ccm: EV=64, CT=9984
[   34.230213] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   34.230219] cm_control: saturation=128
[   34.230224] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   34.230230] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   34.230236] tiziano_ccm_init: CCM initialized successfully
[   34.230241] tiziano_dmsc_init: Initializing DMSC processing
[   34.230246] tiziano_sharpen_init: Initializing Sharpening
[   34.230252] tiziano_sharpen_init: Using linear sharpening parameters
[   34.230257] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   34.230264] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   34.230270] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   34.230296] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   34.230303] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   34.230308] tiziano_sharpen_init: Sharpening initialized successfully
[   34.230314] tiziano_sdns_init: Initializing SDNS processing
[   34.230322] tiziano_sdns_init: Using linear SDNS parameters
[   34.230328] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   34.230334] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   34.230340] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   34.230373] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   34.230379] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   34.230384] tiziano_sdns_init: SDNS processing initialized successfully
[   34.230391] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   34.230396] tiziano_mdns_init: Using linear MDNS parameters
[   34.230406] tiziano_mdns_init: MDNS processing initialized successfully
[   34.230412] tiziano_clm_init: Initializing CLM processing
[   34.230417] tiziano_dpc_init: Initializing DPC processing
[   34.230422] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   34.230428] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   34.230435] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   34.230441] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   34.230456] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   34.230462] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   34.230468] tiziano_hldc_init: Initializing HLDC processing
[   34.230474] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   34.230480] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   34.230487] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   34.230494] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   34.230501] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   34.230508] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   34.230514] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   34.230522] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   34.230528] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   34.230535] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   34.230542] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   34.230549] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   34.230556] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   34.230561] tiziano_adr_params_refresh: Refreshing ADR parameters
[   34.230567] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   34.230572] tiziano_adr_params_init: Initializing ADR parameter arrays
[   34.230579] tisp_adr_set_params: Writing ADR parameters to registers
[   34.230612] tisp_adr_set_params: ADR parameters written to hardware
[   34.230618] tisp_event_set_cb: Setting callback for event 18
[   34.230625] tisp_event_set_cb: Event 18 callback set to c0685968
[   34.230630] tisp_event_set_cb: Setting callback for event 2
[   34.230637] tisp_event_set_cb: Event 2 callback set to c068446c
[   34.230642] tiziano_adr_init: ADR processing initialized successfully
[   34.230648] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   34.230654] tiziano_bcsh_init: Initializing BCSH processing
[   34.230659] tiziano_ydns_init: Initializing YDNS processing
[   34.230664] tiziano_rdns_init: Initializing RDNS processing
[   34.230670] *** tisp_init: ALLOCATING ISP PROCESSING BUFFERS ***
[   34.230683] *** SYSTEM_REG_WRITE: reg[0xa02c] = 0x498000 (Binary Ninja EXACT) ***
[   34.230690] *** SYSTEM_REG_WRITE: reg[0xa030] = 0x499000 (Binary Ninja EXACT) ***
[   34.230697] *** SYSTEM_REG_WRITE: reg[0xa034] = 0x49a000 (Binary Ninja EXACT) ***
[   34.230704] *** SYSTEM_REG_WRITE: reg[0xa038] = 0x49b000 (Binary Ninja EXACT) ***
[   34.230711] *** SYSTEM_REG_WRITE: reg[0xa03c] = 0x49c000 (Binary Ninja EXACT) ***
[   34.230718] *** SYSTEM_REG_WRITE: reg[0xa040] = 0x49c800 (Binary Ninja EXACT) ***
[   34.230724] *** SYSTEM_REG_WRITE: reg[0xa044] = 0x49d000 (Binary Ninja EXACT) ***
[   34.230731] *** SYSTEM_REG_WRITE: reg[0xa048] = 0x49d800 (Binary Ninja EXACT) ***
[   34.230738] *** SYSTEM_REG_WRITE: reg[0xa04c] = 0x33 (Binary Ninja EXACT) ***
[   34.230744] *** tisp_init: AE0 buffer allocated at 0x00498000 ***
[   34.230750] *** CRITICAL FIX: data_b2f3c initialized to 0x80498000 (prevents stack corruption) ***
[   34.230759] *** SYSTEM_REG_WRITE: reg[0xa82c] = 0x1150000 (Binary Ninja EXACT) ***
[   34.230766] *** SYSTEM_REG_WRITE: reg[0xa830] = 0x1151000 (Binary Ninja EXACT) ***
[   34.230773] *** SYSTEM_REG_WRITE: reg[0xa834] = 0x1152000 (Binary Ninja EXACT) ***
[   34.230780] *** SYSTEM_REG_WRITE: reg[0xa838] = 0x1153000 (Binary Ninja EXACT) ***
[   34.230786] *** SYSTEM_REG_WRITE: reg[0xa83c] = 0x1154000 (Binary Ninja EXACT) ***
[   34.230794] *** SYSTEM_REG_WRITE: reg[0xa840] = 0x1154800 (Binary Ninja EXACT) ***
[   34.230800] *** SYSTEM_REG_WRITE: reg[0xa844] = 0x1155000 (Binary Ninja EXACT) ***
[   34.230807] *** SYSTEM_REG_WRITE: reg[0xa848] = 0x1155800 (Binary Ninja EXACT) ***
[   34.230814] *** SYSTEM_REG_WRITE: reg[0xa84c] = 0x33 (Binary Ninja EXACT) ***
[   34.230820] *** tisp_init: AE1 buffer allocated at 0x01150000 ***
[   34.230825] *** tisp_init: FINAL REGISTER SEQUENCE ***
[   34.230832] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   34.230837] *** tisp_init: STREAMING ACTIVE - Skipping second ISP control register write ***
[   34.230844] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   34.230849] *** tisp_init: INITIALIZING ISP SUB-MODULES ***
[   34.230856] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   34.230865] tiziano_ae_params_refresh: Refreshing AE parameters
[   34.230876] tiziano_ae_params_refresh: AE parameters refreshed
[   34.230882] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   34.230888] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   34.230893] tiziano_ae_para_addr: Setting up AE parameter addresses
[   34.230898] tiziano_ae_para_addr: AE parameter addresses configured
[   34.230905] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   34.230912] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   34.230919] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   34.230926] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   34.230933] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   34.230940] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   34.230946] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   34.230954] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b6c2814 (Binary Ninja EXACT) ***
[   34.230960] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   34.230967] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   34.230974] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   34.230980] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   34.230986] tiziano_ae_set_hardware_param: Parameters written to AE0
[   34.230992] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   34.230999] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   34.231006] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   34.231012] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   34.231018] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   34.231025] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   34.231032] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   34.231038] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   34.231045] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   34.231051] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   34.231058] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   34.231064] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   34.231070] tiziano_ae_set_hardware_param: Parameters written to AE1
[   34.231076] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   34.231083] *** system_irq_func_set: Registered handler c0685670 at index 10 ***
[   34.250291] *** system_irq_func_set: Registered handler c0685764 at index 27 ***
[   34.270481] *** system_irq_func_set: Registered handler c0685670 at index 26 ***
[   34.278142] *** system_irq_func_set: Registered handler c068584c at index 29 ***
[   34.292201] *** system_irq_func_set: Registered handler c06857d8 at index 28 ***
[   34.310010] *** system_irq_func_set: Registered handler c06858c0 at index 30 ***
[   34.328886] *** system_irq_func_set: Registered handler c0685914 at index 20 ***
[   34.339898] *** system_irq_func_set: Registered handler c0685968 at index 18 ***
[   34.352113] *** system_irq_func_set: Registered handler c06859bc at index 31 ***
[   34.365462] *** system_irq_func_set: Registered handler c0685a10 at index 11 ***
[   34.378073] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   34.378324] tiziano_deflicker_expt: Generated 119 LUT entries
[   34.378364] tisp_event_set_cb: Setting callback for event 1
[   34.378438] tisp_event_set_cb: Event 1 callback set to c0685270
[   34.378476] tisp_event_set_cb: Setting callback for event 6
[   34.378554] tisp_event_set_cb: Event 6 callback set to c06847d0
[   34.378592] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   34.378665] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   34.378704] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   34.378777] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   34.378815] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   34.379080] tiziano_awb_init: AWB hardware blocks enabled
[   34.379094] tiziano_gamma_init: Initializing Gamma processing
[   34.379222] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   34.380202] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   34.380333] tiziano_gib_init: Initializing GIB processing
[   34.380339] tiziano_lsc_init: Initializing LSC processing
[   34.380344] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   34.380352] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   34.380360] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   34.382895] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   34.382907] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   34.382972] tiziano_ccm_init: Initializing Color Correction Matrix
[   34.382978] tiziano_ccm_init: Using linear CCM parameters
[   34.382984] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   34.382991] jz_isp_ccm: EV=64, CT=9984
[   34.382998] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   34.383003] cm_control: saturation=128
[   34.383008] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   34.383015] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   34.383020] tiziano_ccm_init: CCM initialized successfully
[   34.383026] tiziano_dmsc_init: Initializing DMSC processing
[   34.383031] tiziano_sharpen_init: Initializing Sharpening
[   34.383036] tiziano_sharpen_init: Using linear sharpening parameters
[   34.383042] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   34.383048] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   34.383054] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   34.383081] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   34.383088] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   34.383094] tiziano_sharpen_init: Sharpening initialized successfully
[   34.383099] tiziano_sdns_init: Initializing SDNS processing
[   34.383107] tiziano_sdns_init: Using linear SDNS parameters
[   34.383113] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   34.383120] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   34.383126] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   34.383158] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   34.383165] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   34.383170] tiziano_sdns_init: SDNS processing initialized successfully
[   34.383177] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   34.383182] tiziano_mdns_init: Using linear MDNS parameters
[   34.383192] tiziano_mdns_init: MDNS processing initialized successfully
[   34.383198] tiziano_clm_init: Initializing CLM processing
[   34.383203] tiziano_dpc_init: Initializing DPC processing
[   34.383208] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   34.383214] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   34.383294] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   34.383301] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   34.383316] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   34.383324] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   34.383330] tiziano_hldc_init: Initializing HLDC processing
[   34.383336] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   34.383342] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   34.383349] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   34.383356] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   34.383363] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   34.383370] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   34.383376] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   34.383384] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   34.383390] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   34.383397] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   34.383404] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   34.383411] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   34.383418] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   34.383423] tiziano_adr_params_refresh: Refreshing ADR parameters
[   34.383429] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   34.383434] tiziano_adr_params_init: Initializing ADR parameter arrays
[   34.383441] tisp_adr_set_params: Writing ADR parameters to registers
[   34.383474] tisp_adr_set_params: ADR parameters written to hardware
[   34.383480] tisp_event_set_cb: Setting callback for event 18
[   34.383487] tisp_event_set_cb: Event 18 callback set to c0685968
[   34.383492] tisp_event_set_cb: Setting callback for event 2
[   34.383499] tisp_event_set_cb: Event 2 callback set to c068446c
[   34.383504] tiziano_adr_init: ADR processing initialized successfully
[   34.383510] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   34.383516] tiziano_bcsh_init: Initializing BCSH processing
[   34.383521] tiziano_ydns_init: Initializing YDNS processing
[   34.383526] tiziano_rdns_init: Initializing RDNS processing
[   34.383531] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   34.383536] tisp_event_init: Initializing ISP event system
[   34.383544] tisp_event_init: SAFE event system initialized with 20 nodes
[   34.383550] tisp_event_set_cb: Setting callback for event 4
[   34.383556] tisp_event_set_cb: Event 4 callback set to c0684498
[   34.383562] tisp_event_set_cb: Setting callback for event 5
[   34.383568] tisp_event_set_cb: Event 5 callback set to c0684960
[   34.383573] tisp_event_set_cb: Setting callback for event 7
[   34.383580] tisp_event_set_cb: Event 7 callback set to c068452c
---- FPGA board is ready ----
  Board UID : 30AB6E51
  Board HW ID : 72000460
  Board rev.  : 5DE5A975
  Board date  : 20190326
-----------------------------
[   34.383585] tisp_event_set_cb: Setting callback for event 9
[   34.383592] tisp_event_set_cb: Event 9 callback set to c06845b4
[   34.383597] tisp_event_set_cb: Setting callback for event 8
[   34.383603] tisp_event_set_cb: Event 8 callback set to c0684678
[   34.383608] *** tisp_init: BINARY NINJA REFERENCE - No event processing thread created ***
[   34.383614] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   34.383620] tisp_param_operate_init: Initializing parameter operations
[   34.383628] tisp_netlink_init: Initializing netlink communication
[   34.383633] tisp_netlink_init: Trying standard NETLINK_GENERIC protocol (16)
[   34.383666] tisp_netlink_init: NETLINK_GENERIC failed, trying custom protocol 0x17
[   34.383688] tisp_netlink_init: Netlink socket created successfully
[   34.383694] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   34.383700] tisp_code_create_tuning_node: Device already created, skipping
[   34.383706] *** tisp_init: ISP HARDWARE PIPELINE FULLY INITIALIZED - THIS SHOULD TRIGGER REGISTER ACTIVITY ***
[   34.383712] *** tisp_init: All hardware blocks enabled, registers configured, events ready ***
[   34.383719] *** ispcore_core_ops_init: Second tisp_init completed ***
[   34.383725] *** ispcore_core_ops_init: VIC already streaming (state 4) - preserving state to avoid reinitialization ****** ispcore_core_ops_init: Core device is stateless - only VIC state matters ***
[   34.383734] *** ispcore_core_ops_init: STREAMING ACTIVE - Skipping ISP core interrupt enable to prevent hardware reset ****** ispcore_core_ops_init: ISP core interrupts should be enabled BEFORE streaming starts ***
[   34.383743] ispcore_core_ops_init: Complete, result=0ispcore_slake_module: Initializing channels
[   34.383751] ispcore_slake_module: Channel 0 enabledispcore_slake_module: Channel 1 enabled
[   34.383759] ispcore_slake_module: Channel 2 enabledispcore_slake_module: Channel 3 enabled
[   34.383767] ispcore_slake_module: Channel 4 enabledispcore_slake_module: Channel 5 enabled
[   34.383774] ispcore_slake_module: Calling VIC control function (0x4000001, 0)ispcore_slake_module: VIC control register written: 0x4000001
[   34.383782] ispcore_slake_module: Set VIC state to INIT (1)ispcore_slake_module: Processing subdevices
[   34.383791] *** DEBUG: isp_dev=85fa0000, isp_dev->subdevs=85fa3274 ***<6>[   34.383801] *** ispcore_slake_module: Calling slake_module for CSI subdev ***
[   34.383808] *** tx_isp_csi_slake_subdev: CSI slake/shutdown - current state=4 ***
[   34.383814] tx_isp_csi_slake_subdev: CSI in streaming state, stopping stream
[   34.383819] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   34.383826] csi_video_s_stream: sd=854a8800, enable=0
[   34.383832] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   34.383840] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   34.383847] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   34.383853] csi_video_s_stream: Stream OFF - CSI state set to 3
[   34.383858] tx_isp_csi_slake_subdev: CSI in state 3, calling core_ops_init(disable)
[   34.383866] csi_core_ops_init: sd=854a8800, csi_dev=854a8800, enable=0
[   34.383873] tx_isp_csi_slake_subdev: CSI state 2->1, disabling clocks
[   34.383880] tx_isp_csi_slake_subdev: Disabled clock 1
[   34.383885] tx_isp_csi_slake_subdev: Disabled clock 0
[   34.383891] *** tx_isp_csi_slake_subdev: CSI slake complete, final state=1 ***
[   34.383896] ispcore_slake_module: CSI slake success
[   34.383901] *** ispcore_slake_module: Calling slake_module for VIC subdev ***
[   34.383908] *** tx_isp_vic_slake_subdev: ENTRY - sd=8521b400 ***
[   34.383915] *** tx_isp_vic_slake_subdev: VIC slake/shutdown - vic_dev=8521b400, current state=1 ***
[   34.383922] *** tx_isp_vic_slake_subdev: VIC slake complete, final state=1 ***
[   34.383927] ispcore_slake_module: VIC slake success
[   34.383932] *** ispcore_slake_module: All subdev slake operations completed using helper functions ***
[   34.383937] ispcore_slake_module: Managing ISP clocks
[   34.383942] ispcore_slake_module: Disabled IPU clockispcore_slake_module: Disabled ISP clock
[   34.383950] ispcore_slake_module: Complete, result=0<6>[   34.383956] *** ispcore_slake_module SUCCESS - ISP core should now be initialized ***
[   34.383962] *** vic_core_s_stream: VIC initialized, final state=1 ***
[   34.383968] *** tx_isp_video_s_stream: subdev[1] s_stream SUCCESS ***
[   34.383975] *** tx_isp_video_s_stream: Calling subdev[2]->ops->video->s_stream(1) ***
[   34.383982] *** vin_s_stream: SAFE implementation - sd=8520fc00, enable=1 ***
[   34.383989] vin_s_stream: VIN state = 3, enable = 1
[   34.383994] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   34.384001] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   34.384008] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   34.384013] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   34.384019] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   34.384025] *** tx_isp_video_s_stream: subdev[2] s_stream SUCCESS ***
[   34.384031] *** tx_isp_video_s_stream: Calling subdev[4]->ops->video->s_stream(1) ***
[   34.384038] gc2053: s_stream called with enable=1
[   34.384046] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   34.384052] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   34.384058] gc2053: About to write streaming registers for interface 1
[   34.384064] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   34.384074] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   34.384398] sensor_write: reg=0xfe val=0x00 SUCCESS
[   34.384406] sensor_write_array: reg[1] 0xfe=0x00 OK
[   34.384414] sensor_write: reg=0x3e val=0x91, client=8555fe00, adapter=i2c0, addr=0x37
[   34.388246] sensor_write: reg=0x3e val=0x91 SUCCESS
[   34.388260] sensor_write_array: reg[2] 0x3e=0x91 OK
[   34.388267] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   34.388275] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   34.388281] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   34.388288] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   34.388294] *** tx_isp_video_s_stream: subdev[4] s_stream SUCCESS ***
[   34.388301] *** tx_isp_video_s_stream: Calling subdev[5]->ops->video->s_stream(1) ***
[   34.388308] gc2053: s_stream called with enable=1
[   34.388315] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   34.388321] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   34.388327] gc2053: About to write streaming registers for interface 1
[   34.388333] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   34.388343] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   34.388658] sensor_write: reg=0xfe val=0x00 SUCCESS
[   34.388666] sensor_write_array: reg[1] 0xfe=0x00 OK
[   34.388674] sensor_write: reg=0x3e val=0x91, client=8555fe00, adapter=i2c0, addr=0x37
[   34.389000] sensor_write: reg=0x3e val=0x91 SUCCESS
[   34.389008] sensor_write_array: reg[2] 0x3e=0x91 OK
[   34.389014] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   34.389150] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   34.389156] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   34.389162] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   34.389168] *** tx_isp_video_s_stream: subdev[5] s_stream SUCCESS ***
[   34.389174] *** VIC POST-SENSOR REASSERT: re-applying routing/mask after sensor stream-on ***
[   34.433570] *** VIC POST-SENSOR REASSERT: No status bits asserted in 20ms window ***
[   34.433616] ISP IOCTL: cmd=0x800456d0 arg=0x7feaed20
[   34.433624] TX_ISP_VIDEO_LINK_SETUP: config=0
[   34.433630] TX_ISP_VIDEO_LINK_SETUP: Link config unchanged (0)
[   34.433637] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   34.433644] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   34.433650] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   34.433657] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   34.433664] VIC activated: state 1 -> 2 (READY)
[   34.433669] *** VIC ACTIVATION: Buffer allocation DEFERRED to prevent Wyze Cam memory exhaustion ***
[   34.433675] *** VIC ACTIVATION: Buffers will be allocated on-demand during QBUF operations ***
[   34.433680] *** VIC ACTIVATION: Free buffer list initialized (empty) - allocation deferred ***
[   34.433686] *** VIC ACTIVATION: Using GOOD-THINGS deferred buffer allocation strategy ***
[   34.433750] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   34.433757] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   34.433764] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[   34.433770] csi_video_s_stream: sd=854a8800, enable=1
[   34.433776] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   34.433785] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   34.433792] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   34.433798] csi_video_s_stream: Stream ON - CSI state set to 4
[   34.433805] *** vic_core_s_stream: BINARY NINJA EXACT - sd=8521b400, enable=1 ***
[   34.433811] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   34.433816] *** vic_core_s_stream: STREAM ON ***
[   34.433822] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   34.433827] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   34.433833] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   34.433840] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   34.433846] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   34.433852] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   34.433858] *** STREAMING: Configuring CPM registers for VIC access ***
[   34.462242] STREAMING: CPM clocks configured for VIC access
[   34.462256] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   34.462262] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   34.462270] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   34.462275] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   34.462281] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   34.462287] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   34.462296] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   34.462302] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   34.462309] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   34.462315] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   34.462320] *** VIC unlock: Commands written, checking VIC status register ***
[   34.462327] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   34.462333] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   34.462338] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   34.462344] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   34.462350] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   34.462356] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   34.462432] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   34.462440] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   34.462447] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   34.462454] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   34.462460] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   34.462468] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   34.462474] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   34.462480] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   34.462485] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   34.462491] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   34.462498] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000001) ***
[   34.462503] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   34.462509] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   34.462516] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   34.462521] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   34.462527] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   34.462534] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   34.462539] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   34.462545] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   34.462551] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   34.462558] *** ISP CORE VERIFY: 0x30=0x8fffffff, 0x10=0x00000133 ***
[   34.462564] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   34.462574] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x07800438, 0x0c=0x00000001, 0x100=0x000002d0, 0x14=0x00000001 ***
[   34.462580] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   34.462586] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   34.462593] *** VIC INTERRUPT: imr_ok=1, imcr_ok=0, config_ok=1, control_ok=0 ***
[   34.462598] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   34.462604] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   34.462610] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   34.462616] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   34.462622] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   34.462628] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   34.462636] ispvic_frame_channel_qbuf: arg1=8521b400, arg2=  (null)
[   34.462642] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   34.462648] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   34.462654] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   34.462660] ispvic_frame_channel_s_stream: arg1=8521b400, arg2=1
[   34.462666] ispvic_frame_channel_s_stream: s0 (vic_dev) = 8521b400
[   34.462673] ispvic_frame_channel_s_stream[2441]: streamon
[   34.462680] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   34.462686] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   34.462691] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   34.462697] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   34.462702] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   34.462709] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   34.462715] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   34.462722] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   34.462728] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   34.462734] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   34.462739] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   34.462745] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   34.462752] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   34.462759] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   34.462766] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   34.462774] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   34.462782] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   34.462789] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   34.462795] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   34.462801] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   34.462806] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   34.462813] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   34.462820] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   34.462825] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   34.462830] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   34.462837] ispvic_frame_channel_qbuf: arg1=8521b400, arg2=  (null)
[   34.462842] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   34.462855] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x07800438 [0x300]=0x80040020 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   34.462864] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x000002d0 [0x14]=0x00000001 (PRIMARY 0x14=stride) ***
[   34.462927] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   34.462939] *** VIC BUFS (PRIMARY): [0x318]=0x06300000 [0x31c]=0x066f4800 [0x320]=0x06ae9000 [0x324]=0x06edd800 [0x328]=0x072d2000 ***
[   34.462946] *** VIC CTRL (PRIMARY): [0x300]=0x80040020 ***
[   34.462954] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   34.462960] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   34.462966] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   34.462972] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   34.462979] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   34.463988] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   34.464058] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   34.464066] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   34.464174] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   34.464282] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   34.464289] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   34.464294] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   34.464300] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   34.464306] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   34.464312] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   34.464320] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   34.464325] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   34.464330] *** tx_vic_enable_irq: completed successfully ***
[   34.867739] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   34.867754] *** vic_core_s_stream: VIC state 2 - letting tx_isp_video_s_stream handle state 2 → 3 transition ***
[   34.867761] *** vic_core_s_stream: VIC initialized, final state=2 ***
[   34.867770] *** vin_s_stream: SAFE implementation - sd=8520fc00, enable=1 ***
[   34.867777] vin_s_stream: VIN state = 4, enable = 1
[   34.867783] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   34.867792] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85fbb000 (name=gc2053) ***
[   34.867799] *** tx_isp_get_sensor: Found real sensor: 85fbb000 ***
[   34.867805] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   34.867810] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   34.867818] gc2053: s_stream called with enable=1
[   34.867825] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   34.867831] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   34.867837] gc2053: About to write streaming registers for interface 1
[   34.867843] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   34.867853] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   34.878325] sensor_write: reg=0xfe val=0x00 SUCCESS
[   34.878338] sensor_write_array: reg[1] 0xfe=0x00 OK
[   34.878349] sensor_write: reg=0x3e val=0x91, client=8555fe00, adapter=i2c0, addr=0x37
[   34.878664] sensor_write: reg=0x3e val=0x91 SUCCESS
[   34.878671] sensor_write_array: reg[2] 0x3e=0x91 OK
[   34.878677] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   34.878684] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   34.878690] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   34.878696] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   34.878703] gc2053: s_stream called with enable=1
[   34.878710] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   34.878716] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   34.878722] gc2053: About to write streaming registers for interface 1
[   34.878728] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   34.878737] sensor_write: reg=0xfe val=0x00, client=8555fe00, adapter=i2c0, addr=0x37
[   34.879057] sensor_write: reg=0xfe val=0x00 SUCCESS
[   34.879063] sensor_write_array: reg[1] 0xfe=0x00 OK
[   34.879072] sensor_write: reg=0x3e val=0x91, client=8555fe00, adapter=i2c0, addr=0x37
[   34.879383] sensor_write: reg=0x3e val=0x91 SUCCESS
[   34.879391] sensor_write_array: reg[2] 0x3e=0x91 OK
[   34.879397] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   34.879403] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   34.879409] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   34.879415] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
root@ing-wyze-cam3-a000 ~# [INFO:WS.cpp]: Server started on port 8089
set jpeg streamMngCtx suceess
[INFO:RTSP.cpp]: stream 0 available at: rtsp://192.168.50.211/ch0
[INFO:RTSP.cpp]: stream 1 available at: rtsp://192.168.50.211/ch1
root@ing-wyze-cam3-a000 ~# ^Cesg 

root@ing-wyze-cam3-a000 ~# cat /opt/trace.txt 
ISP Register Monitor v1.3 initializing
ISP Monitor: initialized region isp-w01 at phys 0x0x10023000 size 0x1000
ISP Monitor: initialized region isp-m0 at phys 0x0x13300000 size 0x100000
ISP Monitor: initialized region isp-w02 at phys 0x0x133e0000 size 0x10000
ISP Monitor: initialized region isp-csi at phys 0x0x10022000 size 0x1000
ISP isp-w02: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xf00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x60: 0x0 -> 0x800800 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x64: 0x0 -> 0x9d09d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x70: 0x0 -> 0x6002 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x74: 0x0 -> 0x7003 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x54560031 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x8: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x80700008 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x28: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xdc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x2c: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x90: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x98: 0x0 -> 0x30000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xa8: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xac: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xec: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x40000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xc (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xfc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x100: 0x0 -> 0x2d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x0 -> 0x2c000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x7800000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a4: 0x0 -> 0x100010 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0xff808000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x80007001 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x114: 0x0 -> 0x777111 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9864: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a8: 0x0 -> 0x4440 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1b0: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x987c: 0x0 -> 0xc0000000 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9880: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9884: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9890: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x989c: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x98a8: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a00: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a04: 0x0 -> 0x3000300 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a2c: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a34: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a70: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a7c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a80: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a88: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a98: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0x0 -> 0xf001f001 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb00c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb010: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb014: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb018: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb01c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb020: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb024: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb028: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb02c: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb030: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb034: 0x0 -> 0xffff0100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb038: 0x0 -> 0x1ff00 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb04c: 0x0 -> 0x103 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb050: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb078: 0x0 -> 0x10000000 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb07c: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb080: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb084: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb088: 0x0 -> 0x1fdeff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb08c: 0x0 -> 0x1fff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x10: 0x0 -> 0x133 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2b (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xa (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x1c: 0x0 -> 0x8 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x30: 0x0 -> 0x8fffffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0xf001f001 -> 0x7 (delta: 310.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x40404040 -> 0x0 (delta: 310.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x2 -> 0x1 (delta: 460.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x2 -> 0x1 (delta: 460.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x8c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x2c000 -> 0x1f40000 (delta: 460.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x7800000 -> 0x780002b (delta: 460.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a0: 0x0 -> 0x1 (delta: 0.000 ms)

root@ing-wyze-cam3-a000 ~# cat /proc/interrupts 
           CPU0       
  9:          0   jz-intc  i2s_irq
 11:      33533   jz-intc  jz-timerost
 14:        852   jz-intc  ipu
 15:      75714   jz-intc  jz-sfc
 18:          0   jz-intc  pdma
 23:          0   jz-intc  GPIO C
 24:          1   jz-intc  GPIO B
 25:          0   jz-intc  GPIO A
 29:          1   jz-intc  dwc2
 37:          0   jz-intc  isp-m0
 38:          0   jz-intc  isp-w02
 44:       9214   jz-intc  jzmmc_v1.2.1
 45:          0   jz-intc  jzmmc_v1.2.0
 58:        387   jz-intc  uart1
 68:        161   jz-intc  jz-i2c.0
 70:        134   jz-intc  avpu.0
126:          0    GPIO B  GPIO Button
134:          1    GPIO B  mmc-insert-detect
ERR:          0
