[   11.015244] RTW: set pairwise key camid:0, addr:e8:9c:25:02:11:0c, kid:0, type:AES
[   11.015541] RTW: set group key camid:1, addr:e8:9c:25:02:11:0c, kid:1, type:AES
[   13.832308] codec_codec_ctl: set repaly channel...
[   13.832347] cgu_set_rate, parent = 1392000000, rate = 4096000, n = 10875, reg val = 0x22002a7b
[   13.832354] codec_codec_ctl: set sample rate...
[   13.832438] codec_codec_ctl: set device...
[   14.069189] codec_set_device: set device: speaker...
[   24.832196] *** tx_isp_init: EXACT Binary Ninja MCP reference implementation ***
[   24.832541] *** PROBE: tx_isp_platform_probe CALLED for device tx-isp ***
[   24.832560] *** PROBE: ISP device allocated successfully: 84724000 ***
[   24.832577] *** PROBE: ISP core registers mapped at 0x13300000 for system_reg_write ***
[   24.832583] *** PROBE: ISP device mutex and spinlock initialized ***
[   24.832590] *** PROBE: Event callback structure initialized at 0x84638680 (offset 0xc from isp_dev) ***
[   24.832600] parse_rmem_bootarg: Found rmem=29M@0x06300000 (size=0x01d00000)
[   24.832607] *** PROBE: Initialized rmem_addr=0x06300000, size=0x01d00000 ***
[   24.832613] *** PROBE: Platform data: c06b7620 ***
[   24.832618] *** PROBE: Platform data validation passed ***
[   24.832624] *** REFERENCE DRIVER: Individual subdevices will initialize their own memory regions ***
[   24.832630] *** PLATFORM DEVICES ALREADY REGISTERED IN INIT - SKIPPING DUPLICATE REGISTRATION ***
[   24.832635] *** tx_isp_module_init: EXACT Binary Ninja reference implementation ***
[   24.832640] *** tx_isp_module_init: Registering subdev platform drivers FIRST ***
[   24.832646] *** TX ISP SUBDEV PLATFORM DRIVERS REGISTRATION ***
[   24.850550] All ISP subdev platform drivers registered successfully
[   24.853250] *** tx_isp_create_graph_and_nodes: EXACT Binary Ninja reference implementation ***
[   24.853264] *** Registering platform device 0 from platform data ***
[   24.855784] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[   24.855799] *** tx_isp_subdev_init: pdev=c06b7318, sd=85ffc000, ops=c06b7920 ***
[   24.855805] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.855812] *** tx_isp_subdev_init: ops=c06b7920, ops->core=c06b7954 ***
[   24.855818] *** tx_isp_subdev_init: ops->core->init=c066d0e8 ***
[   24.855825] *** tx_isp_subdev_init: Set sd->dev=c06b7328, sd->pdev=c06b7318 ***
[   24.855831] *** tx_isp_subdev_init: CSI subdev registered at slot 0 ***
[   24.855837] tx_isp_module_init: Module initialized for isp-w01
[   24.855842] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.855849] *** isp-w01: Skipping IRQ request - device has no IRQ resource ***
[   24.855878] tx_isp_subdev_init: platform_get_resource returned c06b7408 for device isp-w01
[   24.855886] tx_isp_subdev_init: Memory resource found: start=0x10022000, end=0x10022fff, size=0x00001000
[   24.855896] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   24.855902] *** tx_isp_subdev_init: Clock count stored: 1 ***
[   24.855910] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b7318, sd=85ffc000, ourISPdev=84724000 ***
[   24.855917] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=84724000 ***
[   24.855922] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[   24.855928] *** DEBUG: About to check device name matches ***
[   24.855934] *** CSI BASIC REGISTERS SET: b0022000 (from tx_isp_subdev_init) ***
[   24.855940] *** LINKED CSI device: 85ffc000, regs: b0022000 ***
[   24.855947] *** CSI PROBE: Set dev_priv to csi_dev 85ffc000 AFTER subdev_init ***
[   24.855953] *** CSI PROBE: Set host_priv to csi_dev 85ffc000 AFTER subdev_init ***
[   24.855959] *** CSI PROBE: Using register mapping from tx_isp_subdev_init: b0022000 ***
[   24.855966] *** CSI PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   24.855985] *** Platform device 0 (isp-w01) registered successfully ***
[   24.855992] *** Registering platform device 1 from platform data ***
[   24.860702] *** VIC PROBE: IRQ numbers initialized to 38 ***
[   24.860717] *** VIC PROBE: Primary VIC registers mapped at 0x133e0000 -> b33e0000 ***
[   24.860724] *** VIC PROBE: VIC control registers mapped at 0x10023000 -> b0023000 ***
[   24.860730] *** VIC PROBE: Hardware IRQ function pointers set using SAFE struct members (tx_isp_enable/disable_irq) ***
[   24.860736] *** VIC PROBE: Secondary VIC register test - 0x1e0 = 0x00000000 (mapping verified) ***
[   24.860742] *** VIC PROBE: VIC interrupt registers will be configured during tx_isp_vic_start ***
[   24.860748] *** BINARY NINJA MCP: VIC buffer management ENABLED - following reference driver ***
[   24.860754] *** VIC will operate in FULL mode with complete buffer operations ***
[   24.860759] *** BINARY NINJA MCP: VIC full initialization complete - buffer management ENABLED ***
[   24.860766] *** VIC PROBE: Initialized default dimensions 1920x1080 and critical fields ***
[   24.860772] *** VIC PROBE: Event callback structure stored in VIC device field ***
[   24.860778] *** VIC PROBE: Stored vic_dev pointer 85ffc400 in subdev dev_priv ***
[   24.860784] *** VIC PROBE: Set host_priv to vic_dev 85ffc400 for Binary Ninja compatibility ***
[   24.860790] *** VIC PROBE: Skipping tx_isp_vic_hw_init - working branch configures interrupts during VIC operations ***
[   24.860797] *** tx_isp_subdev_init: CALLED for device 'isp-w02' ***
[   24.860804] *** tx_isp_subdev_init: pdev=c06b7428, sd=85ffc400, ops=c06b78a0 ***
[   24.860810] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.860818] *** tx_isp_subdev_init: ops=c06b78a0, ops->core=c06b78bc ***
[   24.860824] *** tx_isp_subdev_init: ops->core->init=c0682bac ***
[   24.860830] *** tx_isp_subdev_init: Set sd->dev=c06b7438, sd->pdev=c06b7428 ***
[   24.860836] *** tx_isp_subdev_init: VIC device linked and registered at slot 1 ***
[   24.860843] tx_isp_module_init: Module initialized for isp-w02
[   24.860848] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.860856] *** tx_isp_request_irq: platform_get_irq returned 38 for device isp-w02 ***
[   24.860863] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 38 (device: isp-w02) ***
[   24.860873] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c0675780, thread=c0668584, flags=0x80, name=isp-w02, dev_id=84724000) ***
[   24.860881] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c0675780, thread=c0668584 ***
[   24.863144] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   24.863156] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[   24.863162] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[   24.863171] tx_isp_subdev_init: platform_get_resource returned c06b7510 for device isp-w02
[   24.863179] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[   24.863188] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   24.863194] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   24.863202] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b7428, sd=85ffc400, ourISPdev=84724000 ***
[   24.863209] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=84724000 ***
[   24.863214] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   24.863220] *** DEBUG: About to check device name matches ***
[   24.863225] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   24.863231] *** DEBUG: Retrieved vic_dev from subdev data: 85ffc400 ***
[   24.863237] *** DEBUG: About to set ourISPdev->vic_dev = 85ffc400 ***
[   24.863243] *** DEBUG: ourISPdev before linking: 84724000 ***
[   24.863249] *** DEBUG: ourISPdev->vic_dev set to: 85ffc400 ***
[   24.863255] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   24.863260] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   24.863266] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   24.863274] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   24.863279] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   24.863284] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   24.863290] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   24.863312] *** Platform device 1 (isp-w02) registered successfully ***
[   24.863319] *** Registering platform device 2 from platform data ***
[   24.870910] *** tx_isp_subdev_init: CALLED for device 'isp-w00' ***
[   24.870926] *** tx_isp_subdev_init: pdev=c06b7240, sd=846fb000, ops=c06b8784 ***
[   24.870932] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.870939] *** tx_isp_subdev_init: ops=c06b8784, ops->core=c06b87a4 ***
[   24.870944] *** tx_isp_subdev_init: ops->core->init=c068f170 ***
[   24.870951] *** tx_isp_subdev_init: Set sd->dev=c06b7250, sd->pdev=c06b7240 ***
[   24.870958] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b8784 ***
[   24.870964] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06b7920 ***
[   24.870970] tx_isp_module_init: Module initialized for isp-w00
[   24.870976] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.870984] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b7240, sd=846fb000, ourISPdev=84724000 ***
[   24.870992] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w00' to ourISPdev=84724000 ***
[   24.870998] *** DEBUG: Device name comparison - checking 'isp-w00' ***
[   24.871002] *** DEBUG: About to check device name matches ***
[   24.871010] *** DEBUG: Unknown device name 'isp-w00' - no specific auto-link handling ***
[   24.871017] *** VIN PROBE: Set dev_priv to vin_dev 846fb000 AFTER subdev_init ***
[   24.871023] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   24.871042] *** Platform device 2 (isp-w00) registered successfully ***
[   24.871049] *** Registering platform device 3 from platform data ***
[   24.873536] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   24.873552] *** tx_isp_subdev_init: pdev=c06b7100, sd=846fb400, ops=c06b79d4 ***
[   24.873558] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.873565] *** tx_isp_subdev_init: ops=c06b79d4, ops->core=c06be85c ***
[   24.873570] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   24.873577] *** tx_isp_subdev_init: Set sd->dev=c06b7110, sd->pdev=c06b7100 ***
[   24.873584] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b79d4 ***
[   24.873590] *** tx_isp_subdev_init: ops->sensor=c06be850, csi_subdev_ops=c06b7920 ***
[   24.873596] tx_isp_module_init: Module initialized for isp-fs
[   24.873602] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.873608] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   24.873615] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   24.873621] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   24.873628] *** FS PROBE: Set dev_priv to fs_dev 846fb400 AFTER subdev_init ***
[   24.873634] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   24.873654] *** Platform device 3 (isp-fs) registered successfully ***
[   24.873660] *** Registering platform device 4 from platform data ***
[   24.876176] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   24.876190] *** tx_isp_create_core_device: Creating ISP core device ***
[   24.876199] *** tx_isp_create_core_device: Core device created successfully: 85ffc800 ***
[   24.876205] *** CORE PROBE: Set dev_priv to core_dev 85ffc800 ***
[   24.876211] *** CORE PROBE: Set host_priv to core_dev 85ffc800 - PREVENTS BadVA CRASH ***
[   24.876218] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   24.876226] *** tx_isp_subdev_init: pdev=c06b6fd0, sd=85ffc800, ops=c06b76d8 ***
[   24.876232] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.876238] *** tx_isp_subdev_init: ops=c06b76d8, ops->core=c06b7704 ***
[   24.876244] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   24.876251] *** tx_isp_subdev_init: Set sd->dev=c06b6fe0, sd->pdev=c06b6fd0 ***
[   24.876258] *** tx_isp_subdev_init: Core ISP subdev registered at slot 2 ***
[   24.876264] tx_isp_module_init: Module initialized for isp-m0
[   24.876270] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.876278] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   24.876284] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   24.876294] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c0675780, thread=c0668584, flags=0x80, name=isp-m0, dev_id=84724000) ***
[   24.876302] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c0675780, thread=c0668584 ***
[   24.878574] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   24.878586] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   24.878593] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   24.878602] tx_isp_subdev_init: platform_get_resource returned c06b70c8 for device isp-m0
[   24.878609] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   24.878619] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   24.878625] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   24.878633] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b6fd0, sd=85ffc800, ourISPdev=84724000 ***
[   24.878640] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=84724000 ***
[   24.878646] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   24.878651] *** DEBUG: About to check device name matches ***
[   24.878657] *** DEBUG: CORE device name matched! Setting up Core device ***
[   24.878664] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   24.878671] *** tx_isp_link_core_device: Linking core device 85ffc800 to ISP device 84724000 ***
[   24.878677] *** tx_isp_link_core_device: Core device linked successfully ***
[   24.878684] *** Core subdev already registered at slot 2: 85ffc800 ***
[   24.878690] *** LINKED CORE device: 85ffc800 ***
[   24.878694] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   24.878700] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   24.878706] *** tx_isp_core_device_init: Initializing core device: 85ffc800 ***
[   24.878718] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   24.878723] *** tx_isp_core_device_init: Core device initialized successfully ***
[   24.878728] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   24.878736] *** tx_isp_link_core_device: Linking core device 85ffc800 to ISP device 84724000 ***
[   24.878742] *** tx_isp_link_core_device: Core device linked successfully ***
[   24.878748] *** Core subdev already registered at slot 2: 85ffc800 ***
[   24.878762] *** tx_isp_core_probe: Assigned frame_channels=85ffcc00 to core_dev ***
[   24.878767] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   24.878772] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   24.878778] *** tx_isp_core_probe: Calling sensor_early_init ***
[   24.878784] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   24.878789] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   24.878794] *** tx_isp_core_probe: Core device setup complete ***
[   24.878800] ***   - Core device: 85ffc800 ***
[   24.878805] ***   - Channel count: 6 ***
[   24.878811] ***   - Linked to ISP device: 84724000 ***
[   24.878816] *** tx_isp_core_probe: Initializing core tuning system ***
[   24.878822] isp_core_tuning_init: Initializing tuning data structure
[   24.878834] isp_core_tuning_init: Tuning data structure initialized at 84d56000
[   24.878840] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   24.878845] *** SAFE: mode_flag properly initialized using struct member access ***
[   24.878850] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   24.878856] *** tx_isp_core_probe: Set platform driver data ***
[   24.878861] *** tx_isp_core_probe: Set global core device reference ***
[   24.878866] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   24.878872] ***   - Core device: 85ffc800 ***
[   24.878877] ***   - Tuning device: 84d56000 ***
[   24.878882] *** tx_isp_core_probe: Creating frame channel devices ***
[   24.878888] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   24.879242] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   24.892034] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   24.894559] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   24.897126] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   24.897136] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   24.897142] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   24.897148] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   24.897153] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   24.897162] tisp_code_create_tuning_node: Allocated dynamic major 251
[   24.902236] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   24.902247] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   24.902253] *** tx_isp_core_probe: Core probe completed successfully ***
[   24.902274] *** Platform device 4 (isp-m0) registered successfully ***
[   24.902280] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   24.902302] *** Created /proc/jz/isp directory ***
[   24.902310] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   24.902320] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   24.902326] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   24.902333] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c0684bfc ***
[   24.902340] *** PROC ENTRY FIX: Using ISP device 84724000 instead of VIC device 85ffc400 for isp-w02 ***
[   24.902349] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   24.902356] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   24.902364] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   24.902373] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   24.902382] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   24.902388] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   24.902393] *** Misc device registration handled via main tx-isp device ***
[   24.902398] *** Misc device registration handled via main tx-isp device ***
[   24.902404] *** Misc device registration handled via main tx-isp device ***
[   24.902409] *** Misc device registration handled via main tx-isp device ***
[   24.902414] *** Misc device registration handled via main tx-isp device ***
[   24.902420] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   24.902428] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   24.902436] *** Frame channel 1 initialized: 640x360, state=2 ***
[   24.902441] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   24.902448] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 85ffc400 ***
[   24.902454] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   24.902458] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   24.902466] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   24.902472] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   24.902478] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   24.902483] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   24.902489] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   24.902494] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   24.902499] *** PROBE: Binary Ninja reference implementation complete ***
[   24.904973] *** tx_isp_init: Platform device and driver registered successfully ***
[   27.908132] === gc2053 SENSOR MODULE INIT ===
[   27.910721] gc2053 I2C driver registered, waiting for device creation by ISP
[   30.051413] ISP opened successfully
[   30.051760] ISP IOCTL: cmd=0x805056c1 arg=0x77df6d60
[   30.051774] subdev_sensor_ops_ioctl: cmd=0x2000000
[   30.051780] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[   30.051786] *** Creating I2C sensor device on adapter 0 ***
[   30.051795] *** Creating I2C device: gc2053 at 0x37 ***
[   30.051800] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[   30.051808] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[   30.051814] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[   30.054601] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[   30.061403] === GC2053 SENSOR PROBE START ===
[   30.061419] sensor_probe: client=848f4d00, addr=0x37, adapter=84074c10 (i2c0)
[   30.061425] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[   30.061431] Requesting reset GPIO 18
[   30.061438] GPIO reset sequence: HIGH -> LOW -> HIGH
root@ing-wyze-cam3-a000 ~# dmesg 
[   24.860790] *** VIC PROBE: Skipping tx_isp_vic_hw_init - working branch configures interrupts during VIC operations ***
[   24.860797] *** tx_isp_subdev_init: CALLED for device 'isp-w02' ***
[   24.860804] *** tx_isp_subdev_init: pdev=c06b7428, sd=85ffc400, ops=c06b78a0 ***
[   24.860810] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.860818] *** tx_isp_subdev_init: ops=c06b78a0, ops->core=c06b78bc ***
[   24.860824] *** tx_isp_subdev_init: ops->core->init=c0682bac ***
[   24.860830] *** tx_isp_subdev_init: Set sd->dev=c06b7438, sd->pdev=c06b7428 ***
[   24.860836] *** tx_isp_subdev_init: VIC device linked and registered at slot 1 ***
[   24.860843] tx_isp_module_init: Module initialized for isp-w02
[   24.860848] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.860856] *** tx_isp_request_irq: platform_get_irq returned 38 for device isp-w02 ***
[   24.860863] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 38 (device: isp-w02) ***
[   24.860873] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c0675780, thread=c0668584, flags=0x80, name=isp-w02, dev_id=84724000) ***
[   24.860881] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c0675780, thread=c0668584 ***
[   24.863144] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   24.863156] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[   24.863162] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[   24.863171] tx_isp_subdev_init: platform_get_resource returned c06b7510 for device isp-w02
[   24.863179] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[   24.863188] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   24.863194] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   24.863202] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b7428, sd=85ffc400, ourISPdev=84724000 ***
[   24.863209] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=84724000 ***
[   24.863214] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   24.863220] *** DEBUG: About to check device name matches ***
[   24.863225] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   24.863231] *** DEBUG: Retrieved vic_dev from subdev data: 85ffc400 ***
[   24.863237] *** DEBUG: About to set ourISPdev->vic_dev = 85ffc400 ***
[   24.863243] *** DEBUG: ourISPdev before linking: 84724000 ***
[   24.863249] *** DEBUG: ourISPdev->vic_dev set to: 85ffc400 ***
[   24.863255] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   24.863260] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   24.863266] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   24.863274] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   24.863279] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   24.863284] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   24.863290] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   24.863312] *** Platform device 1 (isp-w02) registered successfully ***
[   24.863319] *** Registering platform device 2 from platform data ***
[   24.870910] *** tx_isp_subdev_init: CALLED for device 'isp-w00' ***
[   24.870926] *** tx_isp_subdev_init: pdev=c06b7240, sd=846fb000, ops=c06b8784 ***
[   24.870932] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.870939] *** tx_isp_subdev_init: ops=c06b8784, ops->core=c06b87a4 ***
[   24.870944] *** tx_isp_subdev_init: ops->core->init=c068f170 ***
[   24.870951] *** tx_isp_subdev_init: Set sd->dev=c06b7250, sd->pdev=c06b7240 ***
[   24.870958] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b8784 ***
[   24.870964] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06b7920 ***
[   24.870970] tx_isp_module_init: Module initialized for isp-w00
[   24.870976] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.870984] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b7240, sd=846fb000, ourISPdev=84724000 ***
[   24.870992] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w00' to ourISPdev=84724000 ***
[   24.870998] *** DEBUG: Device name comparison - checking 'isp-w00' ***
[   24.871002] *** DEBUG: About to check device name matches ***
[   24.871010] *** DEBUG: Unknown device name 'isp-w00' - no specific auto-link handling ***
[   24.871017] *** VIN PROBE: Set dev_priv to vin_dev 846fb000 AFTER subdev_init ***
[   24.871023] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   24.871042] *** Platform device 2 (isp-w00) registered successfully ***
[   24.871049] *** Registering platform device 3 from platform data ***
[   24.873536] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   24.873552] *** tx_isp_subdev_init: pdev=c06b7100, sd=846fb400, ops=c06b79d4 ***
[   24.873558] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.873565] *** tx_isp_subdev_init: ops=c06b79d4, ops->core=c06be85c ***
[   24.873570] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   24.873577] *** tx_isp_subdev_init: Set sd->dev=c06b7110, sd->pdev=c06b7100 ***
[   24.873584] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b79d4 ***
[   24.873590] *** tx_isp_subdev_init: ops->sensor=c06be850, csi_subdev_ops=c06b7920 ***
[   24.873596] tx_isp_module_init: Module initialized for isp-fs
[   24.873602] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.873608] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   24.873615] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   24.873621] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   24.873628] *** FS PROBE: Set dev_priv to fs_dev 846fb400 AFTER subdev_init ***
[   24.873634] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   24.873654] *** Platform device 3 (isp-fs) registered successfully ***
[   24.873660] *** Registering platform device 4 from platform data ***
[   24.876176] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   24.876190] *** tx_isp_create_core_device: Creating ISP core device ***
[   24.876199] *** tx_isp_create_core_device: Core device created successfully: 85ffc800 ***
[   24.876205] *** CORE PROBE: Set dev_priv to core_dev 85ffc800 ***
[   24.876211] *** CORE PROBE: Set host_priv to core_dev 85ffc800 - PREVENTS BadVA CRASH ***
[   24.876218] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   24.876226] *** tx_isp_subdev_init: pdev=c06b6fd0, sd=85ffc800, ops=c06b76d8 ***
[   24.876232] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   24.876238] *** tx_isp_subdev_init: ops=c06b76d8, ops->core=c06b7704 ***
[   24.876244] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   24.876251] *** tx_isp_subdev_init: Set sd->dev=c06b6fe0, sd->pdev=c06b6fd0 ***
[   24.876258] *** tx_isp_subdev_init: Core ISP subdev registered at slot 2 ***
[   24.876264] tx_isp_module_init: Module initialized for isp-m0
[   24.876270] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   24.876278] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   24.876284] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   24.876294] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c0675780, thread=c0668584, flags=0x80, name=isp-m0, dev_id=84724000) ***
[   24.876302] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c0675780, thread=c0668584 ***
[   24.878574] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   24.878586] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   24.878593] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   24.878602] tx_isp_subdev_init: platform_get_resource returned c06b70c8 for device isp-m0
[   24.878609] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   24.878619] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   24.878625] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   24.878633] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b6fd0, sd=85ffc800, ourISPdev=84724000 ***
[   24.878640] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=84724000 ***
[   24.878646] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   24.878651] *** DEBUG: About to check device name matches ***
[   24.878657] *** DEBUG: CORE device name matched! Setting up Core device ***
[   24.878664] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   24.878671] *** tx_isp_link_core_device: Linking core device 85ffc800 to ISP device 84724000 ***
[   24.878677] *** tx_isp_link_core_device: Core device linked successfully ***
[   24.878684] *** Core subdev already registered at slot 2: 85ffc800 ***
[   24.878690] *** LINKED CORE device: 85ffc800 ***
[   24.878694] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   24.878700] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   24.878706] *** tx_isp_core_device_init: Initializing core device: 85ffc800 ***
[   24.878718] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   24.878723] *** tx_isp_core_device_init: Core device initialized successfully ***
[   24.878728] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   24.878736] *** tx_isp_link_core_device: Linking core device 85ffc800 to ISP device 84724000 ***
[   24.878742] *** tx_isp_link_core_device: Core device linked successfully ***
[   24.878748] *** Core subdev already registered at slot 2: 85ffc800 ***
[   24.878762] *** tx_isp_core_probe: Assigned frame_channels=85ffcc00 to core_dev ***
[   24.878767] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   24.878772] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   24.878778] *** tx_isp_core_probe: Calling sensor_early_init ***
[   24.878784] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   24.878789] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   24.878794] *** tx_isp_core_probe: Core device setup complete ***
[   24.878800] ***   - Core device: 85ffc800 ***
[   24.878805] ***   - Channel count: 6 ***
[   24.878811] ***   - Linked to ISP device: 84724000 ***
[   24.878816] *** tx_isp_core_probe: Initializing core tuning system ***
[   24.878822] isp_core_tuning_init: Initializing tuning data structure
[   24.878834] isp_core_tuning_init: Tuning data structure initialized at 84d56000
[   24.878840] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   24.878845] *** SAFE: mode_flag properly initialized using struct member access ***
[   24.878850] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   24.878856] *** tx_isp_core_probe: Set platform driver data ***
[   24.878861] *** tx_isp_core_probe: Set global core device reference ***
[   24.878866] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   24.878872] ***   - Core device: 85ffc800 ***
[   24.878877] ***   - Tuning device: 84d56000 ***
[   24.878882] *** tx_isp_core_probe: Creating frame channel devices ***
[   24.878888] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   24.879242] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   24.892034] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   24.894559] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   24.897126] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   24.897136] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   24.897142] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   24.897148] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   24.897153] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   24.897162] tisp_code_create_tuning_node: Allocated dynamic major 251
[   24.902236] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   24.902247] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   24.902253] *** tx_isp_core_probe: Core probe completed successfully ***
[   24.902274] *** Platform device 4 (isp-m0) registered successfully ***
[   24.902280] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   24.902302] *** Created /proc/jz/isp directory ***
[   24.902310] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   24.902320] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   24.902326] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   24.902333] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c0684bfc ***
[   24.902340] *** PROC ENTRY FIX: Using ISP device 84724000 instead of VIC device 85ffc400 for isp-w02 ***
[   24.902349] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   24.902356] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   24.902364] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   24.902373] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   24.902382] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   24.902388] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   24.902393] *** Misc device registration handled via main tx-isp device ***
[   24.902398] *** Misc device registration handled via main tx-isp device ***
[   24.902404] *** Misc device registration handled via main tx-isp device ***
[   24.902409] *** Misc device registration handled via main tx-isp device ***
[   24.902414] *** Misc device registration handled via main tx-isp device ***
[   24.902420] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   24.902428] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   24.902436] *** Frame channel 1 initialized: 640x360, state=2 ***
[   24.902441] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   24.902448] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 85ffc400 ***
[   24.902454] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   24.902458] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   24.902466] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   24.902472] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   24.902478] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   24.902483] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   24.902489] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   24.902494] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   24.902499] *** PROBE: Binary Ninja reference implementation complete ***
[   24.904973] *** tx_isp_init: Platform device and driver registered successfully ***
[   27.908132] === gc2053 SENSOR MODULE INIT ===
[   27.910721] gc2053 I2C driver registered, waiting for device creation by ISP
[   30.051413] ISP opened successfully
[   30.051760] ISP IOCTL: cmd=0x805056c1 arg=0x77df6d60
[   30.051774] subdev_sensor_ops_ioctl: cmd=0x2000000
[   30.051780] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[   30.051786] *** Creating I2C sensor device on adapter 0 ***
[   30.051795] *** Creating I2C device: gc2053 at 0x37 ***
[   30.051800] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[   30.051808] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[   30.051814] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[   30.054601] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[   30.061403] === GC2053 SENSOR PROBE START ===
[   30.061419] sensor_probe: client=848f4d00, addr=0x37, adapter=84074c10 (i2c0)
[   30.061425] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[   30.061431] Requesting reset GPIO 18
[   30.061438] GPIO reset sequence: HIGH -> LOW -> HIGH
[   30.291170] GPIO reset sequence completed successfully
[   30.291183] === GPIO INITIALIZATION COMPLETE ===
[   30.291193] sensor_probe: Initialized sensor info - name=gc2053, i2c_addr=0x37
[   30.291208] sensor_probe: data_interface=1, sensor_max_fps=30
[   30.291214] sensor_probe: MIPI 30fps
[   30.291221] *** tx_isp_subdev_init: CALLED for device 'gc2053' ***
[   30.291229] *** tx_isp_subdev_init: pdev=c06e1168, sd=80550000, ops=c06e1248 ***
[   30.291235] *** tx_isp_subdev_init: ourISPdev=84724000 ***
[   30.291242] *** tx_isp_subdev_init: ops=c06e1248, ops->core=c06e1274 ***
[   30.291248] *** tx_isp_subdev_init: ops->core->init=c06de6bc ***
[   30.291254] *** tx_isp_subdev_init: Set sd->dev=c06e1178, sd->pdev=c06e1168 ***
[   30.291262] *** tx_isp_subdev_init: DETECTED SENSOR SUBDEV - ops=c06e1248, ops->sensor=c06e125c ***
[   30.291268] *** tx_isp_subdev_init: Set up sensor module notify handler ***
[   30.291274] *** tx_isp_subdev_init: SENSOR subdev registered at slot 3, sd=80550000 ***
[   30.291282] *** tx_isp_subdev_init: SENSOR ops=c06e1248, ops->sensor=c06e125c ***
[   30.291287] *** tx_isp_subdev_init: Core state transitions handled by slake_module ***
[   30.291294] tx_isp_module_init: Module initialized for (null)
[   30.291299] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   30.291308] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06e1168, sd=80550000, ourISPdev=84724000 ***
[   30.291314] *** tx_isp_subdev_auto_link: Auto-linking device 'gc2053' to ourISPdev=84724000 ***
[   30.291320] *** DEBUG: Device name comparison - checking 'gc2053' ***
[   30.291326] *** DEBUG: About to check device name matches ***
[   30.291332] *** DETECTED SENSOR DEVICE: 'gc2053' - checking for existing registration ***
[   30.291339] *** SENSOR 'gc2053' registered at subdev index 5 ***
[   30.291346] *** SENSOR subdev: 80550000, ops: c06e1248 ***
[   30.291351] *** SENSOR ops->sensor: c06e125c ***
[   30.291356] *** SENSOR REGISTERED: Caching sensor dimensions from /proc/jz/sensor/ ***
[   30.291362] *** cache_sensor_dimensions_from_proc: Reading sensor dimensions during probe ***
[   30.291439] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   30.291447] *** cache_sensor_dimensions_from_proc: Successfully cached 1920x1080 ***
[   30.291453] sensor_probe: I2C client association complete
[   30.291462]   sd=80550000, client=848f4d00, addr=0x37, adapter=i2c0
[   30.291467] === TESTING I2C COMMUNICATION AFTER GPIO RESET ===
[   30.291476] sensor_read: reg=0xf0, client=848f4d00, adapter=i2c0, addr=0x37
[   30.291896] sensor_read: reg=0xf0 value=0x20 SUCCESS
[   30.291908] I2C test read (0xf0): ret=0, val=0x20 (expected 0x20)
[   30.291914] *** SUCCESS: I2C communication working after GPIO reset! ***
[   30.291924] sensor_read: reg=0xf1, client=848f4d00, adapter=i2c0, addr=0x37
[   30.292336] sensor_read: reg=0xf1 value=0x53 SUCCESS
[   30.292346] I2C test read (0xf1): ret=0, val=0x53 (expected 0x53)
[   30.292352] === I2C COMMUNICATION TEST COMPLETE ===
[   30.292359] Registering gc2053 with ISP framework (sd=80550000, sensor=80550000)
[   30.292365] gc2053 registered with ISP framework successfully
[   30.292387] *** MIPS-SAFE: I2C device created successfully at 0x848f4d00 ***
[   30.292394] *** MIPS-SAFE: Module reference acquired for gc2053 ***
[   30.292400] *** MIPS-SAFE: Sensor subdev data found, device ready ***
[   30.292407] *** I2C DEVICE READY: gc2053 at 0x37 (MIPS-safe) ***
[   30.292414] *** I2C sensor device created successfully: gc2053 at 0x37 ***
[   30.292455] ISP IOCTL: cmd=0xc050561a arg=0x7fcc4748
[   30.292462] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 0
[   30.292468] TX_ISP_SENSOR_ENUM_INPUT: Returning sensor 'gc2053' at index 0
[   30.292476] ISP IOCTL: cmd=0xc050561a arg=0x7fcc4748
[   30.292482] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 1
[   30.292488] TX_ISP_SENSOR_ENUM_INPUT: No sensor at index 1 - returning error to end enumeration
[   30.292496] ISP IOCTL: cmd=0xc0045627 arg=0x7fcc47a0
[   30.292506] ISP IOCTL: cmd=0x800856d5 arg=0x7fcc4798
[   30.292512] TX_ISP_GET_BUF: IOCTL handler called
[   30.292519] TX_ISP_GET_BUF: core_dev=85ffc800, isp_dev=84724000
[   30.292526] TX_ISP_GET_BUF: Using dimensions 1920x1080 from core device
[   30.292532] TX_ISP_GET_BUF: Returning buffer size=4685424, paddr=0x6300000
[   30.375026] ISP IOCTL: cmd=0x800856d4 arg=0x7fcc4798
[   30.375040] TX_ISP_SET_BUF: addr=0x6300000 size=0
[   30.375264] ISP IOCTL: cmd=0x40045626 arg=0x7fcc47b0
[   30.375276] subdev_sensor_ops_ioctl: cmd=0x2000003
[   30.375282] subdev_sensor_ops_ioctl: IOCTL 0x2000003 - Get sensor input
[   30.375288] subdev_sensor_ops_ioctl: Auto-selected first sensor at slot 0 as index 0
[   30.375294] subdev_sensor_ops_ioctl: Returning current sensor index 0
[   30.375304] ISP IOCTL: cmd=0x80045612 arg=0x0
[   30.375310] *** tx_isp_video_s_stream: EXACT Binary Ninja reference implementation - enable=1 ***
[   30.375316] === ISP Subdevice Array Status ===
[   30.375324]   [0]: isp-w01 (sd=85ffc000)
[   30.375331]   [1]: isp-w02 (sd=85ffc400)
[   30.375338]   [2]: isp-m0 (sd=85ffc800)
[   30.375344]   [3]: gc2053 (sd=80550000)
[   30.375349]   [4]: (empty)
[   30.375355]   [5]: gc2053 (sd=80550000)
[   30.375360]   [6]: (empty)
[   30.375366]   [7]: (empty)
[   30.375370]   [8]: (empty)
[   30.375375]   [9]: (empty)
[   30.375380]   [10]: (empty)
[   30.375385]   [11]: (empty)
[   30.375390]   [12]: (empty)
[   30.375395]   [13]: (empty)
[   30.375400]   [14]: (empty)
[   30.375405]   [15]: (empty)
[   30.375410] === End Subdevice Array ===
[   30.375415] *** tx_isp_video_s_stream: STREAM ON - Initializing core first ***
[   30.375420] *** tx_isp_video_s_stream: VIC state is 1, calling activate_module ***
[   30.375426] *** ispcore_activate_module: Fixed for our struct layouts ***
[   30.375432] *** VIC device in state 1, proceeding with activation ***
[   30.375438] *** CLOCK CONFIGURATION SECTION: clk_array=  (null), clk_count=2 ***
[   30.375443] *** SUBDEVICE VALIDATION SECTION ***
[   30.375448] VIC device state set to 2 (activated)
[   30.375453] *** CRITICAL FUNCTION POINTER CALL SECTION ***
[   30.375458] *** CALLING CRITICAL VIC INITIALIZATION FUNCTION ***
[   30.375464] *** VIC control register written with 0x4000000 to ISP+0x9a00 ***
[   30.375468] *** SUBDEVICE INITIALIZATION LOOP ***
[   30.375474] *** SUBDEVICE INITIALIZATION: Traversing backwards to initialize sensors first ***
[   30.375480] Calling subdev 5 initialization (REVERSE ORDER - sensors first)
[   30.375488] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.375496] SENSOR_INIT: Configuring gc2053 (chip_id=0x2053, 1920x1080)
[   30.375502] *** CALLING SENSOR_WRITE_ARRAY WITH c06e1e20 (should be 137 registers) ***
[   30.375512] sensor_write: reg=0xfe val=0x80, client=848f4d00, adapter=i2c0, addr=0x37
[   30.375837] sensor_write: reg=0xfe val=0x80 SUCCESS
[   30.375845] sensor_write_array: reg[1] 0xfe=0x80 OK
[   30.375854] sensor_write: reg=0xfe val=0x80, client=848f4d00, adapter=i2c0, addr=0x37
[   30.376174] sensor_write: reg=0xfe val=0x80 SUCCESS
[   30.376182] sensor_write_array: reg[2] 0xfe=0x80 OK
[   30.376190] sensor_write: reg=0xfe val=0x80, client=848f4d00, adapter=i2c0, addr=0x37
[   30.376502] sensor_write: reg=0xfe val=0x80 SUCCESS
[   30.376508] sensor_write_array: reg[3] 0xfe=0x80 OK
[   30.376517] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.376830] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.376837] sensor_write_array: reg[4] 0xfe=0x00 OK
[   30.376846] sensor_write: reg=0xf2 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.377158] sensor_write: reg=0xf2 val=0x00 SUCCESS
[   30.377166] sensor_write_array: reg[5] 0xf2=0x00 OK
[   30.377174] sensor_write: reg=0xf3 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.377487] sensor_write: reg=0xf3 val=0x00 SUCCESS
[   30.377494] sensor_write_array: reg[6] 0xf3=0x00 OK
[   30.377502] sensor_write: reg=0xf4 val=0x36, client=848f4d00, adapter=i2c0, addr=0x37
[   30.381174] sensor_write: reg=0xf4 val=0x36 SUCCESS
[   30.381187] sensor_write_array: reg[7] 0xf4=0x36 OK
[   30.381198] sensor_write: reg=0xf5 val=0xc0, client=848f4d00, adapter=i2c0, addr=0x37
[   30.381516] sensor_write: reg=0xf5 val=0xc0 SUCCESS
[   30.381523] sensor_write_array: reg[8] 0xf5=0xc0 OK
[   30.381532] sensor_write: reg=0xf6 val=0x44, client=848f4d00, adapter=i2c0, addr=0x37
[   30.381844] sensor_write: reg=0xf6 val=0x44 SUCCESS
[   30.381850] sensor_write_array: reg[9] 0xf6=0x44 OK
[   30.381858] sensor_write: reg=0xf7 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.382176] sensor_write: reg=0xf7 val=0x01 SUCCESS
[   30.382184] sensor_write_array: reg[10] 0xf7=0x01 OK
[   30.382192] sensor_write: reg=0xf8 val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.382506] sensor_write: reg=0xf8 val=0x68 SUCCESS
[   30.382514] sensor_write: reg=0xf9 val=0x40, client=848f4d00, adapter=i2c0, addr=0x37
[   30.382828] sensor_write: reg=0xf9 val=0x40 SUCCESS
[   30.382836] sensor_write: reg=0xfc val=0x8e, client=848f4d00, adapter=i2c0, addr=0x37
[   30.383149] sensor_write: reg=0xfc val=0x8e SUCCESS
[   30.383157] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.383470] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.383478] sensor_write: reg=0x87 val=0x18, client=848f4d00, adapter=i2c0, addr=0x37
[   30.383791] sensor_write: reg=0x87 val=0x18 SUCCESS
[   30.383800] sensor_write: reg=0xee val=0x30, client=848f4d00, adapter=i2c0, addr=0x37
[   30.384112] sensor_write: reg=0xee val=0x30 SUCCESS
[   30.384121] sensor_write: reg=0xd0 val=0xb7, client=848f4d00, adapter=i2c0, addr=0x37
[   30.384924] sensor_write: reg=0xd0 val=0xb7 SUCCESS
[   30.384934] sensor_write: reg=0x03 val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.385247] sensor_write: reg=0x03 val=0x04 SUCCESS
[   30.385256] sensor_write: reg=0x04 val=0x60, client=848f4d00, adapter=i2c0, addr=0x37
[   30.391680] sensor_write: reg=0x04 val=0x60 SUCCESS
[   30.391696] sensor_write: reg=0x05 val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
d[   30.392012] sensor_write: reg=0x05 val=0x04 SUCCESS
[   30.392020] sensor_write: reg=0x06 val=0x4c, client=848f4d00, adapter=i2c0, addr=0x37
[   30.392354] sensor_write: reg=0x06 val=0x4c SUCCESS
[   30.392363] sensor_write: reg=0x07 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.392674] sensor_write: reg=0x07 val=0x00 SUCCESS
[   30.392683] sensor_write: reg=0x08 val=0x11, client=848f4d00, adapter=i2c0, addr=0x37
[   30.392997] sensor_write: reg=0x08 val=0x11 SUCCESS
[   30.393006] sensor_write: reg=0x09 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.393319] sensor_write: reg=0x09 val=0x00 SUCCESS
[   30.393327] sensor_write: reg=0x0a val=0x02, client=848f4d00, adapter=i2c0, addr=0x37
[   30.393640] sensor_write: reg=0x0a val=0x02 SUCCESS
[   30.393648] sensor_write: reg=0x0b val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.393961] sensor_write: reg=0x0b val=0x00 SUCCESS
[   30.393970] sensor_write: reg=0x0c val=0x02, client=848f4d00, adapter=i2c0, addr=0x37
[   30.394282] sensor_write: reg=0x0c val=0x02 SUCCESS
[   30.394290] sensor_write: reg=0x0d val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.394608] sensor_write: reg=0x0d val=0x04 SUCCESS
[   30.394616] sensor_write: reg=0x0e val=0x40, client=848f4d00, adapter=i2c0, addr=0x37
[   30.394930] sensor_write: reg=0x0e val=0x40 SUCCESS
[   30.394938] sensor_write: reg=0x12 val=0xe2, client=848f4d00, adapter=i2c0, addr=0x37
[   30.395837] sensor_write: reg=0x12 val=0xe2 SUCCESS
[   30.395853] sensor_write: reg=0x13 val=0x16, client=848f4d00, adapter=i2c0, addr=0x37
[   30.396169] sensor_write: reg=0x13 val=0x16 SUCCESS
[   30.396178] sensor_write: reg=0x19 val=0x0a, client=848f4d00, adapter=i2c0, addr=0x37
[   30.399687] sensor_write: reg=0x19 val=0x0a SUCCESS
[   30.399702] sensor_write: reg=0x21 val=0x1c, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400021] sensor_write: reg=0x21 val=0x1c SUCCESS
[   30.400030] sensor_write: reg=0x28 val=0x0a, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400346] sensor_write: reg=0x28 val=0x0a SUCCESS
[   30.400355] sensor_write: reg=0x29 val=0x24, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400668] sensor_write: reg=0x29 val=0x24 SUCCESS
[   30.400677] sensor_write: reg=0x2b val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400990] sensor_write: reg=0x2b val=0x04 SUCCESS
[   30.400998] sensor_write: reg=0x32 val=0xf8, client=848f4d00, adapter=i2c0, addr=0x37
[   30.401300] sensor_write: reg=0x32 val=0xf8 SUCCESS
[   30.401310] sensor_write: reg=0x37 val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.401622] sensor_write: reg=0x37 val=0x03 SUCCESS
[   30.401630] sensor_write: reg=0x39 val=0x15, client=848f4d00, adapter=i2c0, addr=0x37
[   30.401942] sensor_write: reg=0x39 val=0x15 SUCCESS
[   30.401950] sensor_write: reg=0x43 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.402254] sensor_write: reg=0x43 val=0x07 SUCCESS
[   30.402267] sensor_write: reg=0x44 val=0x40, client=848f4d00, adapter=i2c0, addr=0x37
[   30.402586] sensor_write: reg=0x44 val=0x40 SUCCESS
[   30.402594] sensor_write: reg=0x46 val=0x0b, client=848f4d00, adapter=i2c0, addr=0x37
[   30.402906] sensor_write: reg=0x46 val=0x0b SUCCESS
[   30.402914] sensor_write: reg=0x4b val=0x20, client=848f4d00, adapter=i2c0, addr=0x37
[   30.405151] sensor_write: reg=0x4b val=0x20 SUCCESS
[   30.405165] sensor_write: reg=0x4e val=0x08, client=848f4d00, adapter=i2c0, addr=0x37
[   30.405482] sensor_write: reg=0x4e val=0x08 SUCCESS
[   30.405491] sensor_write: reg=0x55 val=0x20, client=848f4d00, adapter=i2c0, addr=0x37
[   30.405810] sensor_write: reg=0x55 val=0x20 SUCCESS
[   30.405818] sensor_write: reg=0x66 val=0x05, client=848f4d00, adapter=i2c0, addr=0x37
[   30.406132] sensor_write: reg=0x66 val=0x05 SUCCESS
[   30.406141] sensor_write: reg=0x67 val=0x05, client=848f4d00, adapter=i2c0, addr=0x37
[   30.406454] sensor_write: reg=0x67 val=0x05 SUCCESS
[   30.406462] sensor_write: reg=0x77 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.411202] sensor_write: reg=0x77 val=0x01 SUCCESS
[   30.411218] sensor_write: reg=0x78 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.411536] sensor_write: reg=0x78 val=0x00 SUCCESS
[   30.411544] sensor_write: reg=0x7c val=0x93, client=848f4d00, adapter=i2c0, addr=0x37
[   30.411861] sensor_write: reg=0x7c val=0x93 SUCCESS
[   30.411868] sensor_write_array: reg[50] 0x7c=0x93 OK
[   30.411877] sensor_write: reg=0x8c val=0x12, client=848f4d00, adapter=i2c0, addr=0x37
[   30.412190] sensor_write: reg=0x8c val=0x12 SUCCESS
[   30.412199] sensor_write: reg=0x8d val=0x92, client=848f4d00, adapter=i2c0, addr=0x37
[   30.412512] sensor_write: reg=0x8d val=0x92 SUCCESS
[   30.412520] sensor_write: reg=0x90 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.412833] sensor_write: reg=0x90 val=0x00 SUCCESS
[   30.412842] sensor_write: reg=0x41 val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.413154] sensor_write: reg=0x41 val=0x04 SUCCESS
[   30.413163] sensor_write: reg=0x42 val=0x9d, client=848f4d00, adapter=i2c0, addr=0x37
[   30.413476] sensor_write: reg=0x42 val=0x9d SUCCESS
[   30.413484] sensor_write: reg=0x9d val=0x10, client=848f4d00, adapter=i2c0, addr=0x37
[   30.413797] sensor_write: reg=0x9d val=0x10 SUCCESS
[   30.413806] sensor_write: reg=0xce val=0x7c, client=848f4d00, adapter=i2c0, addr=0x37
[   30.414118] sensor_write: reg=0xce val=0x7c SUCCESS
[   30.414127] sensor_write: reg=0xd2 val=0x41, client=848f4d00, adapter=i2c0, addr=0x37
[   30.414440] sensor_write: reg=0xd2 val=0x41 SUCCESS
[   30.414448] sensor_write: reg=0xd3 val=0xdc, client=848f4d00, adapter=i2c0, addr=0x37
[   30.414761] sensor_write: reg=0xd3 val=0xdc SUCCESS
[   30.414769] sensor_write: reg=0xe6 val=0x50, client=848f4d00, adapter=i2c0, addr=0x37
[   30.415082] sensor_write: reg=0xe6 val=0x50 SUCCESS
[   30.415090] sensor_write: reg=0xb6 val=0xc0, client=848f4d00, adapter=i2c0, addr=0x37
[   30.421205] sensor_write: reg=0xb6 val=0xc0 SUCCESS
[   30.421220] sensor_write: reg=0xb0 val=0x70, client=848f4d00, adapter=i2c0, addr=0x37
[   30.421539] sensor_write: reg=0xb0 val=0x70 SUCCESS
[   30.421548] sensor_write: reg=0xb1 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.421864] sensor_write: reg=0xb1 val=0x01 SUCCESS
[   30.421873] sensor_write: reg=0xb2 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.422185] sensor_write: reg=0xb2 val=0x00 SUCCESS
[   30.422193] sensor_write: reg=0xb3 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.422506] sensor_write: reg=0xb3 val=0x00 SUCCESS
[   30.422515] sensor_write: reg=0xb4 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.422828] sensor_write: reg=0xb4 val=0x00 SUCCESS
[   30.422836] sensor_write: reg=0xb8 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.423149] sensor_write: reg=0xb8 val=0x01 SUCCESS
[   30.423158] sensor_write: reg=0xb9 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.423470] sensor_write: reg=0xb9 val=0x00 SUCCESS
[   30.423479] sensor_write: reg=0x26 val=0x30, client=848f4d00, adapter=i2c0, addr=0x37
[   30.423792] sensor_write: reg=0x26 val=0x30 SUCCESS
[   30.423800] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.424113] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.424121] sensor_write: reg=0x40 val=0x23, client=848f4d00, adapter=i2c0, addr=0x37
[   30.424434] sensor_write: reg=0x40 val=0x23 SUCCESS
[   30.424442] sensor_write: reg=0x55 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.424760] sensor_write: reg=0x55 val=0x07 SUCCESS
[   30.424768] sensor_write: reg=0x60 val=0x40, client=848f4d00, adapter=i2c0, addr=0x37
[   30.425082] sensor_write: reg=0x60 val=0x40 SUCCESS
[   30.425090] sensor_write: reg=0xfe val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.425458] sensor_write: reg=0xfe val=0x04 SUCCESS
[   30.425467] sensor_write: reg=0x14 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.425782] sensor_write: reg=0x14 val=0x78 SUCCESS
[   30.425791] sensor_write: reg=0x15 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.426104] sensor_write: reg=0x15 val=0x78 SUCCESS
[   30.426113] sensor_write: reg=0x16 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.426426] sensor_write: reg=0x16 val=0x78 SUCCESS
[   30.426434] sensor_write: reg=0x17 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.426748] sensor_write: reg=0x17 val=0x78 SUCCESS
[   30.426756] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.427069] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.427077] sensor_write: reg=0x92 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.431200] sensor_write: reg=0x92 val=0x00 SUCCESS
[   30.431215] sensor_write: reg=0x94 val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.431534] sensor_write: reg=0x94 val=0x03 SUCCESS
[   30.431543] sensor_write: reg=0x95 val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.431860] sensor_write: reg=0x95 val=0x04 SUCCESS
[   30.431868] sensor_write: reg=0x96 val=0x38, client=848f4d00, adapter=i2c0, addr=0x37
[   30.432182] sensor_write: reg=0x96 val=0x38 SUCCESS
[   30.432191] sensor_write: reg=0x97 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.432504] sensor_write: reg=0x97 val=0x07 SUCCESS
[   30.432512] sensor_write: reg=0x98 val=0x80, client=848f4d00, adapter=i2c0, addr=0x37
[   30.432826] sensor_write: reg=0x98 val=0x80 SUCCESS
[   30.432834] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.433146] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.433155] sensor_write: reg=0x01 val=0x05, client=848f4d00, adapter=i2c0, addr=0x37
[   30.433468] sensor_write: reg=0x01 val=0x05 SUCCESS
[   30.433476] sensor_write: reg=0x02 val=0x89, client=848f4d00, adapter=i2c0, addr=0x37
[   30.433789] sensor_write: reg=0x02 val=0x89 SUCCESS
[   30.433797] sensor_write: reg=0x04 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.434110] sensor_write: reg=0x04 val=0x01 SUCCESS
[   30.434118] sensor_write: reg=0x07 val=0xa6, client=848f4d00, adapter=i2c0, addr=0x37
[   30.434431] sensor_write: reg=0x07 val=0xa6 SUCCESS
[   30.434439] sensor_write: reg=0x08 val=0xa9, client=848f4d00, adapter=i2c0, addr=0x37
[   30.434752] sensor_write: reg=0x08 val=0xa9 SUCCESS
[   30.434760] sensor_write: reg=0x09 val=0xa8, client=848f4d00, adapter=i2c0, addr=0x37
[   30.435435] sensor_write: reg=0x09 val=0xa8 SUCCESS
[   30.435445] sensor_write: reg=0x0a val=0xa7, client=848f4d00, adapter=i2c0, addr=0x37
[   30.440043] sensor_write: reg=0x0a val=0xa7 SUCCESS
[   30.440059] sensor_write: reg=0x0b val=0xff, client=848f4d00, adapter=i2c0, addr=0x37
[   30.440396] sensor_write: reg=0x0b val=0xff SUCCESS
[   30.440406] sensor_write: reg=0x0c val=0xff, client=848f4d00, adapter=i2c0, addr=0x37
[   30.440718] sensor_write: reg=0x0c val=0xff SUCCESS
[   30.440726] sensor_write: reg=0x0f val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.441040] sensor_write: reg=0x0f val=0x00 SUCCESS
[   30.441049] sensor_write: reg=0x50 val=0x1c, client=848f4d00, adapter=i2c0, addr=0x37
[   30.441396] sensor_write: reg=0x50 val=0x1c SUCCESS
[   30.441405] sensor_write: reg=0x89 val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.441717] sensor_write: reg=0x89 val=0x03 SUCCESS
[   30.441726] sensor_write: reg=0xfe val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.442040] sensor_write: reg=0xfe val=0x04 SUCCESS
[   30.442049] sensor_write: reg=0x28 val=0x86, client=848f4d00, adapter=i2c0, addr=0x37
[   30.442362] sensor_write: reg=0x28 val=0x86 SUCCESS
[   30.442370] sensor_write_array: reg[100] 0x28=0x86 OK
[   30.442378] sensor_write: reg=0x29 val=0x86, client=848f4d00, adapter=i2c0, addr=0x37
[   30.442691] sensor_write: reg=0x29 val=0x86 SUCCESS
[   30.442700] sensor_write: reg=0x2a val=0x86, client=848f4d00, adapter=i2c0, addr=0x37
[   30.443012] sensor_write: reg=0x2a val=0x86 SUCCESS
[   30.443021] sensor_write: reg=0x2b val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.443334] sensor_write: reg=0x2b val=0x68 SUCCESS
[   30.443342] sensor_write: reg=0x2c val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.443655] sensor_write: reg=0x2c val=0x68 SUCCESS
[   30.443664] sensor_write: reg=0x2d val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.445559] sensor_write: reg=0x2d val=0x68 SUCCESS
[   30.445573] sensor_write: reg=0x2e val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.445890] sensor_write: reg=0x2e val=0x68 SUCCESS
[   30.445899] sensor_write: reg=0x2f val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.446216] sensor_write: reg=0x2f val=0x68 SUCCESS
[   30.446225] sensor_write: reg=0x30 val=0x4f, client=848f4d00, adapter=i2c0, addr=0x37
[   30.446610] sensor_write: reg=0x30 val=0x4f SUCCESS
[   30.446726] sensor_write: reg=0x31 val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.447046] sensor_write: reg=0x31 val=0x68 SUCCESS
[   30.447055] sensor_write: reg=0x32 val=0x67, client=848f4d00, adapter=i2c0, addr=0x37
[   30.451184] sensor_write: reg=0x32 val=0x67 SUCCESS
[   30.451200] sensor_write: reg=0x33 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.451524] sensor_write: reg=0x33 val=0x66 SUCCESS
[   30.451534] sensor_write: reg=0x34 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.451846] sensor_write: reg=0x34 val=0x66 SUCCESS
[   30.451854] sensor_write: reg=0x35 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.452168] sensor_write: reg=0x35 val=0x66 SUCCESS
[   30.452176] sensor_write: reg=0x36 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.452490] sensor_write: reg=0x36 val=0x66 SUCCESS
[   30.452498] sensor_write: reg=0x37 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.452811] sensor_write: reg=0x37 val=0x66 SUCCESS
[   30.452820] sensor_write: reg=0x38 val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.453132] sensor_write: reg=0x38 val=0x62 SUCCESS
[   30.453141] sensor_write: reg=0x39 val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.453454] sensor_write: reg=0x39 val=0x62 SUCCESS
[   30.453463] sensor_write: reg=0x3a val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.453776] sensor_write: reg=0x3a val=0x62 SUCCESS
[   30.453784] sensor_write: reg=0x3b val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.454097] sensor_write: reg=0x3b val=0x62 SUCCESS
[   30.454106] sensor_write: reg=0x3c val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.454418] sensor_write: reg=0x3c val=0x62 SUCCESS
[   30.454428] sensor_write: reg=0x3d val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.455651] sensor_write: reg=0x3d val=0x62 SUCCESS
[   30.455662] sensor_write: reg=0x3e val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.455976] sensor_write: reg=0x3e val=0x62 SUCCESS
[   30.455985] sensor_write: reg=0x3f val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.456306] sensor_write: reg=0x3f val=0x62 SUCCESS
[   30.456315] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.456626] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.456635] sensor_write: reg=0x9a val=0x06, client=848f4d00, adapter=i2c0, addr=0x37
[   30.461178] sensor_write: reg=0x9a val=0x06 SUCCESS
[   30.461192] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.461510] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.461519] sensor_write: reg=0x7b val=0x2a, client=848f4d00, adapter=i2c0, addr=0x37
[   30.461836] sensor_write: reg=0x7b val=0x2a SUCCESS
[   30.461845] sensor_write: reg=0x23 val=0x2d, client=848f4d00, adapter=i2c0, addr=0x37
[   30.462156] sensor_write: reg=0x23 val=0x2d SUCCESS
[   30.462165] sensor_write: reg=0xfe val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.462478] sensor_write: reg=0xfe val=0x03 SUCCESS
[   30.462487] sensor_write: reg=0x01 val=0x27, client=848f4d00, adapter=i2c0, addr=0x37
[   30.462800] sensor_write: reg=0x01 val=0x27 SUCCESS
[   30.462808] sensor_write: reg=0x02 val=0x56, client=848f4d00, adapter=i2c0, addr=0x37
[   30.463122] sensor_write: reg=0x02 val=0x56 SUCCESS
m[   30.463130] sensor_write: reg=0x03 val=0x8e, client=848f4d00, adapter=i2c0, addr=0x37
[   30.463442] sensor_write: reg=0x03 val=0x8e SUCCESS
[   30.463451] sensor_write: reg=0x12 val=0x80, client=848f4d00, adapter=i2c0, addr=0x37
[   30.463764] sensor_write: reg=0x12 val=0x80 SUCCESS
[   30.463772] sensor_write: reg=0x13 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.464085] sensor_write: reg=0x13 val=0x07 SUCCESS
[   30.464094] sensor_write: reg=0x15 val=0x12, client=848f4d00, adapter=i2c0, addr=0x37
[   30.464406] sensor_write: reg=0x15 val=0x12 SUCCESS
[   30.464415] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.464728] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.464736] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   30.465754] sensor_write: reg=0x3e val=0x91 SUCCESS
[   30.465762] sensor_write_array: Complete - wrote 137 registers, 0 errors
[   30.465769] *** SENSOR_WRITE_ARRAY RETURNED: 0 ***
[   30.465775] *** SENSOR_INIT: gc2053 initialization complete - marked as initialized ***
[   30.465782] Calling subdev 3 initialization (REVERSE ORDER - sensors first)
[   30.465789] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.465796] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   30.465802] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   30.465808] Calling subdev 1 initialization (REVERSE ORDER - sensors first)
[   30.465815] *** vic_core_ops_init: ENTRY - sd=85ffc400, enable=1 ***
[   30.465822] *** vic_core_ops_init: vic_dev=85ffc400, current state check ***
[   30.465828] *** vic_core_ops_init: current_state=2, enable=1 ***
[   30.465833] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   30.465839] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   30.465845] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   30.465850] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   30.465856] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   30.465864] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   30.465869] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   30.465875] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   30.465880] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   30.465886] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.465892] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.465898] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.465906] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.465912] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.465917] *** tx_vic_enable_irq: completed successfully ***
[   30.465923] Calling subdev 0 initialization (REVERSE ORDER - sensors first)
[   30.465930] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=1
[   30.465936] *** VIC device final state set to 2 (fully activated) ***
[   30.465942] *** ispcore_activate_module: SUCCESS - ALL REGISTER WRITES SHOULD NOW BE TRIGGERED ***
[   30.465948] *** tx_isp_video_s_stream: ispcore_activate_module completed ***
[   30.465953] *** tx_isp_video_s_stream: VIC state is 2, calling VIC core->init ***
[   30.465960] *** vic_core_ops_init: ENTRY - sd=85ffc400, enable=1 ***
[   30.465966] *** vic_core_ops_init: vic_dev=85ffc400, current state check ***
[   30.465972] *** vic_core_ops_init: current_state=2, enable=1 ***
[   30.465977] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   30.465982] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   30.465988] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   30.465994] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   30.466000] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   30.466007] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   30.466012] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   30.466018] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   30.466024] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   30.466030] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.466035] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.466041] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.466048] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.466053] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.466058] *** tx_vic_enable_irq: completed successfully ***
[   30.466064] *** tx_isp_video_s_stream: VIC core->init completed, VIC should now be state 3 ***
[   30.466070] *** tx_isp_video_s_stream: Core initialization complete, proceeding with subdev streaming ***
[   30.466076] *** tx_isp_video_s_stream: CRITICAL FIX - Initializing all subdevs before streaming ***
[   30.466084] *** tx_isp_video_s_stream: Activating CSI subdev (state 1 -> 2) before CSI init ***
[   30.466091] tx_isp_csi_activate_subdev: Initializing 1 clocks for CSI before enabling
[   30.466098] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 1 clocks
[   30.466104] isp_subdev_init_clks: Using platform data clock arrays: c06b7400
[   30.466112] isp_subdev_init_clks: Using platform data clock configs
[   30.466119] Platform data clock[0]: name=csi, rate=100000000
[   30.466130] Clock csi: set rate 100000000 Hz, result=-22
[   30.466136] Failed to set rate for clock csi, continuing anyway
[   30.491184] CPM clock gates configured
[   30.491198] isp_subdev_init_clks: Successfully initialized 1 clocks
[   30.491208] *** tx_isp_video_s_stream: CSI subdev activation done, state=2 ***
[   30.491214] *** tx_isp_video_s_stream: Initializing CSI subdev ***
[   30.491222] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=1
[   30.491228] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.491237] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   30.491244] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   30.491250] *** csi_core_ops_init: interface_type=1 (1=MIPI, 2=DVP) ***
[   30.491256] *** csi_core_ops_init: Set csi_dev->interface_type = 1 ***
[   30.571177] *** tx_isp_video_s_stream: CSI init SUCCESS ***
[   30.571190] *** tx_isp_video_s_stream: Initializing VIC subdev ***
[   30.571199] *** vic_core_ops_init: ENTRY - sd=85ffc400, enable=1 ***
[   30.571206] *** vic_core_ops_init: vic_dev=85ffc400, current state check ***
[   30.571212] *** vic_core_ops_init: current_state=3, enable=1 ***
[   30.571217] *** tx_isp_video_s_stream: VIC init SUCCESS ***
[   30.571223] *** tx_isp_video_s_stream: Initializing Sensor subdev ***
[   30.571232] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.571238] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   30.571244] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   30.571250] *** tx_isp_video_s_stream: Sensor init SUCCESS ***
[   30.571255] *** tx_isp_video_s_stream: All subdev initialization complete - proceeding with s_stream ***
[   30.571262] *** tx_isp_video_s_stream: Calling subdev[0]->ops->video->s_stream(1) ***
[   30.571268] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   30.571274] csi_video_s_stream: sd=85ffc000, enable=1
[   30.571280] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   30.571286] *** tx_isp_video_s_stream: subdev[0] s_stream SUCCESS ***
[   30.571293] *** tx_isp_video_s_stream: Calling subdev[1]->ops->video->s_stream(1) ***
[   30.571300] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85ffc400, enable=1 ***
[   30.571306] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=3 ***
[   30.571311] *** vic_core_s_stream: STREAM ON ***
[   30.571316] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   30.571322] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   30.571328] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.571336] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   30.571342] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   30.571349] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   30.571354] *** STREAMING: Configuring CPM registers for VIC access ***
[   30.601177] STREAMING: CPM clocks configured for VIC access
[   30.601192] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   30.601198] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   30.601204] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   30.601210] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   30.601216] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   30.601222] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   30.601228] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   30.601235] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   30.601242] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   30.601247] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   30.601253] *** VIC unlock: Commands written, checking VIC status register ***
[   30.601259] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   30.601265] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   30.601270] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   30.601276] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   30.601282] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   30.601287] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   30.601362] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   30.601370] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   30.601376] *** VIC REGISTER CONFIG: Writing VIC configuration registers (vic_start_ok=0) ***
[   30.601384] *** VIC REGISTER CONFIG: VIC configuration registers written (0xc=2, 0x10=0x07800438, 0x14=3840) ***
[   30.601392] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   30.601398] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   30.601404] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   30.601410] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   30.601416] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   30.601422] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   30.601428] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   30.601434] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   30.601440] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   30.601445] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   30.601452] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000001 (expect 0xb5742249) ***
[   30.601457] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   30.601463] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   30.601470] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   30.601475] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   30.601481] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   30.601487] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   30.601494] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   30.601499] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   30.601508] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   30.601514] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   30.601520] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   30.601528] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   30.601533] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   30.601539] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   30.601544] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   30.601550] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   30.601557] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   30.601563] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.601571] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   30.601577] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   30.601583] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   30.601589] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   30.601596] ispvic_frame_channel_s_stream: arg1=85ffc400, arg2=1
[   30.601602] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85ffc400
[   30.601608] ispvic_frame_channel_s_stream[2441]: streamon
[   30.601614] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   30.601620] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   30.601626] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   30.601632] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   30.601637] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   30.601644] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   30.601650] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   30.601657] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   30.601663] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   30.601669] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   30.601674] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   30.601680] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   30.601686] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   30.601694] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   30.601701] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   30.601708] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   30.601716] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   30.601724] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   30.601730] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   30.601735] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   30.601741] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   30.601748] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   30.601754] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   30.601760] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   30.601765] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.601771] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   30.601776] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   30.601788] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   30.601796] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   30.601860] *** VIC VERIFY (CONTROL): [0x0]=0x3130322a [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000630 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   30.601870] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.601876] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   30.601885] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.601892] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   30.601897] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   30.601903] *** VIC CONTROL BANK: Post-enable [0x0]=0x3130322a ***
[   30.601910] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   30.602916] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   30.602922] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   30.602928] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   30.603034] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.603142] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.603149] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   30.603154] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   30.603160] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.603166] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.603172] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.603179] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.603185] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.603190] *** tx_vic_enable_irq: completed successfully ***
root@ing-wyze-cam3-a000 ~# dmesg 
[   30.392683] sensor_write: reg=0x08 val=0x11, client=848f4d00, adapter=i2c0, addr=0x37
[   30.392997] sensor_write: reg=0x08 val=0x11 SUCCESS
[   30.393006] sensor_write: reg=0x09 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.393319] sensor_write: reg=0x09 val=0x00 SUCCESS
[   30.393327] sensor_write: reg=0x0a val=0x02, client=848f4d00, adapter=i2c0, addr=0x37
[   30.393640] sensor_write: reg=0x0a val=0x02 SUCCESS
[   30.393648] sensor_write: reg=0x0b val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.393961] sensor_write: reg=0x0b val=0x00 SUCCESS
[   30.393970] sensor_write: reg=0x0c val=0x02, client=848f4d00, adapter=i2c0, addr=0x37
[   30.394282] sensor_write: reg=0x0c val=0x02 SUCCESS
[   30.394290] sensor_write: reg=0x0d val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.394608] sensor_write: reg=0x0d val=0x04 SUCCESS
[   30.394616] sensor_write: reg=0x0e val=0x40, client=848f4d00, adapter=i2c0, addr=0x37
[   30.394930] sensor_write: reg=0x0e val=0x40 SUCCESS
[   30.394938] sensor_write: reg=0x12 val=0xe2, client=848f4d00, adapter=i2c0, addr=0x37
[   30.395837] sensor_write: reg=0x12 val=0xe2 SUCCESS
[   30.395853] sensor_write: reg=0x13 val=0x16, client=848f4d00, adapter=i2c0, addr=0x37
[   30.396169] sensor_write: reg=0x13 val=0x16 SUCCESS
[   30.396178] sensor_write: reg=0x19 val=0x0a, client=848f4d00, adapter=i2c0, addr=0x37
[   30.399687] sensor_write: reg=0x19 val=0x0a SUCCESS
[   30.399702] sensor_write: reg=0x21 val=0x1c, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400021] sensor_write: reg=0x21 val=0x1c SUCCESS
[   30.400030] sensor_write: reg=0x28 val=0x0a, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400346] sensor_write: reg=0x28 val=0x0a SUCCESS
[   30.400355] sensor_write: reg=0x29 val=0x24, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400668] sensor_write: reg=0x29 val=0x24 SUCCESS
[   30.400677] sensor_write: reg=0x2b val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.400990] sensor_write: reg=0x2b val=0x04 SUCCESS
[   30.400998] sensor_write: reg=0x32 val=0xf8, client=848f4d00, adapter=i2c0, addr=0x37
[   30.401300] sensor_write: reg=0x32 val=0xf8 SUCCESS
[   30.401310] sensor_write: reg=0x37 val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.401622] sensor_write: reg=0x37 val=0x03 SUCCESS
[   30.401630] sensor_write: reg=0x39 val=0x15, client=848f4d00, adapter=i2c0, addr=0x37
[   30.401942] sensor_write: reg=0x39 val=0x15 SUCCESS
[   30.401950] sensor_write: reg=0x43 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.402254] sensor_write: reg=0x43 val=0x07 SUCCESS
[   30.402267] sensor_write: reg=0x44 val=0x40, client=848f4d00, adapter=i2c0, addr=0x37
[   30.402586] sensor_write: reg=0x44 val=0x40 SUCCESS
[   30.402594] sensor_write: reg=0x46 val=0x0b, client=848f4d00, adapter=i2c0, addr=0x37
[   30.402906] sensor_write: reg=0x46 val=0x0b SUCCESS
[   30.402914] sensor_write: reg=0x4b val=0x20, client=848f4d00, adapter=i2c0, addr=0x37
[   30.405151] sensor_write: reg=0x4b val=0x20 SUCCESS
[   30.405165] sensor_write: reg=0x4e val=0x08, client=848f4d00, adapter=i2c0, addr=0x37
[   30.405482] sensor_write: reg=0x4e val=0x08 SUCCESS
[   30.405491] sensor_write: reg=0x55 val=0x20, client=848f4d00, adapter=i2c0, addr=0x37
[   30.405810] sensor_write: reg=0x55 val=0x20 SUCCESS
[   30.405818] sensor_write: reg=0x66 val=0x05, client=848f4d00, adapter=i2c0, addr=0x37
[   30.406132] sensor_write: reg=0x66 val=0x05 SUCCESS
[   30.406141] sensor_write: reg=0x67 val=0x05, client=848f4d00, adapter=i2c0, addr=0x37
[   30.406454] sensor_write: reg=0x67 val=0x05 SUCCESS
[   30.406462] sensor_write: reg=0x77 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.411202] sensor_write: reg=0x77 val=0x01 SUCCESS
[   30.411218] sensor_write: reg=0x78 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.411536] sensor_write: reg=0x78 val=0x00 SUCCESS
[   30.411544] sensor_write: reg=0x7c val=0x93, client=848f4d00, adapter=i2c0, addr=0x37
[   30.411861] sensor_write: reg=0x7c val=0x93 SUCCESS
[   30.411868] sensor_write_array: reg[50] 0x7c=0x93 OK
[   30.411877] sensor_write: reg=0x8c val=0x12, client=848f4d00, adapter=i2c0, addr=0x37
[   30.412190] sensor_write: reg=0x8c val=0x12 SUCCESS
[   30.412199] sensor_write: reg=0x8d val=0x92, client=848f4d00, adapter=i2c0, addr=0x37
[   30.412512] sensor_write: reg=0x8d val=0x92 SUCCESS
[   30.412520] sensor_write: reg=0x90 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.412833] sensor_write: reg=0x90 val=0x00 SUCCESS
[   30.412842] sensor_write: reg=0x41 val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.413154] sensor_write: reg=0x41 val=0x04 SUCCESS
[   30.413163] sensor_write: reg=0x42 val=0x9d, client=848f4d00, adapter=i2c0, addr=0x37
[   30.413476] sensor_write: reg=0x42 val=0x9d SUCCESS
[   30.413484] sensor_write: reg=0x9d val=0x10, client=848f4d00, adapter=i2c0, addr=0x37
[   30.413797] sensor_write: reg=0x9d val=0x10 SUCCESS
[   30.413806] sensor_write: reg=0xce val=0x7c, client=848f4d00, adapter=i2c0, addr=0x37
[   30.414118] sensor_write: reg=0xce val=0x7c SUCCESS
[   30.414127] sensor_write: reg=0xd2 val=0x41, client=848f4d00, adapter=i2c0, addr=0x37
[   30.414440] sensor_write: reg=0xd2 val=0x41 SUCCESS
[   30.414448] sensor_write: reg=0xd3 val=0xdc, client=848f4d00, adapter=i2c0, addr=0x37
[   30.414761] sensor_write: reg=0xd3 val=0xdc SUCCESS
[   30.414769] sensor_write: reg=0xe6 val=0x50, client=848f4d00, adapter=i2c0, addr=0x37
[   30.415082] sensor_write: reg=0xe6 val=0x50 SUCCESS
[   30.415090] sensor_write: reg=0xb6 val=0xc0, client=848f4d00, adapter=i2c0, addr=0x37
[   30.421205] sensor_write: reg=0xb6 val=0xc0 SUCCESS
[   30.421220] sensor_write: reg=0xb0 val=0x70, client=848f4d00, adapter=i2c0, addr=0x37
[   30.421539] sensor_write: reg=0xb0 val=0x70 SUCCESS
[   30.421548] sensor_write: reg=0xb1 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.421864] sensor_write: reg=0xb1 val=0x01 SUCCESS
[   30.421873] sensor_write: reg=0xb2 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.422185] sensor_write: reg=0xb2 val=0x00 SUCCESS
[   30.422193] sensor_write: reg=0xb3 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.422506] sensor_write: reg=0xb3 val=0x00 SUCCESS
[   30.422515] sensor_write: reg=0xb4 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.422828] sensor_write: reg=0xb4 val=0x00 SUCCESS
[   30.422836] sensor_write: reg=0xb8 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.423149] sensor_write: reg=0xb8 val=0x01 SUCCESS
[   30.423158] sensor_write: reg=0xb9 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.423470] sensor_write: reg=0xb9 val=0x00 SUCCESS
[   30.423479] sensor_write: reg=0x26 val=0x30, client=848f4d00, adapter=i2c0, addr=0x37
[   30.423792] sensor_write: reg=0x26 val=0x30 SUCCESS
[   30.423800] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.424113] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.424121] sensor_write: reg=0x40 val=0x23, client=848f4d00, adapter=i2c0, addr=0x37
[   30.424434] sensor_write: reg=0x40 val=0x23 SUCCESS
[   30.424442] sensor_write: reg=0x55 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.424760] sensor_write: reg=0x55 val=0x07 SUCCESS
[   30.424768] sensor_write: reg=0x60 val=0x40, client=848f4d00, adapter=i2c0, addr=0x37
[   30.425082] sensor_write: reg=0x60 val=0x40 SUCCESS
[   30.425090] sensor_write: reg=0xfe val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.425458] sensor_write: reg=0xfe val=0x04 SUCCESS
[   30.425467] sensor_write: reg=0x14 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.425782] sensor_write: reg=0x14 val=0x78 SUCCESS
[   30.425791] sensor_write: reg=0x15 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.426104] sensor_write: reg=0x15 val=0x78 SUCCESS
[   30.426113] sensor_write: reg=0x16 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.426426] sensor_write: reg=0x16 val=0x78 SUCCESS
[   30.426434] sensor_write: reg=0x17 val=0x78, client=848f4d00, adapter=i2c0, addr=0x37
[   30.426748] sensor_write: reg=0x17 val=0x78 SUCCESS
[   30.426756] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.427069] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.427077] sensor_write: reg=0x92 val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.431200] sensor_write: reg=0x92 val=0x00 SUCCESS
[   30.431215] sensor_write: reg=0x94 val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.431534] sensor_write: reg=0x94 val=0x03 SUCCESS
[   30.431543] sensor_write: reg=0x95 val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.431860] sensor_write: reg=0x95 val=0x04 SUCCESS
[   30.431868] sensor_write: reg=0x96 val=0x38, client=848f4d00, adapter=i2c0, addr=0x37
[   30.432182] sensor_write: reg=0x96 val=0x38 SUCCESS
[   30.432191] sensor_write: reg=0x97 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.432504] sensor_write: reg=0x97 val=0x07 SUCCESS
[   30.432512] sensor_write: reg=0x98 val=0x80, client=848f4d00, adapter=i2c0, addr=0x37
[   30.432826] sensor_write: reg=0x98 val=0x80 SUCCESS
[   30.432834] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.433146] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.433155] sensor_write: reg=0x01 val=0x05, client=848f4d00, adapter=i2c0, addr=0x37
[   30.433468] sensor_write: reg=0x01 val=0x05 SUCCESS
[   30.433476] sensor_write: reg=0x02 val=0x89, client=848f4d00, adapter=i2c0, addr=0x37
[   30.433789] sensor_write: reg=0x02 val=0x89 SUCCESS
[   30.433797] sensor_write: reg=0x04 val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.434110] sensor_write: reg=0x04 val=0x01 SUCCESS
[   30.434118] sensor_write: reg=0x07 val=0xa6, client=848f4d00, adapter=i2c0, addr=0x37
[   30.434431] sensor_write: reg=0x07 val=0xa6 SUCCESS
[   30.434439] sensor_write: reg=0x08 val=0xa9, client=848f4d00, adapter=i2c0, addr=0x37
[   30.434752] sensor_write: reg=0x08 val=0xa9 SUCCESS
[   30.434760] sensor_write: reg=0x09 val=0xa8, client=848f4d00, adapter=i2c0, addr=0x37
[   30.435435] sensor_write: reg=0x09 val=0xa8 SUCCESS
[   30.435445] sensor_write: reg=0x0a val=0xa7, client=848f4d00, adapter=i2c0, addr=0x37
[   30.440043] sensor_write: reg=0x0a val=0xa7 SUCCESS
[   30.440059] sensor_write: reg=0x0b val=0xff, client=848f4d00, adapter=i2c0, addr=0x37
[   30.440396] sensor_write: reg=0x0b val=0xff SUCCESS
[   30.440406] sensor_write: reg=0x0c val=0xff, client=848f4d00, adapter=i2c0, addr=0x37
[   30.440718] sensor_write: reg=0x0c val=0xff SUCCESS
[   30.440726] sensor_write: reg=0x0f val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.441040] sensor_write: reg=0x0f val=0x00 SUCCESS
[   30.441049] sensor_write: reg=0x50 val=0x1c, client=848f4d00, adapter=i2c0, addr=0x37
[   30.441396] sensor_write: reg=0x50 val=0x1c SUCCESS
[   30.441405] sensor_write: reg=0x89 val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.441717] sensor_write: reg=0x89 val=0x03 SUCCESS
[   30.441726] sensor_write: reg=0xfe val=0x04, client=848f4d00, adapter=i2c0, addr=0x37
[   30.442040] sensor_write: reg=0xfe val=0x04 SUCCESS
[   30.442049] sensor_write: reg=0x28 val=0x86, client=848f4d00, adapter=i2c0, addr=0x37
[   30.442362] sensor_write: reg=0x28 val=0x86 SUCCESS
[   30.442370] sensor_write_array: reg[100] 0x28=0x86 OK
[   30.442378] sensor_write: reg=0x29 val=0x86, client=848f4d00, adapter=i2c0, addr=0x37
[   30.442691] sensor_write: reg=0x29 val=0x86 SUCCESS
[   30.442700] sensor_write: reg=0x2a val=0x86, client=848f4d00, adapter=i2c0, addr=0x37
[   30.443012] sensor_write: reg=0x2a val=0x86 SUCCESS
[   30.443021] sensor_write: reg=0x2b val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.443334] sensor_write: reg=0x2b val=0x68 SUCCESS
[   30.443342] sensor_write: reg=0x2c val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.443655] sensor_write: reg=0x2c val=0x68 SUCCESS
[   30.443664] sensor_write: reg=0x2d val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.445559] sensor_write: reg=0x2d val=0x68 SUCCESS
[   30.445573] sensor_write: reg=0x2e val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.445890] sensor_write: reg=0x2e val=0x68 SUCCESS
[   30.445899] sensor_write: reg=0x2f val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.446216] sensor_write: reg=0x2f val=0x68 SUCCESS
[   30.446225] sensor_write: reg=0x30 val=0x4f, client=848f4d00, adapter=i2c0, addr=0x37
[   30.446610] sensor_write: reg=0x30 val=0x4f SUCCESS
[   30.446726] sensor_write: reg=0x31 val=0x68, client=848f4d00, adapter=i2c0, addr=0x37
[   30.447046] sensor_write: reg=0x31 val=0x68 SUCCESS
[   30.447055] sensor_write: reg=0x32 val=0x67, client=848f4d00, adapter=i2c0, addr=0x37
[   30.451184] sensor_write: reg=0x32 val=0x67 SUCCESS
[   30.451200] sensor_write: reg=0x33 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.451524] sensor_write: reg=0x33 val=0x66 SUCCESS
[   30.451534] sensor_write: reg=0x34 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.451846] sensor_write: reg=0x34 val=0x66 SUCCESS
[   30.451854] sensor_write: reg=0x35 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.452168] sensor_write: reg=0x35 val=0x66 SUCCESS
[   30.452176] sensor_write: reg=0x36 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.452490] sensor_write: reg=0x36 val=0x66 SUCCESS
[   30.452498] sensor_write: reg=0x37 val=0x66, client=848f4d00, adapter=i2c0, addr=0x37
[   30.452811] sensor_write: reg=0x37 val=0x66 SUCCESS
[   30.452820] sensor_write: reg=0x38 val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.453132] sensor_write: reg=0x38 val=0x62 SUCCESS
[   30.453141] sensor_write: reg=0x39 val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.453454] sensor_write: reg=0x39 val=0x62 SUCCESS
[   30.453463] sensor_write: reg=0x3a val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.453776] sensor_write: reg=0x3a val=0x62 SUCCESS
[   30.453784] sensor_write: reg=0x3b val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.454097] sensor_write: reg=0x3b val=0x62 SUCCESS
[   30.454106] sensor_write: reg=0x3c val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.454418] sensor_write: reg=0x3c val=0x62 SUCCESS
[   30.454428] sensor_write: reg=0x3d val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.455651] sensor_write: reg=0x3d val=0x62 SUCCESS
[   30.455662] sensor_write: reg=0x3e val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.455976] sensor_write: reg=0x3e val=0x62 SUCCESS
[   30.455985] sensor_write: reg=0x3f val=0x62, client=848f4d00, adapter=i2c0, addr=0x37
[   30.456306] sensor_write: reg=0x3f val=0x62 SUCCESS
[   30.456315] sensor_write: reg=0xfe val=0x01, client=848f4d00, adapter=i2c0, addr=0x37
[   30.456626] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.456635] sensor_write: reg=0x9a val=0x06, client=848f4d00, adapter=i2c0, addr=0x37
[   30.461178] sensor_write: reg=0x9a val=0x06 SUCCESS
[   30.461192] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.461510] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.461519] sensor_write: reg=0x7b val=0x2a, client=848f4d00, adapter=i2c0, addr=0x37
[   30.461836] sensor_write: reg=0x7b val=0x2a SUCCESS
[   30.461845] sensor_write: reg=0x23 val=0x2d, client=848f4d00, adapter=i2c0, addr=0x37
[   30.462156] sensor_write: reg=0x23 val=0x2d SUCCESS
[   30.462165] sensor_write: reg=0xfe val=0x03, client=848f4d00, adapter=i2c0, addr=0x37
[   30.462478] sensor_write: reg=0xfe val=0x03 SUCCESS
[   30.462487] sensor_write: reg=0x01 val=0x27, client=848f4d00, adapter=i2c0, addr=0x37
[   30.462800] sensor_write: reg=0x01 val=0x27 SUCCESS
[   30.462808] sensor_write: reg=0x02 val=0x56, client=848f4d00, adapter=i2c0, addr=0x37
[   30.463122] sensor_write: reg=0x02 val=0x56 SUCCESS
[   30.463130] sensor_write: reg=0x03 val=0x8e, client=848f4d00, adapter=i2c0, addr=0x37
[   30.463442] sensor_write: reg=0x03 val=0x8e SUCCESS
[   30.463451] sensor_write: reg=0x12 val=0x80, client=848f4d00, adapter=i2c0, addr=0x37
[   30.463764] sensor_write: reg=0x12 val=0x80 SUCCESS
[   30.463772] sensor_write: reg=0x13 val=0x07, client=848f4d00, adapter=i2c0, addr=0x37
[   30.464085] sensor_write: reg=0x13 val=0x07 SUCCESS
[   30.464094] sensor_write: reg=0x15 val=0x12, client=848f4d00, adapter=i2c0, addr=0x37
[   30.464406] sensor_write: reg=0x15 val=0x12 SUCCESS
[   30.464415] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   30.464728] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.464736] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   30.465754] sensor_write: reg=0x3e val=0x91 SUCCESS
[   30.465762] sensor_write_array: Complete - wrote 137 registers, 0 errors
[   30.465769] *** SENSOR_WRITE_ARRAY RETURNED: 0 ***
[   30.465775] *** SENSOR_INIT: gc2053 initialization complete - marked as initialized ***
[   30.465782] Calling subdev 3 initialization (REVERSE ORDER - sensors first)
[   30.465789] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.465796] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   30.465802] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   30.465808] Calling subdev 1 initialization (REVERSE ORDER - sensors first)
[   30.465815] *** vic_core_ops_init: ENTRY - sd=85ffc400, enable=1 ***
[   30.465822] *** vic_core_ops_init: vic_dev=85ffc400, current state check ***
[   30.465828] *** vic_core_ops_init: current_state=2, enable=1 ***
[   30.465833] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   30.465839] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   30.465845] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   30.465850] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   30.465856] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   30.465864] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   30.465869] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   30.465875] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   30.465880] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   30.465886] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.465892] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.465898] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.465906] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.465912] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.465917] *** tx_vic_enable_irq: completed successfully ***
[   30.465923] Calling subdev 0 initialization (REVERSE ORDER - sensors first)
[   30.465930] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=1
[   30.465936] *** VIC device final state set to 2 (fully activated) ***
[   30.465942] *** ispcore_activate_module: SUCCESS - ALL REGISTER WRITES SHOULD NOW BE TRIGGERED ***
[   30.465948] *** tx_isp_video_s_stream: ispcore_activate_module completed ***
[   30.465953] *** tx_isp_video_s_stream: VIC state is 2, calling VIC core->init ***
[   30.465960] *** vic_core_ops_init: ENTRY - sd=85ffc400, enable=1 ***
[   30.465966] *** vic_core_ops_init: vic_dev=85ffc400, current state check ***
[   30.465972] *** vic_core_ops_init: current_state=2, enable=1 ***
[   30.465977] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   30.465982] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   30.465988] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   30.465994] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   30.466000] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   30.466007] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   30.466012] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   30.466018] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   30.466024] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   30.466030] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.466035] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.466041] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.466048] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.466053] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.466058] *** tx_vic_enable_irq: completed successfully ***
[   30.466064] *** tx_isp_video_s_stream: VIC core->init completed, VIC should now be state 3 ***
[   30.466070] *** tx_isp_video_s_stream: Core initialization complete, proceeding with subdev streaming ***
[   30.466076] *** tx_isp_video_s_stream: CRITICAL FIX - Initializing all subdevs before streaming ***
[   30.466084] *** tx_isp_video_s_stream: Activating CSI subdev (state 1 -> 2) before CSI init ***
[   30.466091] tx_isp_csi_activate_subdev: Initializing 1 clocks for CSI before enabling
[   30.466098] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 1 clocks
[   30.466104] isp_subdev_init_clks: Using platform data clock arrays: c06b7400
[   30.466112] isp_subdev_init_clks: Using platform data clock configs
[   30.466119] Platform data clock[0]: name=csi, rate=100000000
[   30.466130] Clock csi: set rate 100000000 Hz, result=-22
[   30.466136] Failed to set rate for clock csi, continuing anyway
[   30.491184] CPM clock gates configured
[   30.491198] isp_subdev_init_clks: Successfully initialized 1 clocks
[   30.491208] *** tx_isp_video_s_stream: CSI subdev activation done, state=2 ***
[   30.491214] *** tx_isp_video_s_stream: Initializing CSI subdev ***
[   30.491222] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=1
[   30.491228] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.491237] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   30.491244] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   30.491250] *** csi_core_ops_init: interface_type=1 (1=MIPI, 2=DVP) ***
[   30.491256] *** csi_core_ops_init: Set csi_dev->interface_type = 1 ***
[   30.571177] *** tx_isp_video_s_stream: CSI init SUCCESS ***
[   30.571190] *** tx_isp_video_s_stream: Initializing VIC subdev ***
[   30.571199] *** vic_core_ops_init: ENTRY - sd=85ffc400, enable=1 ***
[   30.571206] *** vic_core_ops_init: vic_dev=85ffc400, current state check ***
[   30.571212] *** vic_core_ops_init: current_state=3, enable=1 ***
[   30.571217] *** tx_isp_video_s_stream: VIC init SUCCESS ***
[   30.571223] *** tx_isp_video_s_stream: Initializing Sensor subdev ***
[   30.571232] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.571238] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   30.571244] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   30.571250] *** tx_isp_video_s_stream: Sensor init SUCCESS ***
[   30.571255] *** tx_isp_video_s_stream: All subdev initialization complete - proceeding with s_stream ***
[   30.571262] *** tx_isp_video_s_stream: Calling subdev[0]->ops->video->s_stream(1) ***
[   30.571268] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   30.571274] csi_video_s_stream: sd=85ffc000, enable=1
[   30.571280] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   30.571286] *** tx_isp_video_s_stream: subdev[0] s_stream SUCCESS ***
[   30.571293] *** tx_isp_video_s_stream: Calling subdev[1]->ops->video->s_stream(1) ***
[   30.571300] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85ffc400, enable=1 ***
[   30.571306] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=3 ***
[   30.571311] *** vic_core_s_stream: STREAM ON ***
[   30.571316] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   30.571322] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   30.571328] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.571336] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   30.571342] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   30.571349] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   30.571354] *** STREAMING: Configuring CPM registers for VIC access ***
[   30.601177] STREAMING: CPM clocks configured for VIC access
[   30.601192] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   30.601198] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   30.601204] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   30.601210] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   30.601216] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   30.601222] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   30.601228] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   30.601235] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   30.601242] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   30.601247] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   30.601253] *** VIC unlock: Commands written, checking VIC status register ***
[   30.601259] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   30.601265] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   30.601270] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   30.601276] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   30.601282] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   30.601287] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   30.601362] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   30.601370] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   30.601376] *** VIC REGISTER CONFIG: Writing VIC configuration registers (vic_start_ok=0) ***
[   30.601384] *** VIC REGISTER CONFIG: VIC configuration registers written (0xc=2, 0x10=0x07800438, 0x14=3840) ***
[   30.601392] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   30.601398] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   30.601404] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   30.601410] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   30.601416] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   30.601422] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   30.601428] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   30.601434] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   30.601440] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   30.601445] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   30.601452] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000001 (expect 0xb5742249) ***
[   30.601457] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   30.601463] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   30.601470] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   30.601475] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   30.601481] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   30.601487] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   30.601494] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   30.601499] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   30.601508] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   30.601514] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   30.601520] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   30.601528] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   30.601533] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   30.601539] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   30.601544] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   30.601550] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   30.601557] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   30.601563] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.601571] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   30.601577] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   30.601583] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   30.601589] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   30.601596] ispvic_frame_channel_s_stream: arg1=85ffc400, arg2=1
[   30.601602] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85ffc400
[   30.601608] ispvic_frame_channel_s_stream[2441]: streamon
[   30.601614] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   30.601620] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   30.601626] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   30.601632] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   30.601637] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   30.601644] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   30.601650] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   30.601657] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   30.601663] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   30.601669] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   30.601674] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   30.601680] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   30.601686] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   30.601694] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   30.601701] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   30.601708] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   30.601716] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   30.601724] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   30.601730] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   30.601735] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   30.601741] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   30.601748] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   30.601754] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   30.601760] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   30.601765] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.601771] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   30.601776] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   30.601788] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   30.601796] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   30.601860] *** VIC VERIFY (CONTROL): [0x0]=0x3130322a [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000630 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   30.601870] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.601876] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   30.601885] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.601892] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   30.601897] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   30.601903] *** VIC CONTROL BANK: Post-enable [0x0]=0x3130322a ***
[   30.601910] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   30.602916] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   30.602922] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   30.602928] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   30.603034] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.603142] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.603149] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   30.603154] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   30.603160] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.603166] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.603172] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.603179] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.603185] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.603190] *** tx_vic_enable_irq: completed successfully ***
[   31.115237] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   31.115250] *** vic_core_s_stream: VIC state transition 3 → 4 (STREAMING) ***
[   31.115255] *** VIC STATE 4: Calling ispcore_slake_module to initialize ISP core ***
[   31.115262] *** ispcore_slake_module: EXACT Binary Ninja MCP implementation ***
[   31.115269] ispcore_slake_module: VIC device=85ffc400, state=4ispcore_slake_module: ISP state >= 3, calling ispcore_core_ops_init
[   31.115278] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.115287] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   31.115294] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   31.115299] ispcore_slake_module: Using sensor attributes from connected sensor
[   31.115306] *** ispcore_core_ops_init_with_sensor: GOOD-THINGS approach - isp=84724000, sensor_attr=c06e20cc ****** ispcore_core_ops_init_with_sensor: Calling tisp_init with sensor parameters (good-things approach) ***
[   31.115315] *** This will configure MIPI CSI lanes and enable proper interrupt flow ****** ispcore_core_ops_init_with_sensor: Calling tisp_init(&sensor_params, "gc2053") ***
[   31.115324] *** tisp_init: IMPLEMENTING MISSING HARDWARE REGISTER INITIALIZATION ***
[   31.115329] *** THIS FUNCTION CONTAINS ALL THE system_reg_write CALLS FROM REFERENCE ***
[   31.115336] *** tisp_init: Invalid sensor dimensions 1x0, using defaults 1920x1080 ***
[   31.115343] *** tisp_init: FIXED - Extracted dimensions from sensor_attr: 1920x1080 ***
[   31.115349] tisp_init: Initializing ISP hardware for sensor (1920x1080)
[   31.115355] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   31.115360] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   31.115365] tisp_event_init: Initializing ISP event system
[   31.115373] tisp_event_init: SAFE event system initialized with 20 nodes
[   31.115379] tisp_event_set_cb: Setting callback for event 4
[   31.115385] tisp_event_set_cb: Event 4 callback set to c0685824
[   31.115391] tisp_event_set_cb: Setting callback for event 5
[   31.115397] tisp_event_set_cb: Event 5 callback set to c0685cec
[   31.115403] tisp_event_set_cb: Setting callback for event 7
[   31.115409] tisp_event_set_cb: Event 7 callback set to c06858b8
[   31.115415] tisp_event_set_cb: Setting callback for event 9
[   31.115421] tisp_event_set_cb: Event 9 callback set to c0685940
[   31.115427] tisp_event_set_cb: Setting callback for event 8
[   31.115433] tisp_event_set_cb: Event 8 callback set to c0685a04
[   31.115439] *** system_irq_func_set: Registered handler c067e790 at index 13 ***
[   31.133553] *** WRITING ISP CORE CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   31.133568] *** SYSTEM_REG_WRITE: reg[0xb004] = 0xf001f001 (Binary Ninja EXACT) ***
[   31.133575] *** SYSTEM_REG_WRITE: reg[0xb008] = 0x40404040 (Binary Ninja EXACT) ***
[   31.133583] *** SYSTEM_REG_WRITE: reg[0xb00c] = 0x40404040 (Binary Ninja EXACT) ***
[   31.133589] *** SYSTEM_REG_WRITE: reg[0xb010] = 0x40404040 (Binary Ninja EXACT) ***
[   31.133596] *** SYSTEM_REG_WRITE: reg[0xb014] = 0x404040 (Binary Ninja EXACT) ***
[   31.133603] system_reg_write: BLOCKED core-control reg[0xb018]=0x40404040 during streaming (preserve interrupts)
[   31.133611] system_reg_write: BLOCKED core-control reg[0xb01c]=0x40404040 during streaming (preserve interrupts)
[   31.133618] system_reg_write: BLOCKED core-control reg[0xb020]=0x40404040 during streaming (preserve interrupts)
[   31.133626] system_reg_write: BLOCKED core-control reg[0xb024]=0x404040 during streaming (preserve interrupts)
[   31.133633] *** SYSTEM_REG_WRITE: reg[0xb028] = 0x1000080 (Binary Ninja EXACT) ***
[   31.133639] *** SYSTEM_REG_WRITE: reg[0xb02c] = 0x1000080 (Binary Ninja EXACT) ***
[   31.133646] *** SYSTEM_REG_WRITE: reg[0xb030] = 0x100 (Binary Ninja EXACT) ***
[   31.133653] *** SYSTEM_REG_WRITE: reg[0xb034] = 0xffff0100 (Binary Ninja EXACT) ***
[   31.133660] *** SYSTEM_REG_WRITE: reg[0xb038] = 0x1ff00 (Binary Ninja EXACT) ***
[   31.133667] *** SYSTEM_REG_WRITE: reg[0xb04c] = 0x103 (Binary Ninja EXACT) ***
[   31.133673] *** SYSTEM_REG_WRITE: reg[0xb050] = 0x3 (Binary Ninja EXACT) ***
[   31.133679] *** WRITING CRITICAL VARYING REGISTERS - USING EXACT REFERENCE VALUES ***
[   31.133685] *** SYSTEM_REG_WRITE: reg[0xb07c] = 0x341b (Binary Ninja EXACT) ***
[   31.133692] *** SYSTEM_REG_WRITE: reg[0xb080] = 0x46b0 (Binary Ninja EXACT) ***
[   31.133699] *** SYSTEM_REG_WRITE: reg[0xb084] = 0x1813 (Binary Ninja EXACT) ***
[   31.133705] *** SYSTEM_REG_WRITE: reg[0xb08c] = 0x10a (Binary Ninja EXACT) ***
[   31.133711] *** ISP CORE CONTROL REGISTERS WRITTEN - NOW MATCHES REFERENCE DRIVER ***
[   31.133717] *** WRITING ISP CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   31.133723] system_reg_write: BLOCKED reg[0x9804]=0x3f00 during streaming to protect interrupts
[   31.133730] *** SYSTEM_REG_WRITE: reg[0x9864] = 0x7800438 (Binary Ninja EXACT) ***
[   31.133737] *** SYSTEM_REG_WRITE: reg[0x987c] = 0xc0000000 (Binary Ninja EXACT) ***
[   31.133744] *** SYSTEM_REG_WRITE: reg[0x9880] = 0x1 (Binary Ninja EXACT) ***
[   31.133750] *** SYSTEM_REG_WRITE: reg[0x9884] = 0x1 (Binary Ninja EXACT) ***
[   31.133757] *** SYSTEM_REG_WRITE: reg[0x9890] = 0x1010001 (Binary Ninja EXACT) ***
[   31.133764] *** SYSTEM_REG_WRITE: reg[0x989c] = 0x1010001 (Binary Ninja EXACT) ***
[   31.133771] *** SYSTEM_REG_WRITE: reg[0x98a8] = 0x1010001 (Binary Ninja EXACT) ***
[   31.133776] *** WRITING VIC CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   31.133783] *** SYSTEM_REG_WRITE: reg[0x9a00] = 0x50002d0 (Binary Ninja EXACT) ***
[   31.133790] *** SYSTEM_REG_WRITE: reg[0x9a04] = 0x3000300 (Binary Ninja EXACT) ***
[   31.133797] *** SYSTEM_REG_WRITE: reg[0x9a2c] = 0x50002d0 (Binary Ninja EXACT) ***
[   31.133803] *** SYSTEM_REG_WRITE: reg[0x9a34] = 0x1 (Binary Ninja EXACT) ***
[   31.133810] *** SYSTEM_REG_WRITE: reg[0x9a70] = 0x1 (Binary Ninja EXACT) ***
[   31.133817] *** SYSTEM_REG_WRITE: reg[0x9a7c] = 0x1 (Binary Ninja EXACT) ***
[   31.133823] *** SYSTEM_REG_WRITE: reg[0x9a80] = 0x500 (Binary Ninja EXACT) ***
[   31.133829] *** SYSTEM_REG_WRITE: reg[0x9a88] = 0x1 (Binary Ninja EXACT) ***
[   31.133836] *** SYSTEM_REG_WRITE: reg[0x9a94] = 0x1 (Binary Ninja EXACT) ***
[   31.133843] *** SYSTEM_REG_WRITE: reg[0x9a98] = 0x500 (Binary Ninja EXACT) ***
[   31.133849] *** TUNING SYSTEM: VIC control registers 0x9ac0/0x9ac8 REMOVED - not in Binary Ninja reference ***
[   31.133857] tisp_init: CRITICAL FIX - Using ACTUAL sensor image dimensions 1920x1080 (not frame size 1920x1080)
[   31.133863] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   31.133870] *** SYSTEM_REG_WRITE: reg[0x8] = 0x0 (Binary Ninja EXACT) ***
[   31.133877] *** SYSTEM_REG_WRITE: reg[0x1c] = 0x3f08 (Binary Ninja EXACT) ***
[   31.133882] *** tisp_init: ISP control register set to enable processing pipeline ***
[   31.133889] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   31.133895] *** tisp_init: REFERENCE DRIVER format register 0x10 = 0x133 ***
[   31.133901] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   31.133907] *** tisp_init: REFERENCE DRIVER register 0x30 = 0xffffffff ***
[   31.133913] *** SYSTEM_REG_WRITE: reg[0x24] = 0x1 (Binary Ninja EXACT) ***
[   31.133920] *** SYSTEM_REG_WRITE: reg[0x28] = 0x1 (Binary Ninja EXACT) ***
[   31.133925] *** tisp_init: ISP data flow configured (input->processing->output) ***
[   31.133959] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   31.133965] *** tisp_init: STREAMING ACTIVE - Skipping ISP control register write to prevent shutdown ***
[   31.133971] *** tisp_init: VIC streaming detected - keeping ISP controls enabled ***
[   31.133977] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   31.133985] *** tisp_init: REFERENCE DRIVER final configuration - 0x804=0x1c, 0x1c=SKIPPED, 0x800=1 ***
[   31.133992] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   31.133999] *** tisp_init: ISP frame size configured - 1920x1080 (ACTUAL sensor image) ***
[   31.134005] *** SYSTEM_REG_WRITE: reg[0x8] = 0x1 (Binary Ninja EXACT) ***
[   31.134012] *** tisp_init: CRITICAL FIX - Bayer pattern configured: mbus=0x3001 -> pattern=1 (register 8) ***
[   31.134018] *** tisp_init: CONFIGURING RAW10 BAYER PROCESSING PIPELINE ***
[   31.134024] *** SYSTEM_REG_WRITE: reg[0x14] = 0x2b (Binary Ninja EXACT) ***
[   31.134031] *** SYSTEM_REG_WRITE: reg[0x18] = 0xa0a (Binary Ninja EXACT) ***
[   31.134037] *** SYSTEM_REG_WRITE: reg[0x40] = 0x1 (Binary Ninja EXACT) ***
[   31.134044] *** SYSTEM_REG_WRITE: reg[0x44] = 0x1 (Binary Ninja EXACT) ***
[   31.134051] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   31.134057] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x1000000 (Binary Ninja EXACT) ***
[   31.134064] *** SYSTEM_REG_WRITE: reg[0x5006] = 0x100 (Binary Ninja EXACT) ***
[   31.134073] *** SYSTEM_REG_WRITE: reg[0x5008] = 0x0 (Binary Ninja EXACT) ***
[   31.134079] *** SYSTEM_REG_WRITE: reg[0x500a] = 0x1000000 (Binary Ninja EXACT) ***
[   31.134087] *** SYSTEM_REG_WRITE: reg[0x500c] = 0x100 (Binary Ninja EXACT) ***
[   31.134093] *** SYSTEM_REG_WRITE: reg[0x5018] = 0x0 (Binary Ninja EXACT) ***
[   31.134099] *** SYSTEM_REG_WRITE: reg[0x501c] = 0x1 (Binary Ninja EXACT) ***
[   31.134106] *** SYSTEM_REG_WRITE: reg[0x5020] = 0x0 (Binary Ninja EXACT) ***
[   31.134112] *** CRITICAL FIX: CCM configured using EXACT Binary Ninja register addresses ***
[   31.134117] *** CCM registers 0x5004-0x5014 programmed with identity matrix ***
[   31.134123] *** This should eliminate green frames by enabling proper color processing ***
[   31.134129] *** SYSTEM_REG_WRITE: reg[0x200] = 0x4d (Binary Ninja EXACT) ***
[   31.134136] *** SYSTEM_REG_WRITE: reg[0x204] = 0x96 (Binary Ninja EXACT) ***
[   31.134143] *** SYSTEM_REG_WRITE: reg[0x208] = 0x1d (Binary Ninja EXACT) ***
[   31.134149] *** SYSTEM_REG_WRITE: reg[0x20c] = 0x70 (Binary Ninja EXACT) ***
[   31.134156] *** SYSTEM_REG_WRITE: reg[0x210] = 0x5a (Binary Ninja EXACT) ***
[   31.134163] *** SYSTEM_REG_WRITE: reg[0x214] = 0x80 (Binary Ninja EXACT) ***
[   31.134169] *** SYSTEM_REG_WRITE: reg[0x218] = 0x80 (Binary Ninja EXACT) ***
[   31.134175] *** SYSTEM_REG_WRITE: reg[0x21c] = 0x6a (Binary Ninja EXACT) ***
[   31.134182] *** SYSTEM_REG_WRITE: reg[0x220] = 0x16 (Binary Ninja EXACT) ***
[   31.134187] *** CRITICAL FIX: RGB to YUV conversion matrix configured properly ***
[   31.134193] *** tisp_init: RAW10 BAYER PROCESSING PIPELINE CONFIGURED ***
[   31.134198] *** tisp_init: Loading ISP tuning parameters from /etc/sensor/ ***
[   31.134204] *** tisp_init: Standard tuning parameters loaded successfully ***
[   31.134209] *** tisp_init: Custom tuning parameters loaded successfully ***
[   31.134215] tisp_set_csc_version: Setting CSC version 0
[   31.134222] *** SYSTEM_REG_WRITE: reg[0xc] = 0x80700008 (Binary Ninja EXACT) ***
[   31.134229] *** CRITICAL FIX: ISP bypass register set to EXACT reference value 0x80700008 - prevents hardware reset ***
[   31.134234] *** tisp_init: CONFIGURING ISP FOR NV12 OUTPUT FORMAT ***
[   31.134241] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   31.134247] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   31.134253] *** tisp_init: ISP configured for NV12 4:2:0 output format ***
[   31.134258] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   31.134265] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   31.134271] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x0 (Binary Ninja EXACT) ***
[   31.134277] *** tisp_init: ISP-VIC frame synchronization enabled ***
[   31.134283] *** SYSTEM_REG_WRITE: reg[0x6000] = 0x1 (Binary Ninja EXACT) ***
[   31.134289] *** SYSTEM_REG_WRITE: reg[0x6004] = 0x1 (Binary Ninja EXACT) ***
[   31.134295] *** tisp_init: ISP processing pipeline fully enabled ***
[   31.134301] *** SYSTEM_REG_WRITE: reg[0x7000] = 0x1 (Binary Ninja EXACT) ***
[   31.134308] *** SYSTEM_REG_WRITE: reg[0x7004] = 0x1 (Binary Ninja EXACT) ***
d[   31.134313] *** tisp_init: ISP master processing enabled - pipeline should now work ***
[   31.134321] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   31.134327] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   31.134332] tisp_init: ISP memory buffers configured
[   31.134337] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   31.134345] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   31.134353] tiziano_ae_params_refresh: Refreshing AE parameters
[   31.134365] tiziano_ae_params_refresh: AE parameters refreshed
[   31.134371] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   31.134377] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   31.134382] tiziano_ae_para_addr: Setting up AE parameter addresses
[   31.134387] tiziano_ae_para_addr: AE parameter addresses configured
[   31.134393] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   31.134401] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   31.134407] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   31.134415] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   31.134421] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   31.134428] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   31.134435] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   31.134442] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b86e814 (Binary Ninja EXACT) ***
[   31.134449] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   31.134455] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   31.134462] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   31.134469] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   31.134475] tiziano_ae_set_hardware_param: Parameters written to AE0
[   31.134481] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   31.134487] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   31.134494] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   31.134501] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   31.134507] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   31.134513] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   31.134520] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   31.134527] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   31.134533] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   31.134539] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   31.134546] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   31.134553] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   31.134559] tiziano_ae_set_hardware_param: Parameters written to AE1
[   31.134564] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   31.134572] *** system_irq_func_set: Registered handler c06869fc at index 10 ***
[   31.151269] *** system_irq_func_set: Registered handler c0686af0 at index 27 ***
[   31.168355] *** system_irq_func_set: Registered handler c06869fc at index 26 ***
[   31.183875] *** system_irq_func_set: Registered handler c0686bd8 at index 29 ***
[   31.201275] *** system_irq_func_set: Registered handler c0686b64 at index 28 ***
[   31.219091] *** system_irq_func_set: Registered handler c0686c4c at index 30 ***
[   31.232904] *** system_irq_func_set: Registered handler c0686ca0 at index 20 ***
[   31.250835] *** system_irq_func_set: Registered handler c0686cf4 at index 18 ***
[   31.265797] *** system_irq_func_set: Registered handler c0686d48 at index 31 ***
[   31.282418] *** system_irq_func_set: Registered handler c0686d9c at index 11 ***
m[   31.300261] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   31.300283] tiziano_deflicker_expt: Generated 119 LUT entries
[   31.300290] tisp_event_set_cb: Setting callback for event 1
[   31.300297] tisp_event_set_cb: Event 1 callback set to c06865fc
[   31.300303] tisp_event_set_cb: Setting callback for event 6
[   31.300309] tisp_event_set_cb: Event 6 callback set to c0685b5c
[   31.300315] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   31.300321] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   31.300328] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   31.300335] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   31.300342] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   31.300347] tiziano_awb_init: AWB hardware blocks enabled
[   31.300353] tiziano_gamma_init: Initializing Gamma processing
[   31.300358] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   31.300383] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   31.300389] tiziano_gib_init: Initializing GIB processing
[   31.300394] tiziano_lsc_init: Initializing LSC processing
[   31.300399] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   31.300405] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   31.300412] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   31.300419] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   31.300424] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   31.300459] tiziano_ccm_init: Initializing Color Correction Matrix
[   31.300465] tiziano_ccm_init: Using linear CCM parameters
[   31.300471] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   31.300477] jz_isp_ccm: EV=64, CT=9984
[   31.300483] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   31.300489] cm_control: saturation=128
[   31.300494] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   31.300500] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   31.300505] tiziano_ccm_init: CCM initialized successfully
[   31.300510] tiziano_dmsc_init: Initializing DMSC processing
[   31.300515] tiziano_sharpen_init: Initializing Sharpening
[   31.300521] tiziano_sharpen_init: Using linear sharpening parameters
[   31.300526] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   31.300533] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   31.300539] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   31.300553] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   31.300559] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   31.300565] tiziano_sharpen_init: Sharpening initialized successfully
[   31.300570] tiziano_sdns_init: Initializing SDNS processing
[   31.300578] tiziano_sdns_init: Using linear SDNS parameters
[   31.300583] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   31.300590] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   31.300595] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   31.300612] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   31.300619] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   31.300624] tiziano_sdns_init: SDNS processing initialized successfully
[   31.300630] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   31.300635] tiziano_mdns_init: Using linear MDNS parameters
[   31.300643] tiziano_mdns_init: MDNS processing initialized successfully
[   31.300648] tiziano_clm_init: Initializing CLM processing
[   31.300653] tiziano_dpc_init: Initializing DPC processing
[   31.300659] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   31.300665] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   31.300671] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   31.300677] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   31.300686] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   31.300693] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   31.300698] tiziano_hldc_init: Initializing HLDC processing
[   31.300704] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   31.300711] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.300717] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.300724] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.300731] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.300738] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.300745] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.300751] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.300758] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.300765] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.300772] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.300779] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.300785] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.300791] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.300797] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.300802] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.300809] tisp_adr_set_params: Writing ADR parameters to registers
[   31.300824] tisp_adr_set_params: ADR parameters written to hardware
[   31.300829] tisp_event_set_cb: Setting callback for event 18
[   31.300836] tisp_event_set_cb: Event 18 callback set to c0686cf4
[   31.300841] tisp_event_set_cb: Setting callback for event 2
[   31.300848] tisp_event_set_cb: Event 2 callback set to c06857f8
[   31.300853] tiziano_adr_init: ADR processing initialized successfully
[   31.300859] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.300865] tiziano_bcsh_init: Initializing BCSH processing
[   31.300870] tiziano_ydns_init: Initializing YDNS processing
[   31.300875] tiziano_rdns_init: Initializing RDNS processing
[   31.300880] *** tisp_init: ALLOCATING ISP PROCESSING BUFFERS ***
[   31.300893] *** SYSTEM_REG_WRITE: reg[0xa02c] = 0x580000 (Binary Ninja EXACT) ***
[   31.300900] *** SYSTEM_REG_WRITE: reg[0xa030] = 0x581000 (Binary Ninja EXACT) ***
[   31.300907] *** SYSTEM_REG_WRITE: reg[0xa034] = 0x582000 (Binary Ninja EXACT) ***
[   31.300914] *** SYSTEM_REG_WRITE: reg[0xa038] = 0x583000 (Binary Ninja EXACT) ***
[   31.300921] *** SYSTEM_REG_WRITE: reg[0xa03c] = 0x584000 (Binary Ninja EXACT) ***
[   31.300927] *** SYSTEM_REG_WRITE: reg[0xa040] = 0x584800 (Binary Ninja EXACT) ***
[   31.300934] *** SYSTEM_REG_WRITE: reg[0xa044] = 0x585000 (Binary Ninja EXACT) ***
[   31.300941] *** SYSTEM_REG_WRITE: reg[0xa048] = 0x585800 (Binary Ninja EXACT) ***
[   31.300948] *** SYSTEM_REG_WRITE: reg[0xa04c] = 0x33 (Binary Ninja EXACT) ***
[   31.300954] *** tisp_init: AE0 buffer allocated at 0x00580000 ***
[   31.300960] *** CRITICAL FIX: data_b2f3c initialized to 0x80580000 (prevents stack corruption) ***
[   31.300969] *** SYSTEM_REG_WRITE: reg[0xa82c] = 0x590000 (Binary Ninja EXACT) ***
[   31.300975] *** SYSTEM_REG_WRITE: reg[0xa830] = 0x591000 (Binary Ninja EXACT) ***
[   31.300982] *** SYSTEM_REG_WRITE: reg[0xa834] = 0x592000 (Binary Ninja EXACT) ***
[   31.300989] *** SYSTEM_REG_WRITE: reg[0xa838] = 0x593000 (Binary Ninja EXACT) ***
[   31.300996] *** SYSTEM_REG_WRITE: reg[0xa83c] = 0x594000 (Binary Ninja EXACT) ***
[   31.301003] *** SYSTEM_REG_WRITE: reg[0xa840] = 0x594800 (Binary Ninja EXACT) ***
[   31.301009] *** SYSTEM_REG_WRITE: reg[0xa844] = 0x595000 (Binary Ninja EXACT) ***
[   31.301017] *** SYSTEM_REG_WRITE: reg[0xa848] = 0x595800 (Binary Ninja EXACT) ***
[   31.301023] *** SYSTEM_REG_WRITE: reg[0xa84c] = 0x33 (Binary Ninja EXACT) ***
[   31.301029] *** tisp_init: AE1 buffer allocated at 0x00590000 ***
[   31.301034] *** tisp_init: FINAL REGISTER SEQUENCE ***
[   31.301041] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   31.301046] *** tisp_init: STREAMING ACTIVE - Skipping second ISP control register write ***
[   31.301053] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   31.301058] *** tisp_init: INITIALIZING ISP SUB-MODULES ***
[   31.301065] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   31.301073] tiziano_ae_params_refresh: Refreshing AE parameters
[   31.301083] tiziano_ae_params_refresh: AE parameters refreshed
[   31.301089] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   31.301095] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   31.301101] tiziano_ae_para_addr: Setting up AE parameter addresses
[   31.301105] tiziano_ae_para_addr: AE parameter addresses configured
[   31.301112] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   31.301119] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   31.301126] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   31.301133] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   31.301140] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   31.301147] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   31.301153] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   31.301160] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b86e814 (Binary Ninja EXACT) ***
[   31.301167] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   31.301174] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   31.301181] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   31.301187] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   31.301193] tiziano_ae_set_hardware_param: Parameters written to AE0
[   31.301199] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   31.301205] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   31.301212] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   31.301219] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   31.301225] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   31.301232] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   31.301297] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   31.301306] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   31.301313] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   31.301319] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   31.301325] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   31.301332] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   31.301338] tiziano_ae_set_hardware_param: Parameters written to AE1
[   31.301343] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   31.301351] *** system_irq_func_set: Registered handler c06869fc at index 10 ***
[   31.308990] *** system_irq_func_set: Registered handler c0686af0 at index 27 ***
[   31.332143] *** system_irq_func_set: Registered handler c06869fc at index 26 ***
root@ing-wyze-cam3-a000 ~# dmesg 
[   30.601362] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   30.601370] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   30.601376] *** VIC REGISTER CONFIG: Writing VIC configuration registers (vic_start_ok=0) ***
[   30.601384] *** VIC REGISTER CONFIG: VIC configuration registers written (0xc=2, 0x10=0x07800438, 0x14=3840) ***
[   30.601392] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   30.601398] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   30.601404] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   30.601410] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   30.601416] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   30.601422] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   30.601428] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   30.601434] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   30.601440] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   30.601445] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   30.601452] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000001 (expect 0xb5742249) ***
[   30.601457] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   30.601463] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   30.601470] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   30.601475] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   30.601481] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   30.601487] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   30.601494] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   30.601499] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   30.601508] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   30.601514] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   30.601520] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   30.601528] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   30.601533] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   30.601539] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   30.601544] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   30.601550] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   30.601557] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   30.601563] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.601571] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   30.601577] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   30.601583] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   30.601589] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   30.601596] ispvic_frame_channel_s_stream: arg1=85ffc400, arg2=1
[   30.601602] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85ffc400
[   30.601608] ispvic_frame_channel_s_stream[2441]: streamon
[   30.601614] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   30.601620] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   30.601626] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   30.601632] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   30.601637] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   30.601644] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   30.601650] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   30.601657] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   30.601663] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   30.601669] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   30.601674] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   30.601680] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   30.601686] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   30.601694] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   30.601701] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   30.601708] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   30.601716] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   30.601724] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   30.601730] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   30.601735] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   30.601741] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   30.601748] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   30.601754] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   30.601760] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   30.601765] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.601771] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   30.601776] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   30.601788] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   30.601796] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   30.601860] *** VIC VERIFY (CONTROL): [0x0]=0x3130322a [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000630 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   30.601870] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.601876] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   30.601885] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.601892] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   30.601897] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   30.601903] *** VIC CONTROL BANK: Post-enable [0x0]=0x3130322a ***
[   30.601910] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   30.602916] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   30.602922] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   30.602928] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   30.603034] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.603142] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.603149] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   30.603154] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   30.603160] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.603166] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.603172] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.603179] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.603185] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.603190] *** tx_vic_enable_irq: completed successfully ***
[   31.115237] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   31.115250] *** vic_core_s_stream: VIC state transition 3 → 4 (STREAMING) ***
[   31.115255] *** VIC STATE 4: Calling ispcore_slake_module to initialize ISP core ***
[   31.115262] *** ispcore_slake_module: EXACT Binary Ninja MCP implementation ***
[   31.115269] ispcore_slake_module: VIC device=85ffc400, state=4ispcore_slake_module: ISP state >= 3, calling ispcore_core_ops_init
[   31.115278] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.115287] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   31.115294] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   31.115299] ispcore_slake_module: Using sensor attributes from connected sensor
[   31.115306] *** ispcore_core_ops_init_with_sensor: GOOD-THINGS approach - isp=84724000, sensor_attr=c06e20cc ****** ispcore_core_ops_init_with_sensor: Calling tisp_init with sensor parameters (good-things approach) ***
[   31.115315] *** This will configure MIPI CSI lanes and enable proper interrupt flow ****** ispcore_core_ops_init_with_sensor: Calling tisp_init(&sensor_params, "gc2053") ***
[   31.115324] *** tisp_init: IMPLEMENTING MISSING HARDWARE REGISTER INITIALIZATION ***
[   31.115329] *** THIS FUNCTION CONTAINS ALL THE system_reg_write CALLS FROM REFERENCE ***
[   31.115336] *** tisp_init: Invalid sensor dimensions 1x0, using defaults 1920x1080 ***
[   31.115343] *** tisp_init: FIXED - Extracted dimensions from sensor_attr: 1920x1080 ***
[   31.115349] tisp_init: Initializing ISP hardware for sensor (1920x1080)
[   31.115355] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   31.115360] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   31.115365] tisp_event_init: Initializing ISP event system
[   31.115373] tisp_event_init: SAFE event system initialized with 20 nodes
[   31.115379] tisp_event_set_cb: Setting callback for event 4
[   31.115385] tisp_event_set_cb: Event 4 callback set to c0685824
[   31.115391] tisp_event_set_cb: Setting callback for event 5
[   31.115397] tisp_event_set_cb: Event 5 callback set to c0685cec
[   31.115403] tisp_event_set_cb: Setting callback for event 7
[   31.115409] tisp_event_set_cb: Event 7 callback set to c06858b8
[   31.115415] tisp_event_set_cb: Setting callback for event 9
[   31.115421] tisp_event_set_cb: Event 9 callback set to c0685940
[   31.115427] tisp_event_set_cb: Setting callback for event 8
[   31.115433] tisp_event_set_cb: Event 8 callback set to c0685a04
[   31.115439] *** system_irq_func_set: Registered handler c067e790 at index 13 ***
[   31.133553] *** WRITING ISP CORE CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   31.133568] *** SYSTEM_REG_WRITE: reg[0xb004] = 0xf001f001 (Binary Ninja EXACT) ***
[   31.133575] *** SYSTEM_REG_WRITE: reg[0xb008] = 0x40404040 (Binary Ninja EXACT) ***
[   31.133583] *** SYSTEM_REG_WRITE: reg[0xb00c] = 0x40404040 (Binary Ninja EXACT) ***
[   31.133589] *** SYSTEM_REG_WRITE: reg[0xb010] = 0x40404040 (Binary Ninja EXACT) ***
[   31.133596] *** SYSTEM_REG_WRITE: reg[0xb014] = 0x404040 (Binary Ninja EXACT) ***
[   31.133603] system_reg_write: BLOCKED core-control reg[0xb018]=0x40404040 during streaming (preserve interrupts)
[   31.133611] system_reg_write: BLOCKED core-control reg[0xb01c]=0x40404040 during streaming (preserve interrupts)
[   31.133618] system_reg_write: BLOCKED core-control reg[0xb020]=0x40404040 during streaming (preserve interrupts)
[   31.133626] system_reg_write: BLOCKED core-control reg[0xb024]=0x404040 during streaming (preserve interrupts)
[   31.133633] *** SYSTEM_REG_WRITE: reg[0xb028] = 0x1000080 (Binary Ninja EXACT) ***
[   31.133639] *** SYSTEM_REG_WRITE: reg[0xb02c] = 0x1000080 (Binary Ninja EXACT) ***
[   31.133646] *** SYSTEM_REG_WRITE: reg[0xb030] = 0x100 (Binary Ninja EXACT) ***
[   31.133653] *** SYSTEM_REG_WRITE: reg[0xb034] = 0xffff0100 (Binary Ninja EXACT) ***
[   31.133660] *** SYSTEM_REG_WRITE: reg[0xb038] = 0x1ff00 (Binary Ninja EXACT) ***
[   31.133667] *** SYSTEM_REG_WRITE: reg[0xb04c] = 0x103 (Binary Ninja EXACT) ***
[   31.133673] *** SYSTEM_REG_WRITE: reg[0xb050] = 0x3 (Binary Ninja EXACT) ***
[   31.133679] *** WRITING CRITICAL VARYING REGISTERS - USING EXACT REFERENCE VALUES ***
[   31.133685] *** SYSTEM_REG_WRITE: reg[0xb07c] = 0x341b (Binary Ninja EXACT) ***
[   31.133692] *** SYSTEM_REG_WRITE: reg[0xb080] = 0x46b0 (Binary Ninja EXACT) ***
[   31.133699] *** SYSTEM_REG_WRITE: reg[0xb084] = 0x1813 (Binary Ninja EXACT) ***
[   31.133705] *** SYSTEM_REG_WRITE: reg[0xb08c] = 0x10a (Binary Ninja EXACT) ***
[   31.133711] *** ISP CORE CONTROL REGISTERS WRITTEN - NOW MATCHES REFERENCE DRIVER ***
[   31.133717] *** WRITING ISP CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   31.133723] system_reg_write: BLOCKED reg[0x9804]=0x3f00 during streaming to protect interrupts
[   31.133730] *** SYSTEM_REG_WRITE: reg[0x9864] = 0x7800438 (Binary Ninja EXACT) ***
[   31.133737] *** SYSTEM_REG_WRITE: reg[0x987c] = 0xc0000000 (Binary Ninja EXACT) ***
[   31.133744] *** SYSTEM_REG_WRITE: reg[0x9880] = 0x1 (Binary Ninja EXACT) ***
[   31.133750] *** SYSTEM_REG_WRITE: reg[0x9884] = 0x1 (Binary Ninja EXACT) ***
[   31.133757] *** SYSTEM_REG_WRITE: reg[0x9890] = 0x1010001 (Binary Ninja EXACT) ***
[   31.133764] *** SYSTEM_REG_WRITE: reg[0x989c] = 0x1010001 (Binary Ninja EXACT) ***
[   31.133771] *** SYSTEM_REG_WRITE: reg[0x98a8] = 0x1010001 (Binary Ninja EXACT) ***
[   31.133776] *** WRITING VIC CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   31.133783] *** SYSTEM_REG_WRITE: reg[0x9a00] = 0x50002d0 (Binary Ninja EXACT) ***
[   31.133790] *** SYSTEM_REG_WRITE: reg[0x9a04] = 0x3000300 (Binary Ninja EXACT) ***
[   31.133797] *** SYSTEM_REG_WRITE: reg[0x9a2c] = 0x50002d0 (Binary Ninja EXACT) ***
[   31.133803] *** SYSTEM_REG_WRITE: reg[0x9a34] = 0x1 (Binary Ninja EXACT) ***
[   31.133810] *** SYSTEM_REG_WRITE: reg[0x9a70] = 0x1 (Binary Ninja EXACT) ***
[   31.133817] *** SYSTEM_REG_WRITE: reg[0x9a7c] = 0x1 (Binary Ninja EXACT) ***
[   31.133823] *** SYSTEM_REG_WRITE: reg[0x9a80] = 0x500 (Binary Ninja EXACT) ***
[   31.133829] *** SYSTEM_REG_WRITE: reg[0x9a88] = 0x1 (Binary Ninja EXACT) ***
[   31.133836] *** SYSTEM_REG_WRITE: reg[0x9a94] = 0x1 (Binary Ninja EXACT) ***
[   31.133843] *** SYSTEM_REG_WRITE: reg[0x9a98] = 0x500 (Binary Ninja EXACT) ***
[   31.133849] *** TUNING SYSTEM: VIC control registers 0x9ac0/0x9ac8 REMOVED - not in Binary Ninja reference ***
[   31.133857] tisp_init: CRITICAL FIX - Using ACTUAL sensor image dimensions 1920x1080 (not frame size 1920x1080)
[   31.133863] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   31.133870] *** SYSTEM_REG_WRITE: reg[0x8] = 0x0 (Binary Ninja EXACT) ***
[   31.133877] *** SYSTEM_REG_WRITE: reg[0x1c] = 0x3f08 (Binary Ninja EXACT) ***
[   31.133882] *** tisp_init: ISP control register set to enable processing pipeline ***
[   31.133889] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   31.133895] *** tisp_init: REFERENCE DRIVER format register 0x10 = 0x133 ***
[   31.133901] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   31.133907] *** tisp_init: REFERENCE DRIVER register 0x30 = 0xffffffff ***
[   31.133913] *** SYSTEM_REG_WRITE: reg[0x24] = 0x1 (Binary Ninja EXACT) ***
[   31.133920] *** SYSTEM_REG_WRITE: reg[0x28] = 0x1 (Binary Ninja EXACT) ***
[   31.133925] *** tisp_init: ISP data flow configured (input->processing->output) ***
[   31.133959] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   31.133965] *** tisp_init: STREAMING ACTIVE - Skipping ISP control register write to prevent shutdown ***
[   31.133971] *** tisp_init: VIC streaming detected - keeping ISP controls enabled ***
[   31.133977] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   31.133985] *** tisp_init: REFERENCE DRIVER final configuration - 0x804=0x1c, 0x1c=SKIPPED, 0x800=1 ***
[   31.133992] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   31.133999] *** tisp_init: ISP frame size configured - 1920x1080 (ACTUAL sensor image) ***
[   31.134005] *** SYSTEM_REG_WRITE: reg[0x8] = 0x1 (Binary Ninja EXACT) ***
[   31.134012] *** tisp_init: CRITICAL FIX - Bayer pattern configured: mbus=0x3001 -> pattern=1 (register 8) ***
[   31.134018] *** tisp_init: CONFIGURING RAW10 BAYER PROCESSING PIPELINE ***
[   31.134024] *** SYSTEM_REG_WRITE: reg[0x14] = 0x2b (Binary Ninja EXACT) ***
[   31.134031] *** SYSTEM_REG_WRITE: reg[0x18] = 0xa0a (Binary Ninja EXACT) ***
[   31.134037] *** SYSTEM_REG_WRITE: reg[0x40] = 0x1 (Binary Ninja EXACT) ***
[   31.134044] *** SYSTEM_REG_WRITE: reg[0x44] = 0x1 (Binary Ninja EXACT) ***
[   31.134051] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   31.134057] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x1000000 (Binary Ninja EXACT) ***
[   31.134064] *** SYSTEM_REG_WRITE: reg[0x5006] = 0x100 (Binary Ninja EXACT) ***
[   31.134073] *** SYSTEM_REG_WRITE: reg[0x5008] = 0x0 (Binary Ninja EXACT) ***
[   31.134079] *** SYSTEM_REG_WRITE: reg[0x500a] = 0x1000000 (Binary Ninja EXACT) ***
[   31.134087] *** SYSTEM_REG_WRITE: reg[0x500c] = 0x100 (Binary Ninja EXACT) ***
[   31.134093] *** SYSTEM_REG_WRITE: reg[0x5018] = 0x0 (Binary Ninja EXACT) ***
[   31.134099] *** SYSTEM_REG_WRITE: reg[0x501c] = 0x1 (Binary Ninja EXACT) ***
[   31.134106] *** SYSTEM_REG_WRITE: reg[0x5020] = 0x0 (Binary Ninja EXACT) ***
[   31.134112] *** CRITICAL FIX: CCM configured using EXACT Binary Ninja register addresses ***
[   31.134117] *** CCM registers 0x5004-0x5014 programmed with identity matrix ***
[   31.134123] *** This should eliminate green frames by enabling proper color processing ***
[   31.134129] *** SYSTEM_REG_WRITE: reg[0x200] = 0x4d (Binary Ninja EXACT) ***
[   31.134136] *** SYSTEM_REG_WRITE: reg[0x204] = 0x96 (Binary Ninja EXACT) ***
[   31.134143] *** SYSTEM_REG_WRITE: reg[0x208] = 0x1d (Binary Ninja EXACT) ***
[   31.134149] *** SYSTEM_REG_WRITE: reg[0x20c] = 0x70 (Binary Ninja EXACT) ***
[   31.134156] *** SYSTEM_REG_WRITE: reg[0x210] = 0x5a (Binary Ninja EXACT) ***
[   31.134163] *** SYSTEM_REG_WRITE: reg[0x214] = 0x80 (Binary Ninja EXACT) ***
[   31.134169] *** SYSTEM_REG_WRITE: reg[0x218] = 0x80 (Binary Ninja EXACT) ***
[   31.134175] *** SYSTEM_REG_WRITE: reg[0x21c] = 0x6a (Binary Ninja EXACT) ***
[   31.134182] *** SYSTEM_REG_WRITE: reg[0x220] = 0x16 (Binary Ninja EXACT) ***
[   31.134187] *** CRITICAL FIX: RGB to YUV conversion matrix configured properly ***
[   31.134193] *** tisp_init: RAW10 BAYER PROCESSING PIPELINE CONFIGURED ***
[   31.134198] *** tisp_init: Loading ISP tuning parameters from /etc/sensor/ ***
[   31.134204] *** tisp_init: Standard tuning parameters loaded successfully ***
[   31.134209] *** tisp_init: Custom tuning parameters loaded successfully ***
[   31.134215] tisp_set_csc_version: Setting CSC version 0
[   31.134222] *** SYSTEM_REG_WRITE: reg[0xc] = 0x80700008 (Binary Ninja EXACT) ***
[   31.134229] *** CRITICAL FIX: ISP bypass register set to EXACT reference value 0x80700008 - prevents hardware reset ***
[   31.134234] *** tisp_init: CONFIGURING ISP FOR NV12 OUTPUT FORMAT ***
[   31.134241] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   31.134247] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   31.134253] *** tisp_init: ISP configured for NV12 4:2:0 output format ***
[   31.134258] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   31.134265] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   31.134271] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x0 (Binary Ninja EXACT) ***
[   31.134277] *** tisp_init: ISP-VIC frame synchronization enabled ***
[   31.134283] *** SYSTEM_REG_WRITE: reg[0x6000] = 0x1 (Binary Ninja EXACT) ***
[   31.134289] *** SYSTEM_REG_WRITE: reg[0x6004] = 0x1 (Binary Ninja EXACT) ***
[   31.134295] *** tisp_init: ISP processing pipeline fully enabled ***
[   31.134301] *** SYSTEM_REG_WRITE: reg[0x7000] = 0x1 (Binary Ninja EXACT) ***
[   31.134308] *** SYSTEM_REG_WRITE: reg[0x7004] = 0x1 (Binary Ninja EXACT) ***
[   31.134313] *** tisp_init: ISP master processing enabled - pipeline should now work ***
[   31.134321] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   31.134327] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   31.134332] tisp_init: ISP memory buffers configured
[   31.134337] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   31.134345] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   31.134353] tiziano_ae_params_refresh: Refreshing AE parameters
[   31.134365] tiziano_ae_params_refresh: AE parameters refreshed
[   31.134371] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   31.134377] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   31.134382] tiziano_ae_para_addr: Setting up AE parameter addresses
[   31.134387] tiziano_ae_para_addr: AE parameter addresses configured
[   31.134393] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   31.134401] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   31.134407] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   31.134415] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   31.134421] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   31.134428] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   31.134435] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   31.134442] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b86e814 (Binary Ninja EXACT) ***
[   31.134449] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   31.134455] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   31.134462] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   31.134469] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   31.134475] tiziano_ae_set_hardware_param: Parameters written to AE0
[   31.134481] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   31.134487] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   31.134494] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   31.134501] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   31.134507] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   31.134513] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   31.134520] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   31.134527] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   31.134533] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   31.134539] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   31.134546] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   31.134553] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   31.134559] tiziano_ae_set_hardware_param: Parameters written to AE1
[   31.134564] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   31.134572] *** system_irq_func_set: Registered handler c06869fc at index 10 ***
[   31.151269] *** system_irq_func_set: Registered handler c0686af0 at index 27 ***
[   31.168355] *** system_irq_func_set: Registered handler c06869fc at index 26 ***
[   31.183875] *** system_irq_func_set: Registered handler c0686bd8 at index 29 ***
[   31.201275] *** system_irq_func_set: Registered handler c0686b64 at index 28 ***
[   31.219091] *** system_irq_func_set: Registered handler c0686c4c at index 30 ***
[   31.232904] *** system_irq_func_set: Registered handler c0686ca0 at index 20 ***
[   31.250835] *** system_irq_func_set: Registered handler c0686cf4 at index 18 ***
[   31.265797] *** system_irq_func_set: Registered handler c0686d48 at index 31 ***
[   31.282418] *** system_irq_func_set: Registered handler c0686d9c at index 11 ***
[   31.300261] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   31.300283] tiziano_deflicker_expt: Generated 119 LUT entries
[   31.300290] tisp_event_set_cb: Setting callback for event 1
[   31.300297] tisp_event_set_cb: Event 1 callback set to c06865fc
[   31.300303] tisp_event_set_cb: Setting callback for event 6
[   31.300309] tisp_event_set_cb: Event 6 callback set to c0685b5c
[   31.300315] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   31.300321] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   31.300328] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   31.300335] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   31.300342] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   31.300347] tiziano_awb_init: AWB hardware blocks enabled
[   31.300353] tiziano_gamma_init: Initializing Gamma processing
[   31.300358] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   31.300383] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   31.300389] tiziano_gib_init: Initializing GIB processing
[   31.300394] tiziano_lsc_init: Initializing LSC processing
[   31.300399] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   31.300405] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   31.300412] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   31.300419] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   31.300424] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   31.300459] tiziano_ccm_init: Initializing Color Correction Matrix
[   31.300465] tiziano_ccm_init: Using linear CCM parameters
[   31.300471] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   31.300477] jz_isp_ccm: EV=64, CT=9984
[   31.300483] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   31.300489] cm_control: saturation=128
[   31.300494] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   31.300500] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   31.300505] tiziano_ccm_init: CCM initialized successfully
[   31.300510] tiziano_dmsc_init: Initializing DMSC processing
[   31.300515] tiziano_sharpen_init: Initializing Sharpening
[   31.300521] tiziano_sharpen_init: Using linear sharpening parameters
[   31.300526] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   31.300533] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   31.300539] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   31.300553] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   31.300559] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   31.300565] tiziano_sharpen_init: Sharpening initialized successfully
[   31.300570] tiziano_sdns_init: Initializing SDNS processing
[   31.300578] tiziano_sdns_init: Using linear SDNS parameters
[   31.300583] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   31.300590] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   31.300595] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   31.300612] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   31.300619] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   31.300624] tiziano_sdns_init: SDNS processing initialized successfully
[   31.300630] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   31.300635] tiziano_mdns_init: Using linear MDNS parameters
[   31.300643] tiziano_mdns_init: MDNS processing initialized successfully
[   31.300648] tiziano_clm_init: Initializing CLM processing
[   31.300653] tiziano_dpc_init: Initializing DPC processing
[   31.300659] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   31.300665] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   31.300671] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   31.300677] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   31.300686] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   31.300693] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   31.300698] tiziano_hldc_init: Initializing HLDC processing
[   31.300704] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   31.300711] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.300717] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.300724] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.300731] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.300738] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.300745] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.300751] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.300758] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.300765] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.300772] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.300779] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.300785] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.300791] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.300797] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.300802] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.300809] tisp_adr_set_params: Writing ADR parameters to registers
[   31.300824] tisp_adr_set_params: ADR parameters written to hardware
[   31.300829] tisp_event_set_cb: Setting callback for event 18
[   31.300836] tisp_event_set_cb: Event 18 callback set to c0686cf4
[   31.300841] tisp_event_set_cb: Setting callback for event 2
[   31.300848] tisp_event_set_cb: Event 2 callback set to c06857f8
[   31.300853] tiziano_adr_init: ADR processing initialized successfully
[   31.300859] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.300865] tiziano_bcsh_init: Initializing BCSH processing
[   31.300870] tiziano_ydns_init: Initializing YDNS processing
[   31.300875] tiziano_rdns_init: Initializing RDNS processing
[   31.300880] *** tisp_init: ALLOCATING ISP PROCESSING BUFFERS ***
[   31.300893] *** SYSTEM_REG_WRITE: reg[0xa02c] = 0x580000 (Binary Ninja EXACT) ***
[   31.300900] *** SYSTEM_REG_WRITE: reg[0xa030] = 0x581000 (Binary Ninja EXACT) ***
[   31.300907] *** SYSTEM_REG_WRITE: reg[0xa034] = 0x582000 (Binary Ninja EXACT) ***
[   31.300914] *** SYSTEM_REG_WRITE: reg[0xa038] = 0x583000 (Binary Ninja EXACT) ***
[   31.300921] *** SYSTEM_REG_WRITE: reg[0xa03c] = 0x584000 (Binary Ninja EXACT) ***
[   31.300927] *** SYSTEM_REG_WRITE: reg[0xa040] = 0x584800 (Binary Ninja EXACT) ***
[   31.300934] *** SYSTEM_REG_WRITE: reg[0xa044] = 0x585000 (Binary Ninja EXACT) ***
[   31.300941] *** SYSTEM_REG_WRITE: reg[0xa048] = 0x585800 (Binary Ninja EXACT) ***
[   31.300948] *** SYSTEM_REG_WRITE: reg[0xa04c] = 0x33 (Binary Ninja EXACT) ***
[   31.300954] *** tisp_init: AE0 buffer allocated at 0x00580000 ***
[   31.300960] *** CRITICAL FIX: data_b2f3c initialized to 0x80580000 (prevents stack corruption) ***
[   31.300969] *** SYSTEM_REG_WRITE: reg[0xa82c] = 0x590000 (Binary Ninja EXACT) ***
[   31.300975] *** SYSTEM_REG_WRITE: reg[0xa830] = 0x591000 (Binary Ninja EXACT) ***
[   31.300982] *** SYSTEM_REG_WRITE: reg[0xa834] = 0x592000 (Binary Ninja EXACT) ***
[   31.300989] *** SYSTEM_REG_WRITE: reg[0xa838] = 0x593000 (Binary Ninja EXACT) ***
[   31.300996] *** SYSTEM_REG_WRITE: reg[0xa83c] = 0x594000 (Binary Ninja EXACT) ***
[   31.301003] *** SYSTEM_REG_WRITE: reg[0xa840] = 0x594800 (Binary Ninja EXACT) ***
[   31.301009] *** SYSTEM_REG_WRITE: reg[0xa844] = 0x595000 (Binary Ninja EXACT) ***
[   31.301017] *** SYSTEM_REG_WRITE: reg[0xa848] = 0x595800 (Binary Ninja EXACT) ***
[   31.301023] *** SYSTEM_REG_WRITE: reg[0xa84c] = 0x33 (Binary Ninja EXACT) ***
[   31.301029] *** tisp_init: AE1 buffer allocated at 0x00590000 ***
[   31.301034] *** tisp_init: FINAL REGISTER SEQUENCE ***
[   31.301041] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   31.301046] *** tisp_init: STREAMING ACTIVE - Skipping second ISP control register write ***
[   31.301053] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   31.301058] *** tisp_init: INITIALIZING ISP SUB-MODULES ***
[   31.301065] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   31.301073] tiziano_ae_params_refresh: Refreshing AE parameters
[   31.301083] tiziano_ae_params_refresh: AE parameters refreshed
[   31.301089] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   31.301095] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   31.301101] tiziano_ae_para_addr: Setting up AE parameter addresses
[   31.301105] tiziano_ae_para_addr: AE parameter addresses configured
[   31.301112] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   31.301119] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   31.301126] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   31.301133] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   31.301140] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   31.301147] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   31.301153] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   31.301160] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b86e814 (Binary Ninja EXACT) ***
[   31.301167] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   31.301174] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   31.301181] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   31.301187] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   31.301193] tiziano_ae_set_hardware_param: Parameters written to AE0
[   31.301199] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   31.301205] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   31.301212] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   31.301219] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   31.301225] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   31.301232] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   31.301297] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   31.301306] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   31.301313] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   31.301319] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   31.301325] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   31.301332] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   31.301338] tiziano_ae_set_hardware_param: Parameters written to AE1
[   31.301343] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   31.301351] *** system_irq_func_set: Registered handler c06869fc at index 10 ***
[   31.308990] *** system_irq_func_set: Registered handler c0686af0 at index 27 ***
[   31.332143] *** system_irq_func_set: Registered handler c06869fc at index 26 ***
[   31.356986] *** system_irq_func_set: Registered handler c0686bd8 at index 29 ***
[   31.374836] *** system_irq_func_set: Registered handler c0686b64 at index 28 ***
[   31.388742] *** system_irq_func_set: Registered handler c0686c4c at index 30 ***
[   31.406585] *** system_irq_func_set: Registered handler c0686ca0 at index 20 ***
[   31.421292] *** system_irq_func_set: Registered handler c0686cf4 at index 18 ***
[   31.438229] *** system_irq_func_set: Registered handler c0686d48 at index 31 ***
[   31.456086] *** system_irq_func_set: Registered handler c0686d9c at index 11 ***
[   31.470562] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   31.470585] tiziano_deflicker_expt: Generated 119 LUT entries
[   31.470592] tisp_event_set_cb: Setting callback for event 1
[   31.470599] tisp_event_set_cb: Event 1 callback set to c06865fc
[   31.470604] tisp_event_set_cb: Setting callback for event 6
[   31.470611] tisp_event_set_cb: Event 6 callback set to c0685b5c
[   31.470616] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   31.470622] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   31.470737] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   31.470746] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   31.470753] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   31.470758] tiziano_awb_init: AWB hardware blocks enabled
[   31.470764] tiziano_gamma_init: Initializing Gamma processing
[   31.470769] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   31.470794] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   31.470800] tiziano_gib_init: Initializing GIB processing
[   31.470805] tiziano_lsc_init: Initializing LSC processing
[   31.470810] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   31.470816] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   31.470823] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   31.470830] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   31.470835] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   31.470871] tiziano_ccm_init: Initializing Color Correction Matrix
[   31.470876] tiziano_ccm_init: Using linear CCM parameters
[   31.470882] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   31.470888] jz_isp_ccm: EV=64, CT=9984
[   31.470895] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   31.470900] cm_control: saturation=128
[   31.470906] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   31.470911] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   31.470916] tiziano_ccm_init: CCM initialized successfully
[   31.470922] tiziano_dmsc_init: Initializing DMSC processing
[   31.470927] tiziano_sharpen_init: Initializing Sharpening
[   31.470932] tiziano_sharpen_init: Using linear sharpening parameters
[   31.470938] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   31.470944] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   31.470950] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   31.470964] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   31.470970] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   31.470976] tiziano_sharpen_init: Sharpening initialized successfully
[   31.470981] tiziano_sdns_init: Initializing SDNS processing
[   31.470989] tiziano_sdns_init: Using linear SDNS parameters
[   31.470995] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   31.471002] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   31.471008] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   31.471024] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   31.471030] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   31.471036] tiziano_sdns_init: SDNS processing initialized successfully
[   31.471042] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   31.471048] tiziano_mdns_init: Using linear MDNS parameters
[   31.471054] tiziano_mdns_init: MDNS processing initialized successfully
[   31.471060] tiziano_clm_init: Initializing CLM processing
[   31.471065] tiziano_dpc_init: Initializing DPC processing
[   31.471070] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   31.471076] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   31.471083] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   31.471089] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   31.471098] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   31.471104] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   31.471110] tiziano_hldc_init: Initializing HLDC processing
[   31.471116] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   31.471123] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.471129] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.471136] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.471143] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.471150] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.471156] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.471163] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.471170] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.471177] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.471184] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.471190] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.471198] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.471203] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.471209] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.471214] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.471221] tisp_adr_set_params: Writing ADR parameters to registers
[   31.471236] tisp_adr_set_params: ADR parameters written to hardware
[   31.471242] tisp_event_set_cb: Setting callback for event 18
[   31.471248] tisp_event_set_cb: Event 18 callback set to c0686cf4
[   31.471292] tisp_event_set_cb: Setting callback for event 2
[   31.471300] tisp_event_set_cb: Event 2 callback set to c06857f8
[   31.471305] tiziano_adr_init: ADR processing initialized successfully
[   31.471312] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.471317] tiziano_bcsh_init: Initializing BCSH processing
[   31.471322] tiziano_ydns_init: Initializing YDNS processing
[   31.471327] tiziano_rdns_init: Initializing RDNS processing
[   31.471332] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   31.471338] tisp_event_init: Initializing ISP event system
[   31.471345] tisp_event_init: SAFE event system initialized with 20 nodes
[   31.471350] tisp_event_set_cb: Setting callback for event 4
[   31.471357] tisp_event_set_cb: Event 4 callback set to c0685824
[   31.471362] tisp_event_set_cb: Setting callback for event 5
[   31.471369] tisp_event_set_cb: Event 5 callback set to c0685cec
[   31.471374] tisp_event_set_cb: Setting callback for event 7
[   31.471380] tisp_event_set_cb: Event 7 callback set to c06858b8
[   31.471386] tisp_event_set_cb: Setting callback for event 9
[   31.471392] tisp_event_set_cb: Event 9 callback set to c0685940
[   31.471398] tisp_event_set_cb: Setting callback for event 8
[   31.471404] tisp_event_set_cb: Event 8 callback set to c0685a04
[   31.471410] *** tisp_init: BINARY NINJA REFERENCE - No event processing thread created ***
[   31.471416] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   31.471422] tisp_param_operate_init: Initializing parameter operations
[   31.471428] tisp_netlink_init: Initializing netlink communication
[   31.471434] tisp_netlink_init: Trying standard NETLINK_GENERIC protocol (16)
[   31.471464] tisp_netlink_init: NETLINK_GENERIC failed, trying custom protocol 0x17
[   31.471475] tisp_netlink_init: Netlink socket created successfully
[   31.471482] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   31.471487] tisp_code_create_tuning_node: Device already created, skipping
[   31.471493] *** tisp_init: ISP HARDWARE PIPELINE FULLY INITIALIZED - THIS SHOULD TRIGGER REGISTER ACTIVITY ***
[   31.471499] *** tisp_init: All hardware blocks enabled, registers configured, events ready ***
[   31.471506] *** ispcore_core_ops_init_with_sensor: tisp_init SUCCESS - MIPI CSI should now be configured ***
[   31.471512] *** ispcore_core_ops_init_with_sensor: VIC already in state 4 (>= 3) ****** ispcore_core_ops_init_with_sensor: SUCCESS - Core initialized with sensor attributes ***
[   31.471520] ispcore_slake_module: Initializing channelsispcore_slake_module: Channel 0 enabled
[   31.471529] ispcore_slake_module: Channel 1 enabledispcore_slake_module: Channel 2 enabled
[   31.471536] ispcore_slake_module: Channel 3 enabledispcore_slake_module: Channel 4 enabled
[   31.471544] ispcore_slake_module: Channel 5 enabledispcore_slake_module: Calling VIC control function (0x4000001, 0)
[   31.471552] ispcore_slake_module: VIC control register written: 0x4000001ispcore_slake_module: Set VIC state to INIT (1)
[   31.471560] ispcore_slake_module: Processing subdevices*** DEBUG: isp_dev=84724000, isp_dev->subdevs=84727274 ***
[   31.471572] *** ispcore_slake_module: Calling slake_module for CSI subdev ***
[   31.471579] *** tx_isp_csi_slake_subdev: CSI slake/shutdown - current state=4 ***
[   31.471585] tx_isp_csi_slake_subdev: CSI in streaming state, stopping stream
[   31.471590] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.471597] csi_video_s_stream: sd=85ffc000, enable=0
[   31.471603] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 3 (enable=0)
[   31.471609] tx_isp_csi_slake_subdev: CSI in state 3, calling core_ops_init(disable)
[   31.471616] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=0
[   31.471623] tx_isp_csi_slake_subdev: CSI state 2->1, disabling clocks
[   31.471630] tx_isp_csi_slake_subdev: Disabled clock 0
[   31.471636] *** tx_isp_csi_slake_subdev: CSI slake complete, final state=1 ***
[   31.471642] ispcore_slake_module: CSI slake success
[   31.471646] *** ispcore_slake_module: Calling slake_module for VIC subdev ***
[   31.471652] *** tx_isp_vic_slake_subdev: ENTRY - sd=85ffc400 ***
[   31.471659] *** tx_isp_vic_slake_subdev: VIC slake/shutdown - vic_dev=85ffc400, current state=1 ***
[   31.471666] *** tx_isp_vic_slake_subdev: VIC slake complete, final state=1 ***
[   31.471671] ispcore_slake_module: VIC slake success
[   31.471677] *** ispcore_slake_module: All subdev slake operations completed using helper functions ***
[   31.471682] ispcore_slake_module: Skipping Disabling ISP clocks
[   31.471686] ispcore_slake_module: Complete, result=0<6>[   31.471692] *** ispcore_slake_module SUCCESS - ISP core should now be initialized ***
[   31.471698] *** vic_core_s_stream: VIC initialized, final state=1 ***
[   31.471705] *** tx_isp_video_s_stream: subdev[1] s_stream SUCCESS ***
[   31.471712] *** tx_isp_video_s_stream: Calling subdev[3]->ops->video->s_stream(1) ***
[   31.471720] gc2053: s_stream called with enable=1
[   31.471728] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.471734] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.471740] gc2053: About to write streaming registers for interface 1
[   31.471746] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.471756] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   31.472076] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.472083] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.472092] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   31.476312] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.476324] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.476331] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.476339] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.476345] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.476351] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.476358] *** tx_isp_video_s_stream: subdev[3] s_stream SUCCESS ***
[   31.476364] *** tx_isp_video_s_stream: Calling subdev[5]->ops->video->s_stream(1) ***
[   31.476371] gc2053: s_stream called with enable=1
[   31.476378] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.476384] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.476390] gc2053: About to write streaming registers for interface 1
[   31.476396] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.476406] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   31.476724] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.476732] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.476740] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   31.477059] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.477066] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.477072] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.477079] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.477085] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.477091] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.477097] *** tx_isp_video_s_stream: subdev[5] s_stream SUCCESS ***
[   31.477104] *** tx_isp_video_s_stream: Post-sensor s_stream re-trigger of CSI core->init ***
[   31.491334] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=1
[   31.491346] *** VIC POST-SENSOR REASSERT: re-applying routing/mask after sensor stream-on ***
[   31.543800] *** VIC POST-SENSOR REASSERT: No status bits asserted in 20ms window ***
[   31.543852] ISP IOCTL: cmd=0x800456d0 arg=0x7fcc47b0
[   31.543860] TX_ISP_VIDEO_LINK_SETUP: config=0
[   31.543866] TX_ISP_VIDEO_LINK_SETUP: Link config unchanged (0)
[   31.543873] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   31.543880] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   31.543886] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   31.543893] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   31.543900] VIC activated: state 1 -> 2 (READY)
[   31.543906] *** VIC ACTIVATION: Buffer allocation DEFERRED to prevent Wyze Cam memory exhaustion ***
[   31.543911] *** VIC ACTIVATION: Buffers will be allocated on-demand during QBUF operations ***
[   31.543917] *** VIC ACTIVATION: Free buffer list initialized (empty) - allocation deferred ***
[   31.543923] *** VIC ACTIVATION: Using GOOD-THINGS deferred buffer allocation strategy ***
[   31.543929] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   31.543936] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   31.543942] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.543949] csi_video_s_stream: sd=85ffc000, enable=1
[   31.543956] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   31.543964] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85ffc400, enable=1 ***
[   31.543970] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   31.543975] *** vic_core_s_stream: STREAM ON ***
[   31.543980] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   31.543986] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   31.543993] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.544002] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   31.544008] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   31.544015] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   31.544020] *** STREAMING: Configuring CPM registers for VIC access ***
[   31.571324] STREAMING: CPM clocks configured for VIC access
[   31.571340] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   31.571346] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   31.571354] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   31.571360] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   31.571366] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   31.571372] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   31.571379] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   31.571386] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   31.571392] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   31.571398] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   31.571404] *** VIC unlock: Commands written, checking VIC status register ***
[   31.571410] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   31.571416] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   31.571422] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   31.571427] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   31.571432] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   31.571438] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   31.571521] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   31.571529] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   31.571536] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   31.571544] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   31.571550] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   31.571557] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   31.571563] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   31.571568] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   31.571574] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   31.571580] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   31.571587] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   31.571592] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   31.571598] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   31.571605] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   31.571610] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   31.571616] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   31.571622] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   31.571628] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   31.571634] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   31.571640] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   31.571647] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   31.571652] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   31.571661] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   31.571668] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   31.571673] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   31.571681] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   31.571686] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   31.571692] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   31.571698] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   31.571704] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   31.571710] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   31.571716] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.571724] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   31.571731] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   31.571736] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   31.571743] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   31.571750] ispvic_frame_channel_s_stream: arg1=85ffc400, arg2=1
[   31.571756] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85ffc400
[   31.571762] ispvic_frame_channel_s_stream[2441]: streamon
[   31.571769] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   31.571775] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   31.571780] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   31.571786] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   31.571792] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   31.571799] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   31.571804] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   31.571812] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   31.571818] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   31.571823] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   31.571828] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   31.571834] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   31.571841] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   31.571849] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   31.571856] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   31.571864] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   31.571872] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   31.571879] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   31.571885] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   31.571891] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   31.571896] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   31.571903] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   31.571910] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   31.571915] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   31.571920] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.571927] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   31.571932] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   31.571944] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   31.571952] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   31.572016] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   31.572026] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   31.572032] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   31.572041] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   31.572047] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   31.572052] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   31.572059] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   31.572066] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   31.573262] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   31.573274] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   31.573279] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   31.573386] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.573494] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.573501] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   31.573506] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   31.573512] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   31.573518] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   31.573524] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   31.573531] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   31.573537] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   31.573542] *** tx_vic_enable_irq: completed successfully ***
---- FPGA board is ready ----
  Board UID : 30AB6E51
  Board HW ID : 72000460
  Board rev.  : 5DE5A975
  Board date  : 20190326
-----------------------------
root@ing-wyze-cam3-a000 ~# dmesg 
[   31.134513] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   31.134520] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   31.134527] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   31.134533] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   31.134539] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   31.134546] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   31.134553] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   31.134559] tiziano_ae_set_hardware_param: Parameters written to AE1
[   31.134564] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   31.134572] *** system_irq_func_set: Registered handler c06869fc at index 10 ***
[   31.151269] *** system_irq_func_set: Registered handler c0686af0 at index 27 ***
[   31.168355] *** system_irq_func_set: Registered handler c06869fc at index 26 ***
[   31.183875] *** system_irq_func_set: Registered handler c0686bd8 at index 29 ***
[   31.201275] *** system_irq_func_set: Registered handler c0686b64 at index 28 ***
[   31.219091] *** system_irq_func_set: Registered handler c0686c4c at index 30 ***
[   31.232904] *** system_irq_func_set: Registered handler c0686ca0 at index 20 ***
[   31.250835] *** system_irq_func_set: Registered handler c0686cf4 at index 18 ***
[   31.265797] *** system_irq_func_set: Registered handler c0686d48 at index 31 ***
[   31.282418] *** system_irq_func_set: Registered handler c0686d9c at index 11 ***
[   31.300261] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   31.300283] tiziano_deflicker_expt: Generated 119 LUT entries
[   31.300290] tisp_event_set_cb: Setting callback for event 1
[   31.300297] tisp_event_set_cb: Event 1 callback set to c06865fc
[   31.300303] tisp_event_set_cb: Setting callback for event 6
[   31.300309] tisp_event_set_cb: Event 6 callback set to c0685b5c
[   31.300315] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   31.300321] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   31.300328] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   31.300335] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   31.300342] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   31.300347] tiziano_awb_init: AWB hardware blocks enabled
[   31.300353] tiziano_gamma_init: Initializing Gamma processing
[   31.300358] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   31.300383] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   31.300389] tiziano_gib_init: Initializing GIB processing
[   31.300394] tiziano_lsc_init: Initializing LSC processing
[   31.300399] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   31.300405] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   31.300412] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   31.300419] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   31.300424] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   31.300459] tiziano_ccm_init: Initializing Color Correction Matrix
[   31.300465] tiziano_ccm_init: Using linear CCM parameters
[   31.300471] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   31.300477] jz_isp_ccm: EV=64, CT=9984
[   31.300483] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   31.300489] cm_control: saturation=128
[   31.300494] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   31.300500] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   31.300505] tiziano_ccm_init: CCM initialized successfully
[   31.300510] tiziano_dmsc_init: Initializing DMSC processing
[   31.300515] tiziano_sharpen_init: Initializing Sharpening
[   31.300521] tiziano_sharpen_init: Using linear sharpening parameters
[   31.300526] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   31.300533] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   31.300539] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   31.300553] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   31.300559] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   31.300565] tiziano_sharpen_init: Sharpening initialized successfully
[   31.300570] tiziano_sdns_init: Initializing SDNS processing
[   31.300578] tiziano_sdns_init: Using linear SDNS parameters
[   31.300583] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   31.300590] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   31.300595] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   31.300612] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   31.300619] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   31.300624] tiziano_sdns_init: SDNS processing initialized successfully
[   31.300630] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   31.300635] tiziano_mdns_init: Using linear MDNS parameters
[   31.300643] tiziano_mdns_init: MDNS processing initialized successfully
[   31.300648] tiziano_clm_init: Initializing CLM processing
[   31.300653] tiziano_dpc_init: Initializing DPC processing
[   31.300659] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   31.300665] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   31.300671] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   31.300677] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   31.300686] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   31.300693] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   31.300698] tiziano_hldc_init: Initializing HLDC processing
[   31.300704] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   31.300711] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.300717] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.300724] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.300731] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.300738] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.300745] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.300751] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.300758] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.300765] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.300772] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.300779] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.300785] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.300791] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.300797] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.300802] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.300809] tisp_adr_set_params: Writing ADR parameters to registers
[   31.300824] tisp_adr_set_params: ADR parameters written to hardware
[   31.300829] tisp_event_set_cb: Setting callback for event 18
[   31.300836] tisp_event_set_cb: Event 18 callback set to c0686cf4
[   31.300841] tisp_event_set_cb: Setting callback for event 2
[   31.300848] tisp_event_set_cb: Event 2 callback set to c06857f8
[   31.300853] tiziano_adr_init: ADR processing initialized successfully
[   31.300859] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.300865] tiziano_bcsh_init: Initializing BCSH processing
[   31.300870] tiziano_ydns_init: Initializing YDNS processing
[   31.300875] tiziano_rdns_init: Initializing RDNS processing
[   31.300880] *** tisp_init: ALLOCATING ISP PROCESSING BUFFERS ***
[   31.300893] *** SYSTEM_REG_WRITE: reg[0xa02c] = 0x580000 (Binary Ninja EXACT) ***
[   31.300900] *** SYSTEM_REG_WRITE: reg[0xa030] = 0x581000 (Binary Ninja EXACT) ***
[   31.300907] *** SYSTEM_REG_WRITE: reg[0xa034] = 0x582000 (Binary Ninja EXACT) ***
[   31.300914] *** SYSTEM_REG_WRITE: reg[0xa038] = 0x583000 (Binary Ninja EXACT) ***
[   31.300921] *** SYSTEM_REG_WRITE: reg[0xa03c] = 0x584000 (Binary Ninja EXACT) ***
[   31.300927] *** SYSTEM_REG_WRITE: reg[0xa040] = 0x584800 (Binary Ninja EXACT) ***
[   31.300934] *** SYSTEM_REG_WRITE: reg[0xa044] = 0x585000 (Binary Ninja EXACT) ***
[   31.300941] *** SYSTEM_REG_WRITE: reg[0xa048] = 0x585800 (Binary Ninja EXACT) ***
[   31.300948] *** SYSTEM_REG_WRITE: reg[0xa04c] = 0x33 (Binary Ninja EXACT) ***
[   31.300954] *** tisp_init: AE0 buffer allocated at 0x00580000 ***
[   31.300960] *** CRITICAL FIX: data_b2f3c initialized to 0x80580000 (prevents stack corruption) ***
[   31.300969] *** SYSTEM_REG_WRITE: reg[0xa82c] = 0x590000 (Binary Ninja EXACT) ***
[   31.300975] *** SYSTEM_REG_WRITE: reg[0xa830] = 0x591000 (Binary Ninja EXACT) ***
[   31.300982] *** SYSTEM_REG_WRITE: reg[0xa834] = 0x592000 (Binary Ninja EXACT) ***
[   31.300989] *** SYSTEM_REG_WRITE: reg[0xa838] = 0x593000 (Binary Ninja EXACT) ***
[   31.300996] *** SYSTEM_REG_WRITE: reg[0xa83c] = 0x594000 (Binary Ninja EXACT) ***
[   31.301003] *** SYSTEM_REG_WRITE: reg[0xa840] = 0x594800 (Binary Ninja EXACT) ***
[   31.301009] *** SYSTEM_REG_WRITE: reg[0xa844] = 0x595000 (Binary Ninja EXACT) ***
[   31.301017] *** SYSTEM_REG_WRITE: reg[0xa848] = 0x595800 (Binary Ninja EXACT) ***
[   31.301023] *** SYSTEM_REG_WRITE: reg[0xa84c] = 0x33 (Binary Ninja EXACT) ***
[   31.301029] *** tisp_init: AE1 buffer allocated at 0x00590000 ***
[   31.301034] *** tisp_init: FINAL REGISTER SEQUENCE ***
[   31.301041] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   31.301046] *** tisp_init: STREAMING ACTIVE - Skipping second ISP control register write ***
[   31.301053] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   31.301058] *** tisp_init: INITIALIZING ISP SUB-MODULES ***
[   31.301065] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   31.301073] tiziano_ae_params_refresh: Refreshing AE parameters
[   31.301083] tiziano_ae_params_refresh: AE parameters refreshed
[   31.301089] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   31.301095] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   31.301101] tiziano_ae_para_addr: Setting up AE parameter addresses
[   31.301105] tiziano_ae_para_addr: AE parameter addresses configured
[   31.301112] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   31.301119] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   31.301126] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   31.301133] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   31.301140] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   31.301147] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   31.301153] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   31.301160] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b86e814 (Binary Ninja EXACT) ***
[   31.301167] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   31.301174] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   31.301181] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   31.301187] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   31.301193] tiziano_ae_set_hardware_param: Parameters written to AE0
[   31.301199] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   31.301205] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   31.301212] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   31.301219] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   31.301225] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   31.301232] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   31.301297] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   31.301306] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   31.301313] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   31.301319] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   31.301325] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   31.301332] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   31.301338] tiziano_ae_set_hardware_param: Parameters written to AE1
[   31.301343] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   31.301351] *** system_irq_func_set: Registered handler c06869fc at index 10 ***
[   31.308990] *** system_irq_func_set: Registered handler c0686af0 at index 27 ***
[   31.332143] *** system_irq_func_set: Registered handler c06869fc at index 26 ***
[   31.356986] *** system_irq_func_set: Registered handler c0686bd8 at index 29 ***
[   31.374836] *** system_irq_func_set: Registered handler c0686b64 at index 28 ***
[   31.388742] *** system_irq_func_set: Registered handler c0686c4c at index 30 ***
[   31.406585] *** system_irq_func_set: Registered handler c0686ca0 at index 20 ***
[   31.421292] *** system_irq_func_set: Registered handler c0686cf4 at index 18 ***
[   31.438229] *** system_irq_func_set: Registered handler c0686d48 at index 31 ***
[   31.456086] *** system_irq_func_set: Registered handler c0686d9c at index 11 ***
[   31.470562] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   31.470585] tiziano_deflicker_expt: Generated 119 LUT entries
[   31.470592] tisp_event_set_cb: Setting callback for event 1
[   31.470599] tisp_event_set_cb: Event 1 callback set to c06865fc
[   31.470604] tisp_event_set_cb: Setting callback for event 6
[   31.470611] tisp_event_set_cb: Event 6 callback set to c0685b5c
[   31.470616] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   31.470622] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   31.470737] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   31.470746] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   31.470753] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   31.470758] tiziano_awb_init: AWB hardware blocks enabled
[   31.470764] tiziano_gamma_init: Initializing Gamma processing
[   31.470769] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   31.470794] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   31.470800] tiziano_gib_init: Initializing GIB processing
[   31.470805] tiziano_lsc_init: Initializing LSC processing
[   31.470810] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   31.470816] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   31.470823] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   31.470830] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   31.470835] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   31.470871] tiziano_ccm_init: Initializing Color Correction Matrix
[   31.470876] tiziano_ccm_init: Using linear CCM parameters
[   31.470882] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   31.470888] jz_isp_ccm: EV=64, CT=9984
[   31.470895] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   31.470900] cm_control: saturation=128
[   31.470906] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   31.470911] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   31.470916] tiziano_ccm_init: CCM initialized successfully
[   31.470922] tiziano_dmsc_init: Initializing DMSC processing
[   31.470927] tiziano_sharpen_init: Initializing Sharpening
[   31.470932] tiziano_sharpen_init: Using linear sharpening parameters
[   31.470938] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   31.470944] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   31.470950] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   31.470964] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   31.470970] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   31.470976] tiziano_sharpen_init: Sharpening initialized successfully
[   31.470981] tiziano_sdns_init: Initializing SDNS processing
[   31.470989] tiziano_sdns_init: Using linear SDNS parameters
[   31.470995] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   31.471002] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   31.471008] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   31.471024] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   31.471030] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   31.471036] tiziano_sdns_init: SDNS processing initialized successfully
[   31.471042] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   31.471048] tiziano_mdns_init: Using linear MDNS parameters
[   31.471054] tiziano_mdns_init: MDNS processing initialized successfully
[   31.471060] tiziano_clm_init: Initializing CLM processing
[   31.471065] tiziano_dpc_init: Initializing DPC processing
[   31.471070] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   31.471076] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   31.471083] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   31.471089] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   31.471098] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   31.471104] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   31.471110] tiziano_hldc_init: Initializing HLDC processing
[   31.471116] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   31.471123] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.471129] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.471136] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.471143] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.471150] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.471156] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.471163] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.471170] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.471177] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.471184] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.471190] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.471198] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.471203] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.471209] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.471214] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.471221] tisp_adr_set_params: Writing ADR parameters to registers
[   31.471236] tisp_adr_set_params: ADR parameters written to hardware
[   31.471242] tisp_event_set_cb: Setting callback for event 18
[   31.471248] tisp_event_set_cb: Event 18 callback set to c0686cf4
[   31.471292] tisp_event_set_cb: Setting callback for event 2
[   31.471300] tisp_event_set_cb: Event 2 callback set to c06857f8
[   31.471305] tiziano_adr_init: ADR processing initialized successfully
[   31.471312] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.471317] tiziano_bcsh_init: Initializing BCSH processing
[   31.471322] tiziano_ydns_init: Initializing YDNS processing
[   31.471327] tiziano_rdns_init: Initializing RDNS processing
[   31.471332] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   31.471338] tisp_event_init: Initializing ISP event system
[   31.471345] tisp_event_init: SAFE event system initialized with 20 nodes
[   31.471350] tisp_event_set_cb: Setting callback for event 4
[   31.471357] tisp_event_set_cb: Event 4 callback set to c0685824
[   31.471362] tisp_event_set_cb: Setting callback for event 5
[   31.471369] tisp_event_set_cb: Event 5 callback set to c0685cec
[   31.471374] tisp_event_set_cb: Setting callback for event 7
[   31.471380] tisp_event_set_cb: Event 7 callback set to c06858b8
[   31.471386] tisp_event_set_cb: Setting callback for event 9
[   31.471392] tisp_event_set_cb: Event 9 callback set to c0685940
[   31.471398] tisp_event_set_cb: Setting callback for event 8
[   31.471404] tisp_event_set_cb: Event 8 callback set to c0685a04
[   31.471410] *** tisp_init: BINARY NINJA REFERENCE - No event processing thread created ***
[   31.471416] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   31.471422] tisp_param_operate_init: Initializing parameter operations
[   31.471428] tisp_netlink_init: Initializing netlink communication
[   31.471434] tisp_netlink_init: Trying standard NETLINK_GENERIC protocol (16)
[   31.471464] tisp_netlink_init: NETLINK_GENERIC failed, trying custom protocol 0x17
[   31.471475] tisp_netlink_init: Netlink socket created successfully
[   31.471482] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   31.471487] tisp_code_create_tuning_node: Device already created, skipping
[   31.471493] *** tisp_init: ISP HARDWARE PIPELINE FULLY INITIALIZED - THIS SHOULD TRIGGER REGISTER ACTIVITY ***
[   31.471499] *** tisp_init: All hardware blocks enabled, registers configured, events ready ***
[   31.471506] *** ispcore_core_ops_init_with_sensor: tisp_init SUCCESS - MIPI CSI should now be configured ***
[   31.471512] *** ispcore_core_ops_init_with_sensor: VIC already in state 4 (>= 3) ****** ispcore_core_ops_init_with_sensor: SUCCESS - Core initialized with sensor attributes ***
[   31.471520] ispcore_slake_module: Initializing channelsispcore_slake_module: Channel 0 enabled
[   31.471529] ispcore_slake_module: Channel 1 enabledispcore_slake_module: Channel 2 enabled
[   31.471536] ispcore_slake_module: Channel 3 enabledispcore_slake_module: Channel 4 enabled
[   31.471544] ispcore_slake_module: Channel 5 enabledispcore_slake_module: Calling VIC control function (0x4000001, 0)
[   31.471552] ispcore_slake_module: VIC control register written: 0x4000001ispcore_slake_module: Set VIC state to INIT (1)
[   31.471560] ispcore_slake_module: Processing subdevices*** DEBUG: isp_dev=84724000, isp_dev->subdevs=84727274 ***
[   31.471572] *** ispcore_slake_module: Calling slake_module for CSI subdev ***
[   31.471579] *** tx_isp_csi_slake_subdev: CSI slake/shutdown - current state=4 ***
[   31.471585] tx_isp_csi_slake_subdev: CSI in streaming state, stopping stream
[   31.471590] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.471597] csi_video_s_stream: sd=85ffc000, enable=0
[   31.471603] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 3 (enable=0)
[   31.471609] tx_isp_csi_slake_subdev: CSI in state 3, calling core_ops_init(disable)
[   31.471616] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=0
[   31.471623] tx_isp_csi_slake_subdev: CSI state 2->1, disabling clocks
[   31.471630] tx_isp_csi_slake_subdev: Disabled clock 0
[   31.471636] *** tx_isp_csi_slake_subdev: CSI slake complete, final state=1 ***
[   31.471642] ispcore_slake_module: CSI slake success
[   31.471646] *** ispcore_slake_module: Calling slake_module for VIC subdev ***
[   31.471652] *** tx_isp_vic_slake_subdev: ENTRY - sd=85ffc400 ***
[   31.471659] *** tx_isp_vic_slake_subdev: VIC slake/shutdown - vic_dev=85ffc400, current state=1 ***
[   31.471666] *** tx_isp_vic_slake_subdev: VIC slake complete, final state=1 ***
[   31.471671] ispcore_slake_module: VIC slake success
[   31.471677] *** ispcore_slake_module: All subdev slake operations completed using helper functions ***
[   31.471682] ispcore_slake_module: Skipping Disabling ISP clocks
[   31.471686] ispcore_slake_module: Complete, result=0<6>[   31.471692] *** ispcore_slake_module SUCCESS - ISP core should now be initialized ***
[   31.471698] *** vic_core_s_stream: VIC initialized, final state=1 ***
[   31.471705] *** tx_isp_video_s_stream: subdev[1] s_stream SUCCESS ***
[   31.471712] *** tx_isp_video_s_stream: Calling subdev[3]->ops->video->s_stream(1) ***
[   31.471720] gc2053: s_stream called with enable=1
[   31.471728] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.471734] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.471740] gc2053: About to write streaming registers for interface 1
[   31.471746] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.471756] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   31.472076] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.472083] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.472092] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   31.476312] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.476324] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.476331] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.476339] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.476345] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.476351] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.476358] *** tx_isp_video_s_stream: subdev[3] s_stream SUCCESS ***
[   31.476364] *** tx_isp_video_s_stream: Calling subdev[5]->ops->video->s_stream(1) ***
[   31.476371] gc2053: s_stream called with enable=1
[   31.476378] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.476384] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.476390] gc2053: About to write streaming registers for interface 1
[   31.476396] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.476406] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   31.476724] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.476732] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.476740] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   31.477059] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.477066] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.477072] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.477079] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.477085] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.477091] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.477097] *** tx_isp_video_s_stream: subdev[5] s_stream SUCCESS ***
[   31.477104] *** tx_isp_video_s_stream: Post-sensor s_stream re-trigger of CSI core->init ***
[   31.491334] csi_core_ops_init: sd=85ffc000, csi_dev=85ffc000, enable=1
[   31.491346] *** VIC POST-SENSOR REASSERT: re-applying routing/mask after sensor stream-on ***
[   31.543800] *** VIC POST-SENSOR REASSERT: No status bits asserted in 20ms window ***
[   31.543852] ISP IOCTL: cmd=0x800456d0 arg=0x7fcc47b0
[   31.543860] TX_ISP_VIDEO_LINK_SETUP: config=0
[   31.543866] TX_ISP_VIDEO_LINK_SETUP: Link config unchanged (0)
[   31.543873] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   31.543880] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   31.543886] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   31.543893] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   31.543900] VIC activated: state 1 -> 2 (READY)
[   31.543906] *** VIC ACTIVATION: Buffer allocation DEFERRED to prevent Wyze Cam memory exhaustion ***
[   31.543911] *** VIC ACTIVATION: Buffers will be allocated on-demand during QBUF operations ***
[   31.543917] *** VIC ACTIVATION: Free buffer list initialized (empty) - allocation deferred ***
[   31.543923] *** VIC ACTIVATION: Using GOOD-THINGS deferred buffer allocation strategy ***
[   31.543929] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   31.543936] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   31.543942] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.543949] csi_video_s_stream: sd=85ffc000, enable=1
[   31.543956] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   31.543964] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85ffc400, enable=1 ***
[   31.543970] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   31.543975] *** vic_core_s_stream: STREAM ON ***
[   31.543980] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   31.543986] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   31.543993] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.544002] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   31.544008] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   31.544015] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   31.544020] *** STREAMING: Configuring CPM registers for VIC access ***
[   31.571324] STREAMING: CPM clocks configured for VIC access
[   31.571340] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   31.571346] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   31.571354] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   31.571360] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   31.571366] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   31.571372] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   31.571379] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   31.571386] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   31.571392] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   31.571398] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   31.571404] *** VIC unlock: Commands written, checking VIC status register ***
[   31.571410] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   31.571416] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   31.571422] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   31.571427] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   31.571432] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   31.571438] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   31.571521] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   31.571529] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   31.571536] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   31.571544] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   31.571550] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   31.571557] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   31.571563] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   31.571568] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   31.571574] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   31.571580] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   31.571587] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   31.571592] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   31.571598] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   31.571605] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   31.571610] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   31.571616] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   31.571622] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   31.571628] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   31.571634] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   31.571640] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   31.571647] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   31.571652] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   31.571661] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   31.571668] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   31.571673] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   31.571681] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   31.571686] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   31.571692] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   31.571698] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   31.571704] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   31.571710] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   31.571716] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.571724] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   31.571731] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   31.571736] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   31.571743] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   31.571750] ispvic_frame_channel_s_stream: arg1=85ffc400, arg2=1
[   31.571756] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85ffc400
[   31.571762] ispvic_frame_channel_s_stream[2441]: streamon
[   31.571769] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   31.571775] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   31.571780] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   31.571786] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   31.571792] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   31.571799] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   31.571804] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   31.571812] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   31.571818] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   31.571823] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   31.571828] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   31.571834] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   31.571841] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   31.571849] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   31.571856] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   31.571864] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   31.571872] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   31.571879] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   31.571885] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   31.571891] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   31.571896] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   31.571903] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   31.571910] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   31.571915] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   31.571920] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.571927] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   31.571932] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   31.571944] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   31.571952] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   31.572016] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   31.572026] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   31.572032] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   31.572041] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   31.572047] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   31.572052] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   31.572059] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   31.572066] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   31.573262] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   31.573274] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   31.573279] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   31.573386] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.573494] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.573501] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   31.573506] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   31.573512] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   31.573518] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   31.573524] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   31.573531] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   31.573537] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   31.573542] *** tx_vic_enable_irq: completed successfully ***
[   32.058057] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   32.058072] *** vic_core_s_stream: VIC state 2 - letting tx_isp_video_s_stream handle state 2 → 3 transition ***
[   32.058078] *** vic_core_s_stream: VIC initialized, final state=2 ***
[   32.058089] gc2053: s_stream called with enable=1
[   32.058096] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   32.058102] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   32.058109] gc2053: About to write streaming registers for interface 1
[   32.058115] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   32.058125] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   32.058446] sensor_write: reg=0xfe val=0x00 SUCCESS
[   32.058453] sensor_write_array: reg[1] 0xfe=0x00 OK
[   32.058462] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   32.064004] sensor_write: reg=0x3e val=0x91 SUCCESS
[   32.064018] sensor_write_array: reg[2] 0x3e=0x91 OK
[   32.064024] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.064032] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   32.064038] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   32.064044] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   32.064051] gc2053: s_stream called with enable=1
[   32.064058] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   32.064064] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   32.064070] gc2053: About to write streaming registers for interface 1
[   32.064076] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   32.064086] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   32.064405] sensor_write: reg=0xfe val=0x00 SUCCESS
[   32.064412] sensor_write_array: reg[1] 0xfe=0x00 OK
[   32.064420] sensor_write: reg=0x3e val=0x91, client=848f4d00, adapter=i2c0, addr=0x37
[   32.064732] sensor_write: reg=0x3e val=0x91 SUCCESS
[   32.064739] sensor_write_array: reg[2] 0x3e=0x91 OK
[   32.064745] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.064752] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   32.064757] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   32.064763] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   32.199983] ISP M0 device open called from pid 2386
[   32.200017] *** REFERENCE DRIVER IMPLEMENTATION ***
[   32.200025] ISP M0 tuning buffer allocated: 805c0000 (size=0x500c, aligned)
[   32.200031] tisp_par_ioctl global variable set: 805c0000
[   32.200082] isp_core_tunning_unlocked_ioctl: Auto-initializing tuning for V4L2 control (one-time)
[   32.200089] isp_core_tunning_unlocked_ioctl: Initializing tuning data structure
[   32.200095] isp_core_tuning_init: Initializing tuning data structure
[   32.200115] isp_core_tuning_init: Tuning data structure initialized at 82220000
[   32.200121] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   32.200127] *** SAFE: mode_flag properly initialized using struct member access ***
[   32.200133] isp_core_tunning_unlocked_ioctl: Tuning data allocated at 82220000
[   32.200139] *** BINARY NINJA REFERENCE: Skipping auto-initialization - no hardware reset during tuning setup ***
[   32.200145] isp_core_tunning_unlocked_ioctl: ISP tuning auto-enabled for V4L2 controls (permanent)
[   32.200151] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.200159] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   32.200165] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   32.200170] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   32.200175] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   32.200199] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561b
[   32.200206] isp_core_tunning_unlocked_ioctl: Get control cmd=0x980900
[   32.200212] CRITICAL: Cannot access brightness field - PREVENTS BadVA CRASH
[   32.200220] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561b
[   32.200227] isp_core_tunning_unlocked_ioctl: Get control cmd=0x980902
[   32.200233] CRITICAL: Cannot access saturation field at 82220024 - PREVENTING BadVA CRASH
[   32.200603] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.200616] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980901 value=128
[   32.200623] Set control: cmd=0x980901 value=128
[   32.200688] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.200696] isp_core_tunning_unlocked_ioctl: Set control cmd=0x98091b value=128
[   32.200703] Set control: cmd=0x98091b value=128
[   32.200762] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.200770] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980902 value=128
[   32.200777] Set control: cmd=0x980902 value=128
[   32.200783] tisp_bcsh_saturation: saturation=128
[   32.200788] tiziano_bcsh_update: Updating BCSH parameters
[   32.200795]   Brightness: 128, Contrast: 128, Saturation: 128, Hue: 0
[   32.200801] tiziano_bcsh_update: BCSH update completed (simplified implementation)
[   32.200860] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.200868] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980900 value=128
[   32.200875] Set control: cmd=0x980900 value=128
[   32.200950] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.200959] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980901 value=128
[   32.200965] Set control: cmd=0x980901 value=128
[   32.201022] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.201030] isp_core_tunning_unlocked_ioctl: Set control cmd=0x98091b value=128
[   32.201037] Set control: cmd=0x98091b value=128
[   32.201095] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.201103] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980902 value=128
[   32.201109] Set control: cmd=0x980902 value=128
[   32.201115] tisp_bcsh_saturation: saturation=128
[   32.201120] tiziano_bcsh_update: Updating BCSH parameters
[   32.201127]   Brightness: 128, Contrast: 128, Saturation: 128, Hue: 0
[   32.201133] tiziano_bcsh_update: BCSH update completed (simplified implementation)
[   32.201193] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.201200] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980900 value=128
[   32.201207] Set control: cmd=0x980900 value=128
[   32.201273] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.201281] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.201287] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.202008] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.202021] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.202026] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.202200] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.202210] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980914 value=0
[   32.202217] Set control: cmd=0x980914 value=0
[   32.202379] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.202389] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980915 value=0
[   32.202395] Set control: cmd=0x980915 value=0
[   32.202535] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.202545] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.202550] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.202699] ISP IOCTL: cmd=0x800456d3 arg=0x0
[   32.202710] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=0 ***
[   32.202717] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   32.202724] csi_video_s_stream: sd=85ffc000, enable=0
[   32.202731] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 3 (enable=0)
[   32.202739] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85ffc400, enable=0 ***
[   32.202745] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   32.202750] *** vic_core_s_stream: STREAM OFF ***
[   32.202759] gc2053: s_stream called with enable=0
[   32.202766] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   32.202772] gc2053: *** STOPPING SENSOR HARDWARE STREAMING ***
[   32.202778] gc2053: Writing MIPI stream OFF registers (0x3e=0x00)
[   32.202787] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   32.203110] sensor_write: reg=0xfe val=0x00 SUCCESS
[   32.203117] sensor_write_array: reg[1] 0xfe=0x00 OK
[   32.203126] sensor_write: reg=0x3e val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   32.203444] sensor_write: reg=0x3e val=0x00 SUCCESS
[   32.203451] sensor_write_array: reg[2] 0x3e=0x00 OK
[   32.203458] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.203464] gc2053: Sensor hardware streaming stopped
[   32.203470] gc2053: s_stream called with enable=0
[   32.203477] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   32.203483] gc2053: *** STOPPING SENSOR HARDWARE STREAMING ***
[   32.203488] gc2053: Writing MIPI stream OFF registers (0x3e=0x00)
[   32.203497] sensor_write: reg=0xfe val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   32.205754] sensor_write: reg=0xfe val=0x00 SUCCESS
[   32.205767] sensor_write_array: reg[1] 0xfe=0x00 OK
[   32.205777] sensor_write: reg=0x3e val=0x00, client=848f4d00, adapter=i2c0, addr=0x37
[   32.206094] sensor_write: reg=0x3e val=0x00 SUCCESS
[   32.206101] sensor_write_array: reg[2] 0x3e=0x00 OK
[   32.206107] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.206115] gc2053: Sensor hardware streaming stopped
[   32.206129] ISP IOCTL: cmd=0x800456d1 arg=0x7fcc47b0
[   32.206137] tx_isp_video_link_destroy: Destroying links for config 0
[   32.206144] tx_isp_video_link_destroy: All links destroyed, config reset to -1
[   32.206153] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.206160] isp_core_tunning_unlocked_ioctl: Set control cmd=0x8000164 value=1
[   32.206167] Set control: cmd=0x8000164 value=1
[   32.206175] ISP IOCTL: cmd=0x800456d0 arg=0x7fcc47b0
[   32.206181] TX_ISP_VIDEO_LINK_SETUP: config=0
[   32.206187] TX_ISP_VIDEO_LINK_SETUP: Link config changed from -1 to 0
[   32.206192] TX_ISP_VIDEO_LINK_SETUP: Link config updated to 0
[   32.206199] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   32.206205] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   32.206211] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   32.206218] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   32.206225] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   32.206231] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   32.206237] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   32.206244] csi_video_s_stream: sd=85ffc000, enable=1
[   32.206250] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   32.206257] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85ffc400, enable=1 ***
[   32.206263] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   32.206269] *** vic_core_s_stream: STREAM ON ***
[   32.206274] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   32.206280] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   32.206286] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   32.206294] *** tx_isp_get_sensor: Found real sensor subdev at index 5: 80550000 (name=gc2053) ***
[   32.206301] *** tx_isp_get_sensor: Found real sensor: 80550000 ***
[   32.206307] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   32.206313] *** STREAMING: Configuring CPM registers for VIC access ***
[   32.206432] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.206442] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   32.206447] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   32.206453] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   32.206459] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   32.231403] STREAMING: CPM clocks configured for VIC access
[   32.231417] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   32.231423] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   32.231430] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   32.231435] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   32.231441] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   32.231447] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   32.231455] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   32.231461] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   32.231467] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   32.231473] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   32.231479] *** VIC unlock: Commands written, checking VIC status register ***
[   32.231485] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   32.231491] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   32.231497] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   32.231502] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   32.231507] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   32.231513] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   32.231588] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   32.231596] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   32.231603] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   32.231610] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   32.231616] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   32.231623] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   32.231629] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   32.231635] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   32.231641] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   32.231647] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   32.231653] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   32.231659] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   32.231664] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   32.231671] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   32.231677] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   32.231683] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   32.231689] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   32.231695] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   32.231701] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   32.231707] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   32.231713] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   32.231719] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   32.231727] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   32.231734] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   32.231739] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   32.231747] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   32.231753] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   32.231759] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   32.231764] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   32.231770] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   32.231777] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   32.231783] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   32.231791] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   32.231797] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   32.231803] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   32.231809] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   32.231815] ispvic_frame_channel_s_stream: arg1=85ffc400, arg2=1
[   32.231821] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85ffc400
[   32.231828] ispvic_frame_channel_s_stream[2441]: streamon
[   32.231835] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   32.231841] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   32.231846] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   32.231852] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   32.231857] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   32.231865] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   32.231870] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   32.231877] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   32.231883] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   32.231889] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   32.231894] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   32.231900] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   32.231907] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   32.231914] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   32.231921] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   32.231929] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   32.231937] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   32.231944] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   32.231950] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   32.231956] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   32.231961] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   32.231969] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   32.231975] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   32.231981] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   32.231986] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   32.231992] ispvic_frame_channel_qbuf: arg1=85ffc400, arg2=  (null)
[   32.231997] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   32.232009] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   32.232017] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   32.232081] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   32.232091] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   32.232097] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   32.232106] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   32.232113] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   32.232118] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   32.232124] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   32.232131] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   32.233137] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   32.233143] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   32.233149] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   32.233255] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   32.233363] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   32.233370] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   32.233375] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   32.233381] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   32.233387] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   32.233393] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   32.233401] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   32.233406] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   32.233411] *** tx_vic_enable_irq: completed successfully ***
(reverse-i-search)'': [INFO:WS.cpp]: Server started on port 8089
set jpeg streamMngCtx suceess
(reverse-i-search)'ca': [INFO:RTSP.cpp]: stream 0 available at: rtsp://192.168.50.211/ch0
[INFO:RTSP.cpp]: stream 1 available at: rtsp://192.168.50.211/ch1
root@ing-wyze-cam3-a000 ~# cat /proc/jz/clock/clocks 
ID NAME       FRE        stat       count     parent
--------------------------------------------------------
 1 ext0          0.032MHz  enable   0 root
 2 ext1         24.000MHz  enable   11 root
 3 otg_phy      48.000MHz  enable   0 root
--------------------------------------------------------
 5 apll       1392.000MHz  enable   1 ext1
 6 mpll       1200.000MHz  enable   6 ext1
 7 vpll       1200.000MHz  enable   1 ext1
 8 sclka      1392.000MHz  enable   9 apll
--------------------------------------------------------
10 cclk       1392.000MHz  enable   0 sclka
11 l2clk       696.000MHz  enable   0 sclka
12 h0clk       200.000MHz  enable   3 mpll
13 h2clk       200.000MHz  enable   7 mpll
14 pclk        100.000MHz  enable   5 mpll
15 msc          24.000MHz  enable   0 ext1
--------------------------------------------------------
17 cgu_isp      75.000MHz disable   0 mpll
18 cgu_cim      24.000MHz  enable   1 vpll
19 cgu_ssi      50.000MHz  enable   2 mpll
20 cgu_msc_mux 1392.000MHz  enable   0 sclka
21 cgu_i2s_spk    4.096MHz  enable   2 sclka
22 cgu_i2s_mic    2.048MHz  enable   1 sclka
23 cgu_msc1     24.000MHz  enable   1 sclka
24 cgu_msc0     24.000MHz  enable   0 sclka
25 cgu_lpc       4.687MHz disable   0 vpll
26 cgu_macphy    4.687MHz disable   0 mpll
27 cgu_vpu     600.000MHz  enable   2 mpll
28 cgu_ddr     600.000MHz  enable   0 mpll
29 cgu_rsa      75.000MHz disable   0 mpll
--------------------------------------------------------
31 ddr         200.000MHz  enable   0 h0clk
32 tcu         100.000MHz  enable   0 pclk
33 rtc         100.000MHz  enable   0 pclk
34 des         100.000MHz  enable   0 pclk
35 csi         100.000MHz disable   0 pclk
36 lcd         200.000MHz disable   0 h0clk
37 isp         200.000MHz disable   0 h0clk
38 pdma        200.000MHz  enable   1 h2clk
39 sfc         200.000MHz  enable   1 h2clk
40 uart2        24.000MHz disable   0 ext1
41 uart1        24.000MHz  enable   1 ext1
42 uart0        24.000MHz disable   0 ext1
43 sadc        100.000MHz  enable   0 pclk
44 dmic        100.000MHz disable   0 pclk
45 aic         100.000MHz  enable   1 pclk
46 hash        200.000MHz disable   0 h2clk
47 i2c1        100.000MHz disable   0 pclk
48 i2c0        100.000MHz disable   0 pclk
49 ssi0         50.000MHz  enable   0 cgu_ssi
50 ssi1         50.000MHz disable   0 cgu_ssi
51 ssi_slv     100.000MHz disable   0 pclk
52 msc1        200.000MHz  enable   0 h2clk
53 msc0        200.000MHz  enable   0 h2clk
54 otg1        200.000MHz  enable   1 h2clk
--------------------------------------------------------
56 cpu          24.000MHz  enable   0 ext1
57 apb0         24.000MHz  enable   0 ext1
58 sys_ost      24.000MHz  enable   2 ext1
59 ahb0         24.000MHz  enable   0 ext1
--------------------------------------------------------
61 riscv       200.000MHz  enable   0 h2clk
62 aes         200.000MHz disable   0 h2clk
63 rsa         100.000MHz disable   0 pclk
64 ahb1         24.000MHz  enable   2 ext1
65 gmac        200.000MHz  enable   0 h2clk
66 ipu         200.000MHz  enable   16 h0clk
67 dtrng       100.000MHz disable   0 pclk
68 avpu        200.000MHz  enable   2 h0clk
root@ing-wyze-cam3-a000 ~# cat /opt/trace.txt 
ISP Register Monitor v1.3 initializing
ISP Monitor: initialized region isp-w01 at phys 0x0x10023000 size 0x1000
ISP Monitor: initialized region isp-m0 at phys 0x0x13300000 size 0x100000
ISP Monitor: initialized region isp-w02 at phys 0x0x133e0000 size 0x10000
ISP Monitor: initialized region isp-csi at phys 0x0x10022000 size 0x1000
ISP isp-w01: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x3130322a (delta: 0.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x200 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0x4: 0x1 -> 0x0 (delta: 150.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0x14: 0x200 -> 0x630 (delta: 150.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x4: 0x0 -> 0xe3 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x8: 0x0 -> 0xa0 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x83 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x10: 0x0 -> 0xfa (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x1c: 0x0 -> 0x88 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x20: 0x0 -> 0x4e (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x24: 0x0 -> 0xdd (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x28: 0x0 -> 0x84 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x2c: 0x0 -> 0x5e (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x30: 0x0 -> 0xf0 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x34: 0x0 -> 0xc0 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x38: 0x0 -> 0x36 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x3c: 0x0 -> 0xdb (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x40: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x44: 0x0 -> 0x80 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x48: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x54: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x58: 0x0 -> 0xff (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x5c: 0x0 -> 0x42 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x60: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x64: 0x0 -> 0xc0 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x68: 0x0 -> 0xc0 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x6c: 0x0 -> 0x78 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x70: 0x0 -> 0x43 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x74: 0x0 -> 0x33 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x80: 0x0 -> 0x1f (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x88: 0x0 -> 0x61 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x100: 0x0 -> 0x8a (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x104: 0x0 -> 0x5 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x10c: 0x0 -> 0x40 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x110: 0x0 -> 0xb0 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x114: 0x0 -> 0xc5 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x118: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x11c: 0x0 -> 0x20 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x120: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x124: 0x0 -> 0x48 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x128: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x12c: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x130: 0x0 -> 0x88 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x138: 0x0 -> 0x86 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x13c: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x140: 0x0 -> 0x4 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x144: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x148: 0x0 -> 0x32 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x14c: 0x0 -> 0x80 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x158: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x15c: 0x0 -> 0x60 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x160: 0x0 -> 0x1b (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x164: 0x0 -> 0x18 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x168: 0x0 -> 0x7f (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x16c: 0x0 -> 0x4b (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x174: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x180: 0x0 -> 0x8a (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x184: 0x0 -> 0x5 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x18c: 0x0 -> 0x40 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x190: 0x0 -> 0xb0 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x194: 0x0 -> 0xc5 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x198: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x19c: 0x0 -> 0x9 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1a0: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1a4: 0x0 -> 0x48 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1a8: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1ac: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1b0: 0x0 -> 0x88 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1b8: 0x0 -> 0x86 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1bc: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1c0: 0x0 -> 0x4 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1c4: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1c8: 0x0 -> 0x32 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1cc: 0x0 -> 0x80 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1d8: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1dc: 0x0 -> 0x60 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1e0: 0x0 -> 0x1b (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1e4: 0x0 -> 0x18 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1e8: 0x0 -> 0x7f (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1ec: 0x0 -> 0x4b (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1f4: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x200: 0x0 -> 0x8a (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x204: 0x0 -> 0x5 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x20c: 0x0 -> 0x40 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x210: 0x0 -> 0xb0 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x214: 0x0 -> 0xc5 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x218: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x21c: 0x0 -> 0x9 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x220: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x224: 0x0 -> 0x48 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x228: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x22c: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x230: 0x0 -> 0x88 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x238: 0x0 -> 0x86 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x23c: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x240: 0x0 -> 0x4 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x244: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x248: 0x0 -> 0x32 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x24c: 0x0 -> 0x80 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x258: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x25c: 0x0 -> 0x60 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x260: 0x0 -> 0x1b (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x264: 0x0 -> 0x18 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x268: 0x0 -> 0x7f (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x26c: 0x0 -> 0x4b (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x274: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x280: 0x0 -> 0x8a (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x284: 0x0 -> 0x5 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x28c: 0x0 -> 0x40 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x290: 0x0 -> 0xb0 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x294: 0x0 -> 0xc5 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x298: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x29c: 0x0 -> 0x9 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2a0: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2a4: 0x0 -> 0x48 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2a8: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2ac: 0x0 -> 0xf (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2b0: 0x0 -> 0x88 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2b8: 0x0 -> 0x86 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2bc: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2c0: 0x0 -> 0x4 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2c4: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2c8: 0x0 -> 0x32 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2cc: 0x0 -> 0x80 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2d8: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2dc: 0x0 -> 0x60 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2e0: 0x0 -> 0x1b (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2e4: 0x0 -> 0x18 (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2e8: 0x0 -> 0x7f (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2ec: 0x0 -> 0x4b (delta: 0.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2f4: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x0: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0x0: 0x3130322a -> 0x0 (delta: 980.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0xc: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-w01: [CSI PHY Control] write at offset 0x14: 0x630 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x4: 0xe3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x8: 0xa0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0xc: 0x83 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x10: 0xfa -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x1c: 0x88 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x20: 0x4e -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x24: 0xdd -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x28: 0x84 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x2c: 0x5e -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x30: 0xf0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x34: 0xc0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x38: 0x36 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x3c: 0xdb -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x40: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x44: 0x80 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x48: 0x10 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x54: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x58: 0xff -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x5c: 0x42 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x60: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x64: 0xc0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x68: 0xc0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x6c: 0x78 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x70: 0x43 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x74: 0x33 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x80: 0x1f -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Control] write at offset 0x88: 0x61 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x100: 0x8a -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x104: 0x5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x10c: 0x40 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x110: 0xb0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x114: 0xc5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x118: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x11c: 0x20 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x120: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x124: 0x48 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x128: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x12c: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x130: 0x88 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x138: 0x86 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x13c: 0x10 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x140: 0x4 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x144: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x148: 0x32 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x14c: 0x80 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x158: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x15c: 0x60 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x160: 0x1b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x164: 0x18 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x168: 0x7f -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x16c: 0x4b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x174: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x180: 0x8a -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x184: 0x5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x18c: 0x40 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x190: 0xb0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x194: 0xc5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x198: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x19c: 0x9 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1a0: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1a4: 0x48 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1a8: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1ac: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1b0: 0x88 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1b8: 0x86 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1bc: 0x10 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1c0: 0x4 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1c4: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1c8: 0x32 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1cc: 0x80 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1d8: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1dc: 0x60 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1e0: 0x1b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1e4: 0x18 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1e8: 0x7f -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1ec: 0x4b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI PHY Config] write at offset 0x1f4: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x200: 0x8a -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x204: 0x5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x20c: 0x40 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x210: 0xb0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x214: 0xc5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x218: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x21c: 0x9 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x220: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x224: 0x48 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x228: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x22c: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x230: 0x88 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x238: 0x86 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x23c: 0x10 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x240: 0x4 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x244: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x248: 0x32 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x24c: 0x80 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x258: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x25c: 0x60 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x260: 0x1b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x264: 0x18 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x268: 0x7f -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x26c: 0x4b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x274: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x280: 0x8a -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x284: 0x5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x28c: 0x40 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x290: 0xb0 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x294: 0xc5 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x298: 0x3 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x29c: 0x9 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2a0: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2a4: 0x48 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2a8: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2ac: 0xf -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2b0: 0x88 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2b8: 0x86 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2bc: 0x10 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2c0: 0x4 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2c4: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2c8: 0x32 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2cc: 0x80 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2d8: 0x1 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2dc: 0x60 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2e0: 0x1b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2e4: 0x18 -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2e8: 0x7f -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2ec: 0x4b -> 0x0 (delta: 830.000 ms)
ISP isp-csi: [CSI Lane Config] write at offset 0x2f4: 0x3 -> 0x0 (delta: 830.000 ms)
root@ing-wyze-cam3-a000 ~# 
