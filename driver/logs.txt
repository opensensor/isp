[    8.208335] RTW: 0x140: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208368] RTW: 0x150: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208400] RTW: 0x160: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208433] RTW: 0x170: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208466] RTW: 0x180: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208498] RTW: 0x190: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208531] RTW: 0x1A0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208564] RTW: 0x1B0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208596] RTW: 0x1C0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208629] RTW: 0x1D0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208662] RTW: 0x1E0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208694] RTW: 0x1F0: FF FF FF FF  FF FF FF FF  FF FF FF FF  FF FF FF FF  
[    8.208736] RTW: hal_com_config_channel_plan chplan:0x20
[    8.292648] RTW: [RF_PATH] ver_id.RF_TYPE:RF_1T1R
[    8.292662] RTW: [RF_PATH] HALSPEC's rf_reg_trx_path_bmp:0x11, rf_reg_path_avail_num:1, max_tx_cnt:1
[    8.292669] RTW: [RF_PATH] PG's trx_path_bmp:0x00, max_tx_cnt:0
[    8.292676] RTW: [RF_PATH] Registry's trx_path_bmp:0x00, tx_path_lmt:0, rx_path_lmt:0
[    8.292683] RTW: [RF_PATH] HALDATA's trx_path_bmp:0x11, max_tx_cnt:1
[    8.292689] RTW: [RF_PATH] HALDATA's rf_type:RF_1T1R, NumTotalRFPath:1
[    8.292696] RTW: [TRX_Nss] HALSPEC - tx_nss:1, rx_nss:1
[    8.292703] RTW: [TRX_Nss] Registry - tx_nss:0, rx_nss:0
[    8.292709] RTW: [TRX_Nss] HALDATA - tx_nss:1, rx_nss:1
[    8.293968] RTW: rtw_regsty_chk_target_tx_power_valid return _FALSE for band:0, path:0, rs:0, t:-1
[    8.314031] RTW: rtw_ndev_init(wlan0) if1 mac_addr=4c:31:2d:6a:d0:0d
[    8.327338] RTW: rtw_ndev_init(wlan1) if2 mac_addr=4e:31:2d:6a:d0:0d
[    8.342898] RTW: module init ret=0
[    8.971773] RTW: txpath=0x1, rxpath=0x1
[    8.971785] RTW: txpath_1ss:0x1, num:1
[    9.057651] IPv6: ADDRCONF(NETDEV_UP): wlan0: link is not ready
[   10.743137] RTW: rtw_set_802_11_connect(wlan0)  fw_state=0x00000008
[   11.027301] RTW: start auth
[   11.031965] RTW: auth success, start assoc
[   11.037115] RTW: assoc success
[   11.037207] IPv6: ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
[   11.038680] RTW: ============ STA [e8:9c:25:02:11:0c]  ===================
[   11.038692] RTW: mac_id : 0
[   11.038698] RTW: wireless_mode : 0x0b
[   11.038703] RTW: mimo_type : 0
[   11.038708] RTW: static smps : N
[   11.038714] RTW: bw_mode : 20MHz, ra_bw_mode : 20MHz
[   11.038720] RTW: rate_id : 3
[   11.038726] RTW: rssi : -1 (%), rssi_level : 0
[   11.038732] RTW: is_support_sgi : Y, is_vht_enable : N
[   11.038738] RTW: disable_ra : N, disable_pt : N
[   11.038744] RTW: is_noisy : N
[   11.038749] RTW: txrx_state : 0
[   11.038755] RTW: curr_tx_rate : CCK_1M (L)
[   11.038760] RTW: curr_tx_bw : 20MHz
[   11.038766] RTW: curr_retry_ratio : 0
[   11.038772] RTW: ra_mask : 0x00000000000fffff
[   11.038772] 
[   11.041624] RTW: recv eapol packet 1/4
[   11.042790] RTW: send eapol packet 2/4
[   11.048468] RTW: recv eapol packet 3/4
[   11.048824] RTW: send eapol packet 4/4
[   11.050323] RTW: set pairwise key camid:0, addr:e8:9c:25:02:11:0c, kid:0, type:AES
[   11.052765] RTW: set group key camid:1, addr:e8:9c:25:02:11:0c, kid:2, type:AES
[   13.943580] codec_codec_ctl: set repaly channel...
[   13.943618] cgu_set_rate, parent = 1392000000, rate = 4096000, n = 10875, reg val = 0x22002a7b
[   13.943626] codec_codec_ctl: set sample rate...
[   13.943710] codec_codec_ctl: set device...
[   14.179172] codec_set_device: set device: speaker...
[   26.475535] *** tx_isp_init: EXACT Binary Ninja MCP reference implementation ***
[   26.478009] *** PROBE: tx_isp_platform_probe CALLED for device tx-isp ***
[   26.478028] *** PROBE: ISP device allocated successfully: 85ffc000 ***
[   26.478044] *** PROBE: ISP core registers mapped at 0x13300000 for system_reg_write ***
[   26.478050] *** PROBE: ISP device mutex and spinlock initialized ***
[   26.478057] *** PROBE: Event callback structure initialized at 0x853e3780 (offset 0xc from isp_dev) ***
[   26.478068] parse_rmem_bootarg: Found rmem=29M@0x06300000 (size=0x01d00000)
[   26.478075] *** PROBE: Initialized rmem_addr=0x06300000, size=0x01d00000 ***
[   26.478081] *** PROBE: Platform data: c06b74e0 ***
[   26.478086] *** PROBE: Platform data validation passed ***
[   26.478092] *** REFERENCE DRIVER: Individual subdevices will initialize their own memory regions ***
[   26.478097] *** PLATFORM DEVICES ALREADY REGISTERED IN INIT - SKIPPING DUPLICATE REGISTRATION ***
[   26.478103] *** tx_isp_module_init: EXACT Binary Ninja reference implementation ***
[   26.478108] *** tx_isp_module_init: Registering subdev platform drivers FIRST ***
[   26.478114] *** TX ISP SUBDEV PLATFORM DRIVERS REGISTRATION ***
[   26.495658] All ISP subdev platform drivers registered successfully
[   26.499430] *** tx_isp_create_graph_and_nodes: EXACT Binary Ninja reference implementation ***
[   26.499444] *** Registering platform device 0 from platform data ***
[   26.505811] *** tx_isp_subdev_init: CALLED for device 'isp-w00' ***
[   26.505826] *** tx_isp_subdev_init: pdev=c06b71c0, sd=85219400, ops=c06b77e0 ***
[   26.505832] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.505840] *** tx_isp_subdev_init: ops=c06b77e0, ops->core=c06b7814 ***
[   26.505846] *** tx_isp_subdev_init: ops->core->init=c066d0e8 ***
[   26.505852] *** tx_isp_subdev_init: Set sd->dev=c06b71d0, sd->pdev=c06b71c0 ***
[   26.505859] *** tx_isp_subdev_init: CSI subdev registered at slot 0 ***
[   26.505865] tx_isp_module_init: Module initialized for isp-w00
[   26.505870] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.505877] *** isp-w00: Skipping IRQ request - device has no IRQ resource ***
[   26.505884] tx_isp_subdev_init: platform_get_resource returned c06b72b8 for device isp-w00
[   26.505892] tx_isp_subdev_init: Memory resource found: start=0x10022000, end=0x10022fff, size=0x00001000
[   26.505900] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   26.505906] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   26.505914] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b71c0, sd=85219400, ourISPdev=85ffc000 ***
[   26.505921] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w00' to ourISPdev=85ffc000 ***
[   26.505927] *** DEBUG: Device name comparison - checking 'isp-w00' ***
[   26.505932] *** DEBUG: About to check device name matches ***
[   26.505957] *** CSI BASIC REGISTERS SET: b0022000 (from tx_isp_subdev_init) ***
[   26.505964] *** LINKED CSI device: 85219400, regs: b0022000 ***
[   26.505970] *** CSI PROBE: Set dev_priv to csi_dev 85219400 AFTER subdev_init ***
[   26.505976] *** CSI PROBE: Set host_priv to csi_dev 85219400 AFTER subdev_init ***
[   26.505983] *** CSI PROBE: Using register mapping from tx_isp_subdev_init: b0022000 ***
[   26.505989] *** CSI PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   26.506009] *** Platform device 0 (isp-w00) registered successfully ***
[   26.506015] *** Registering platform device 1 from platform data ***
[   26.508498] *** VIC PROBE: IRQ numbers initialized to 38 ***
[   26.508512] *** VIC PROBE: Primary VIC registers mapped at 0x133e0000 -> b33e0000 ***
[   26.508519] *** VIC PROBE: VIC control registers mapped at 0x10023000 -> b0023000 ***
[   26.508525] *** VIC PROBE: Hardware IRQ function pointers set using SAFE struct members (tx_isp_enable/disable_irq) ***
[   26.508532] *** VIC PROBE: Secondary VIC register test - 0x1e0 = 0x00000000 (mapping verified) ***
[   26.508538] *** VIC PROBE: VIC interrupt registers will be configured during tx_isp_vic_start ***
[   26.508543] *** BINARY NINJA MCP: VIC buffer management ENABLED - following reference driver ***
[   26.508548] *** VIC will operate in FULL mode with complete buffer operations ***
[   26.508554] *** BINARY NINJA MCP: VIC full initialization complete - buffer management ENABLED ***
[   26.508561] *** VIC PROBE: Initialized default dimensions 1920x1080 and critical fields ***
[   26.508567] *** VIC PROBE: Event callback structure stored in VIC device field ***
[   26.508573] *** VIC PROBE: Stored vic_dev pointer 8540e000 in subdev dev_priv ***
[   26.508579] *** VIC PROBE: Set host_priv to vic_dev 8540e000 for Binary Ninja compatibility ***
[   26.508585] *** VIC PROBE: Skipping tx_isp_vic_hw_init - working branch configures interrupts during VIC operations ***
[   26.508592] *** tx_isp_subdev_init: CALLED for device 'isp-w02' ***
[   26.508600] *** tx_isp_subdev_init: pdev=c06b72d8, sd=8540e000, ops=c06b7760 ***
[   26.508606] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.508613] *** tx_isp_subdev_init: ops=c06b7760, ops->core=c06b777c ***
[   26.508619] *** tx_isp_subdev_init: ops->core->init=c06828ec ***
[   26.508626] *** tx_isp_subdev_init: Set sd->dev=c06b72e8, sd->pdev=c06b72d8 ***
[   26.508632] *** tx_isp_subdev_init: VIC device linked and registered at slot 1 ***
[   26.508638] tx_isp_module_init: Module initialized for isp-w02
[   26.508644] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.508652] *** tx_isp_request_irq: platform_get_irq returned 38 for device isp-w02 ***
[   26.508658] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 38 (device: isp-w02) ***
[   26.508668] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c0675760, thread=c0668584, flags=0x80, name=isp-w02, dev_id=85ffc000) ***
[   26.508677] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c0675760, thread=c0668584 ***
[   26.515767] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   26.515778] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[   26.515785] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[   26.515794] tx_isp_subdev_init: platform_get_resource returned c06b73d0 for device isp-w02
[   26.515802] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[   26.515810] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   26.515816] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   26.515824] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b72d8, sd=8540e000, ourISPdev=85ffc000 ***
[   26.515831] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=85ffc000 ***
[   26.515837] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   26.515842] *** DEBUG: About to check device name matches ***
[   26.515848] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   26.515854] *** DEBUG: Retrieved vic_dev from subdev data: 8540e000 ***
[   26.515860] *** DEBUG: About to set ourISPdev->vic_dev = 8540e000 ***
[   26.515866] *** DEBUG: ourISPdev before linking: 85ffc000 ***
[   26.515871] *** DEBUG: ourISPdev->vic_dev set to: 8540e000 ***
[   26.515877] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   26.515882] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   26.515888] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   26.515896] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   26.515901] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   26.515906] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   26.515912] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   26.515935] *** Platform device 1 (isp-w02) registered successfully ***
[   26.515942] *** Registering platform device 2 from platform data ***
[   26.516260] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[   26.516275] *** tx_isp_subdev_init: pdev=c06b70e8, sd=84cde000, ops=c06b8644 ***
[   26.516282] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.516288] *** tx_isp_subdev_init: ops=c06b8644, ops->core=c06b8664 ***
[   26.516294] *** tx_isp_subdev_init: ops->core->init=c068f02c ***
[   26.516301] *** tx_isp_subdev_init: Set sd->dev=c06b70f8, sd->pdev=c06b70e8 ***
[   26.516308] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b8644 ***
[   26.516314] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06b77e0 ***
[   26.516320] tx_isp_module_init: Module initialized for isp-w01
[   26.516326] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.516334] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b70e8, sd=84cde000, ourISPdev=85ffc000 ***
[   26.516341] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=85ffc000 ***
[   26.516347] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[   26.516352] *** DEBUG: About to check device name matches ***
[   26.516358] *** DEBUG: VIN device name matched! Setting up VIN device ***
[   26.516364] *** LINKED VIN device: 84cde000 ***
[   26.516371] *** VIN SUBDEV OPS CONFIGURED: core=c06b8664, video=c06b8658, s_stream=c068f224 ***
[   26.516378] *** REGISTERED VIN SUBDEV AT SLOT 2 WITH VIDEO OPS ***
[   26.516384] *** VIN PROBE: Set dev_priv to vin_dev 84cde000 AFTER subdev_init ***
[   26.516390] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   26.516409] *** Platform device 2 (isp-w01) registered successfully ***
[   26.516416] *** Registering platform device 3 from platform data ***
[   26.518907] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   26.518922] *** tx_isp_subdev_init: pdev=c06b6fa8, sd=84cf2a00, ops=c06b7894 ***
[   26.518928] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.518936] *** tx_isp_subdev_init: ops=c06b7894, ops->core=c06be71c ***
[   26.518941] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   26.518948] *** tx_isp_subdev_init: Set sd->dev=c06b6fb8, sd->pdev=c06b6fa8 ***
[   26.518954] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b7894 ***
[   26.518961] *** tx_isp_subdev_init: ops->sensor=c06be710, csi_subdev_ops=c06b77e0 ***
[   26.518967] tx_isp_module_init: Module initialized for isp-fs
[   26.518973] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.518979] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   26.518986] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   26.518992] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   26.518999] *** FS PROBE: Set dev_priv to fs_dev 84cf2a00 AFTER subdev_init ***
[   26.519006] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   26.519026] *** Platform device 3 (isp-fs) registered successfully ***
[   26.519032] *** Registering platform device 4 from platform data ***
[   26.521616] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   26.521629] *** tx_isp_create_core_device: Creating ISP core device ***
[   26.521646] *** tx_isp_create_core_device: Core device created successfully: 85fbe000 ***
[   26.521653] *** CORE PROBE: Set dev_priv to core_dev 85fbe000 ***
[   26.521659] *** CORE PROBE: Set host_priv to core_dev 85fbe000 - PREVENTS BadVA CRASH ***
[   26.521666] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   26.521673] *** tx_isp_subdev_init: pdev=c06b6e70, sd=85fbe000, ops=c06b7598 ***
[   26.521679] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.521686] *** tx_isp_subdev_init: ops=c06b7598, ops->core=c06b75c4 ***
[   26.521692] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   26.521699] *** tx_isp_subdev_init: Set sd->dev=c06b6e80, sd->pdev=c06b6e70 ***
[   26.521705] *** tx_isp_subdev_init: Core ISP subdev registered at slot 3 ***
[   26.521711] tx_isp_module_init: Module initialized for isp-m0
[   26.521717] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.521725] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   26.521732] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   26.521742] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c0675760, thread=c0668584, flags=0x80, name=isp-m0, dev_id=85ffc000) ***
[   26.521750] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c0675760, thread=c0668584 ***
[   26.528080] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   26.528091] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   26.528098] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   26.528106] tx_isp_subdev_init: platform_get_resource returned c06b6f70 for device isp-m0
[   26.528114] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   26.528124] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   26.528130] *** tx_isp_subdev_init: Clock count stored: 3 ***
[   26.528138] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b6e70, sd=85fbe000, ourISPdev=85ffc000 ***
[   26.528146] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=85ffc000 ***
[   26.528151] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   26.528156] *** DEBUG: About to check device name matches ***
[   26.528162] *** DEBUG: CORE device name matched! Setting up Core device ***
[   26.528168] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   26.528176] *** tx_isp_link_core_device: Linking core device 85fbe000 to ISP device 85ffc000 ***
[   26.528182] *** tx_isp_link_core_device: Core device linked successfully ***
[   26.528188] *** Core subdev already registered at slot 3: 85fbe000 ***
[   26.528194] *** LINKED CORE device: 85fbe000 ***
[   26.528200] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   26.528205] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   26.528212] *** tx_isp_core_device_init: Initializing core device: 85fbe000 ***
[   26.528223] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   26.528228] *** tx_isp_core_device_init: Core device initialized successfully ***
[   26.528234] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   26.528241] *** tx_isp_link_core_device: Linking core device 85fbe000 to ISP device 85ffc000 ***
[   26.528247] *** tx_isp_link_core_device: Core device linked successfully ***
[   26.528253] *** Core subdev already registered at slot 3: 85fbe000 ***
[   26.528267] *** tx_isp_core_probe: Assigned frame_channels=85fbe400 to core_dev ***
[   26.528272] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   26.528278] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   26.528284] *** tx_isp_core_probe: Calling sensor_early_init ***
[   26.528289] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   26.528295] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   26.528300] *** tx_isp_core_probe: Core device setup complete ***
[   26.528306] ***   - Core device: 85fbe000 ***
[   26.528311] ***   - Channel count: 6 ***
[   26.528316] ***   - Linked to ISP device: 85ffc000 ***
[   26.528322] *** tx_isp_core_probe: Initializing core tuning system ***
[   26.528327] isp_core_tuning_init: Initializing tuning data structure
[   26.528340] isp_core_tuning_init: Tuning data structure initialized at 84bf6000
[   26.528346] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   26.528351] *** SAFE: mode_flag properly initialized using struct member access ***
[   26.528356] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   26.528361] *** tx_isp_core_probe: Set platform driver data ***
[   26.528366] *** tx_isp_core_probe: Set global core device reference ***
[   26.528372] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   26.528378] ***   - Core device: 85fbe000 ***
[   26.528383] ***   - Tuning device: 84bf6000 ***
[   26.528388] *** tx_isp_core_probe: Creating frame channel devices ***
[   26.528393] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   26.528745] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   26.536148] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   26.538662] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   26.541366] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   26.541377] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   26.541382] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   26.541388] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   26.541394] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   26.541402] tisp_code_create_tuning_node: Allocated dynamic major 251
[   26.549402] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   26.549414] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   26.549419] *** tx_isp_core_probe: Core probe completed successfully ***
[   26.549440] *** Platform device 4 (isp-m0) registered successfully ***
[   26.549446] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   26.549468] *** Created /proc/jz/isp directory ***
[   26.549476] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   26.549485] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   26.549492] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   26.549499] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c0684ab8 ***
[   26.549506] *** PROC ENTRY FIX: Using ISP device 85ffc000 instead of VIC device 8540e000 for isp-w02 ***
[   26.549515] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   26.549522] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   26.549530] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   26.549540] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   26.549548] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   26.549554] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   26.549560] *** Misc device registration handled via main tx-isp device ***
[   26.549564] *** Misc device registration handled via main tx-isp device ***
[   26.549570] *** Misc device registration handled via main tx-isp device ***
[   26.549575] *** Misc device registration handled via main tx-isp device ***
[   26.549580] *** Misc device registration handled via main tx-isp device ***
[   26.549586] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   26.549594] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   26.549602] *** Frame channel 1 initialized: 640x360, state=2 ***
[   26.549608] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   26.549614] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 8540e000 ***
[   26.549620] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   26.549625] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   26.549632] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   26.549638] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   26.549644] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   26.549650] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   26.549655] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   26.549660] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   26.549666] *** PROBE: Binary Ninja reference implementation complete ***
[   26.556380] *** tx_isp_init: Platform device and driver registered successfully ***
[   27.436686] === gc2053 SENSOR MODULE INIT ===
[   27.445582] gc2053 I2C driver registered, waiting for device creation by ISP
[   29.860676] ISP opened successfully
[   29.861013] ISP IOCTL: cmd=0x805056c1 arg=0x76eddd60
[   29.861028] subdev_sensor_ops_ioctl: cmd=0x2000000
[   29.861033] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[   29.861039] *** Creating I2C sensor device on adapter 0 ***
[   29.861048] *** Creating I2C device: gc2053 at 0x37 ***
[   29.861053] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[   29.861061] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[   29.861067] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[   29.870531] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[   29.870839] === GC2053 SENSOR PROBE START ===
[   29.870855] sensor_probe: client=85571c00, addr=0x37, adapter=84074c10 (i2c0)
[   29.870861] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[   29.870867] Requesting reset GPIO 18
[   29.870875] GPIO reset sequence: HIGH -> LOW -> HIGH
[   30.099152] GPIO reset sequence completed successfully
[   30.099165] === GPIO INITIALIZATION COMPLETE ===
[   30.099175] sensor_probe: Initialized sensor info - name=gc2053, i2c_addr=0x37
[   30.099190] sensor_probe: data_interface=1, sensor_max_fps=30
[   30.099196] sensor_probe: MIPI 30fps
[   30.099203] *** tx_isp_subdev_init: CALLED for device 'gc2053' ***
[   30.099210] *** tx_isp_subdev_init: pdev=c06e1168, sd=85ffb000, ops=c06e1248 ***
[   30.099216] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   30.099223] *** tx_isp_subdev_init: ops=c06e1248, ops->core=c06e1274 ***
[   30.099229] *** tx_isp_subdev_init: ops->core->init=c06de6bc ***
[   30.099236] *** tx_isp_subdev_init: Set sd->dev=c06e1178, sd->pdev=c06e1168 ***
[   30.099243] *** tx_isp_subdev_init: DETECTED SENSOR SUBDEV - ops=c06e1248, ops->sensor=c06e125c ***
[   30.099248] *** tx_isp_subdev_init: Set up sensor module notify handler ***
[   30.099256] *** tx_isp_subdev_init: SENSOR subdev registered at slot 4, sd=85ffb000 ***
[   30.099262] *** tx_isp_subdev_init: SENSOR ops=c06e1248, ops->sensor=c06e125c ***
[   30.099268] *** tx_isp_subdev_init: Core state transitions handled by slake_module ***
[   30.099274] tx_isp_module_init: Module initialized for (null)
[   30.099280] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   30.099288] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06e1168, sd=85ffb000, ourISPdev=85ffc000 ***
[   30.099295] *** tx_isp_subdev_auto_link: Auto-linking device 'gc2053' to ourISPdev=85ffc000 ***
[   30.099300] *** DEBUG: Device name comparison - checking 'gc2053' ***
[   30.099306] *** DEBUG: About to check device name matches ***
[   30.099312] *** DETECTED SENSOR DEVICE: 'gc2053' - checking for existing registration ***
[   30.099319] *** SENSOR 'gc2053' registered at subdev index 5 ***
[   30.099326] *** SENSOR subdev: 85ffb000, ops: c06e1248 ***
[   30.099332] *** SENSOR ops->sensor: c06e125c ***
[   30.099336] *** SENSOR REGISTERED: Caching sensor dimensions from /proc/jz/sensor/ ***
[   30.099342] *** cache_sensor_dimensions_from_proc: Reading sensor dimensions during probe ***
[   30.099416] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   30.099425] *** cache_sensor_dimensions_from_proc: Successfully cached 1920x1080 ***
[   30.099432] sensor_probe: I2C client association complete
[   30.099440]   sd=85ffb000, client=85571c00, addr=0x37, adapter=i2c0
[   30.099445] === TESTING I2C COMMUNICATION AFTER GPIO RESET ===
[   30.099454] sensor_read: reg=0xf0, client=85571c00, adapter=i2c0, addr=0x37
[   30.099952] sensor_read: reg=0xf0 value=0x20 SUCCESS
[   30.099960] I2C test read (0xf0): ret=0, val=0x20 (expected 0x20)
[   30.099966] *** SUCCESS: I2C communication working after GPIO reset! ***
[   30.099974] sensor_read: reg=0xf1, client=85571c00, adapter=i2c0, addr=0x37
[   30.100374] sensor_read: reg=0xf1 value=0x53 SUCCESS
[   30.100382] I2C test read (0xf1): ret=0, val=0x53 (expected 0x53)
[   30.100388] === I2C COMMUNICATION TEST COMPLETE ===
[   30.100395] Registering gc2053 with ISP framework (sd=85ffb000, sensor=85ffb000)
[   30.100401] gc2053 registered with ISP framework successfully
[   30.100422] *** MIPS-SAFE: I2C device created successfully at 0x85571c00 ***
[   30.100429] *** MIPS-SAFE: Module reference acquired for gc2053 ***
[   30.100435] *** MIPS-SAFE: Sensor subdev data found, device ready ***
[   30.100442] *** I2C DEVICE READY: gc2053 at 0x37 (MIPS-safe) ***
[   30.100448] *** I2C sensor device created successfully: gc2053 at 0x37 ***
[   30.100484] ISP IOCTL: cmd=0xc050561a arg=0x7fc1bf68
[   30.100491] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 0
[   30.100498] TX_ISP_SENSOR_ENUM_INPUT: Returning sensor 'gc2053' at index 0
[   30.100506] ISP IOCTL: cmd=0xc050561a arg=0x7fc1bf68
[   30.100512] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 1
[   30.100518] TX_ISP_SENSOR_ENUM_INPUT: No sensor at index 1 - returning error to end enumeration
[   30.100526] ISP IOCTL: cmd=0xc0045627 arg=0x7fc1bfc0
[   30.100536] ISP IOCTL: cmd=0x800856d5 arg=0x7fc1bfb8
[   30.100542] TX_ISP_GET_BUF: IOCTL handler called
[   30.100548] TX_ISP_GET_BUF: core_dev=85fbe000, isp_dev=85ffc000
[   30.100555] TX_ISP_GET_BUF: Using dimensions 1920x1080 from core device
[   30.100562] TX_ISP_GET_BUF: Returning buffer size=4685424, paddr=0x6300000
root@ing-wyze-cam3-a000 ~# dmesg 
[   26.508668] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c0675760, thread=c0668584, flags=0x80, name=isp-w02, dev_id=85ffc000) ***
[   26.508677] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c0675760, thread=c0668584 ***
[   26.515767] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   26.515778] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[   26.515785] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[   26.515794] tx_isp_subdev_init: platform_get_resource returned c06b73d0 for device isp-w02
[   26.515802] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[   26.515810] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   26.515816] *** tx_isp_subdev_init: Clock count stored: 2 ***
[   26.515824] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b72d8, sd=8540e000, ourISPdev=85ffc000 ***
[   26.515831] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=85ffc000 ***
[   26.515837] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[   26.515842] *** DEBUG: About to check device name matches ***
[   26.515848] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[   26.515854] *** DEBUG: Retrieved vic_dev from subdev data: 8540e000 ***
[   26.515860] *** DEBUG: About to set ourISPdev->vic_dev = 8540e000 ***
[   26.515866] *** DEBUG: ourISPdev before linking: 85ffc000 ***
[   26.515871] *** DEBUG: ourISPdev->vic_dev set to: 8540e000 ***
[   26.515877] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[   26.515882] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[   26.515888] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[   26.515896] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   26.515901] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[   26.515906] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[   26.515912] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[   26.515935] *** Platform device 1 (isp-w02) registered successfully ***
[   26.515942] *** Registering platform device 2 from platform data ***
[   26.516260] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[   26.516275] *** tx_isp_subdev_init: pdev=c06b70e8, sd=84cde000, ops=c06b8644 ***
[   26.516282] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.516288] *** tx_isp_subdev_init: ops=c06b8644, ops->core=c06b8664 ***
[   26.516294] *** tx_isp_subdev_init: ops->core->init=c068f02c ***
[   26.516301] *** tx_isp_subdev_init: Set sd->dev=c06b70f8, sd->pdev=c06b70e8 ***
[   26.516308] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b8644 ***
[   26.516314] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06b77e0 ***
[   26.516320] tx_isp_module_init: Module initialized for isp-w01
[   26.516326] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.516334] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b70e8, sd=84cde000, ourISPdev=85ffc000 ***
[   26.516341] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=85ffc000 ***
[   26.516347] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[   26.516352] *** DEBUG: About to check device name matches ***
[   26.516358] *** DEBUG: VIN device name matched! Setting up VIN device ***
[   26.516364] *** LINKED VIN device: 84cde000 ***
[   26.516371] *** VIN SUBDEV OPS CONFIGURED: core=c06b8664, video=c06b8658, s_stream=c068f224 ***
[   26.516378] *** REGISTERED VIN SUBDEV AT SLOT 2 WITH VIDEO OPS ***
[   26.516384] *** VIN PROBE: Set dev_priv to vin_dev 84cde000 AFTER subdev_init ***
[   26.516390] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[   26.516409] *** Platform device 2 (isp-w01) registered successfully ***
[   26.516416] *** Registering platform device 3 from platform data ***
[   26.518907] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[   26.518922] *** tx_isp_subdev_init: pdev=c06b6fa8, sd=84cf2a00, ops=c06b7894 ***
[   26.518928] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.518936] *** tx_isp_subdev_init: ops=c06b7894, ops->core=c06be71c ***
[   26.518941] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   26.518948] *** tx_isp_subdev_init: Set sd->dev=c06b6fb8, sd->pdev=c06b6fa8 ***
[   26.518954] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b7894 ***
[   26.518961] *** tx_isp_subdev_init: ops->sensor=c06be710, csi_subdev_ops=c06b77e0 ***
[   26.518967] tx_isp_module_init: Module initialized for isp-fs
[   26.518973] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.518979] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[   26.518986] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[   26.518992] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[   26.518999] *** FS PROBE: Set dev_priv to fs_dev 84cf2a00 AFTER subdev_init ***
[   26.519006] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[   26.519026] *** Platform device 3 (isp-fs) registered successfully ***
[   26.519032] *** Registering platform device 4 from platform data ***
[   26.521616] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[   26.521629] *** tx_isp_create_core_device: Creating ISP core device ***
[   26.521646] *** tx_isp_create_core_device: Core device created successfully: 85fbe000 ***
[   26.521653] *** CORE PROBE: Set dev_priv to core_dev 85fbe000 ***
[   26.521659] *** CORE PROBE: Set host_priv to core_dev 85fbe000 - PREVENTS BadVA CRASH ***
[   26.521666] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[   26.521673] *** tx_isp_subdev_init: pdev=c06b6e70, sd=85fbe000, ops=c06b7598 ***
[   26.521679] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   26.521686] *** tx_isp_subdev_init: ops=c06b7598, ops->core=c06b75c4 ***
[   26.521692] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[   26.521699] *** tx_isp_subdev_init: Set sd->dev=c06b6e80, sd->pdev=c06b6e70 ***
[   26.521705] *** tx_isp_subdev_init: Core ISP subdev registered at slot 3 ***
[   26.521711] tx_isp_module_init: Module initialized for isp-m0
[   26.521717] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   26.521725] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[   26.521732] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[   26.521742] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c0675760, thread=c0668584, flags=0x80, name=isp-m0, dev_id=85ffc000) ***
[   26.521750] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c0675760, thread=c0668584 ***
[   26.528080] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[   26.528091] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[   26.528098] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[   26.528106] tx_isp_subdev_init: platform_get_resource returned c06b6f70 for device isp-m0
[   26.528114] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[   26.528124] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[   26.528130] *** tx_isp_subdev_init: Clock count stored: 3 ***
[   26.528138] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b6e70, sd=85fbe000, ourISPdev=85ffc000 ***
[   26.528146] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=85ffc000 ***
[   26.528151] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[   26.528156] *** DEBUG: About to check device name matches ***
[   26.528162] *** DEBUG: CORE device name matched! Setting up Core device ***
[   26.528168] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[   26.528176] *** tx_isp_link_core_device: Linking core device 85fbe000 to ISP device 85ffc000 ***
[   26.528182] *** tx_isp_link_core_device: Core device linked successfully ***
[   26.528188] *** Core subdev already registered at slot 3: 85fbe000 ***
[   26.528194] *** LINKED CORE device: 85fbe000 ***
[   26.528200] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[   26.528205] *** tx_isp_core_probe: Core subdev initialized successfully ***
[   26.528212] *** tx_isp_core_device_init: Initializing core device: 85fbe000 ***
[   26.528223] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[   26.528228] *** tx_isp_core_device_init: Core device initialized successfully ***
[   26.528234] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[   26.528241] *** tx_isp_link_core_device: Linking core device 85fbe000 to ISP device 85ffc000 ***
[   26.528247] *** tx_isp_link_core_device: Core device linked successfully ***
[   26.528253] *** Core subdev already registered at slot 3: 85fbe000 ***
[   26.528267] *** tx_isp_core_probe: Assigned frame_channels=85fbe400 to core_dev ***
[   26.528272] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[   26.528278] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[   26.528284] *** tx_isp_core_probe: Calling sensor_early_init ***
[   26.528289] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[   26.528295] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[   26.528300] *** tx_isp_core_probe: Core device setup complete ***
[   26.528306] ***   - Core device: 85fbe000 ***
[   26.528311] ***   - Channel count: 6 ***
[   26.528316] ***   - Linked to ISP device: 85ffc000 ***
[   26.528322] *** tx_isp_core_probe: Initializing core tuning system ***
[   26.528327] isp_core_tuning_init: Initializing tuning data structure
[   26.528340] isp_core_tuning_init: Tuning data structure initialized at 84bf6000
[   26.528346] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   26.528351] *** SAFE: mode_flag properly initialized using struct member access ***
[   26.528356] *** tx_isp_core_probe: Tuning init SUCCESS ***
[   26.528361] *** tx_isp_core_probe: Set platform driver data ***
[   26.528366] *** tx_isp_core_probe: Set global core device reference ***
[   26.528372] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[   26.528378] ***   - Core device: 85fbe000 ***
[   26.528383] ***   - Tuning device: 84bf6000 ***
[   26.528388] *** tx_isp_core_probe: Creating frame channel devices ***
[   26.528393] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[   26.528745] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[   26.536148] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[   26.538662] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[   26.541366] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[   26.541377] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[   26.541382] *** tx_isp_core_probe: Frame channel devices created successfully ***
[   26.541388] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[   26.541394] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   26.541402] tisp_code_create_tuning_node: Allocated dynamic major 251
[   26.549402] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[   26.549414] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[   26.549419] *** tx_isp_core_probe: Core probe completed successfully ***
[   26.549440] *** Platform device 4 (isp-m0) registered successfully ***
[   26.549446] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[   26.549468] *** Created /proc/jz/isp directory ***
[   26.549476] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[   26.549485] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[   26.549492] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[   26.549499] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c0684ab8 ***
[   26.549506] *** PROC ENTRY FIX: Using ISP device 85ffc000 instead of VIC device 8540e000 for isp-w02 ***
[   26.549515] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[   26.549522] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[   26.549530] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[   26.549540] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[   26.549548] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[   26.549554] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[   26.549560] *** Misc device registration handled via main tx-isp device ***
[   26.549564] *** Misc device registration handled via main tx-isp device ***
[   26.549570] *** Misc device registration handled via main tx-isp device ***
[   26.549575] *** Misc device registration handled via main tx-isp device ***
[   26.549580] *** Misc device registration handled via main tx-isp device ***
[   26.549586] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[   26.549594] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[   26.549602] *** Frame channel 1 initialized: 640x360, state=2 ***
[   26.549608] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[   26.549614] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 8540e000 ***
[   26.549620] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[   26.549625] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[   26.549632] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[   26.549638] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[   26.549644] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[   26.549650] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[   26.549655] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[   26.549660] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[   26.549666] *** PROBE: Binary Ninja reference implementation complete ***
[   26.556380] *** tx_isp_init: Platform device and driver registered successfully ***
[   27.436686] === gc2053 SENSOR MODULE INIT ===
[   27.445582] gc2053 I2C driver registered, waiting for device creation by ISP
[   29.860676] ISP opened successfully
[   29.861013] ISP IOCTL: cmd=0x805056c1 arg=0x76eddd60
[   29.861028] subdev_sensor_ops_ioctl: cmd=0x2000000
[   29.861033] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[   29.861039] *** Creating I2C sensor device on adapter 0 ***
[   29.861048] *** Creating I2C device: gc2053 at 0x37 ***
[   29.861053] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[   29.861061] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[   29.861067] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[   29.870531] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[   29.870839] === GC2053 SENSOR PROBE START ===
[   29.870855] sensor_probe: client=85571c00, addr=0x37, adapter=84074c10 (i2c0)
[   29.870861] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[   29.870867] Requesting reset GPIO 18
[   29.870875] GPIO reset sequence: HIGH -> LOW -> HIGH
[   30.099152] GPIO reset sequence completed successfully
[   30.099165] === GPIO INITIALIZATION COMPLETE ===
[   30.099175] sensor_probe: Initialized sensor info - name=gc2053, i2c_addr=0x37
[   30.099190] sensor_probe: data_interface=1, sensor_max_fps=30
[   30.099196] sensor_probe: MIPI 30fps
[   30.099203] *** tx_isp_subdev_init: CALLED for device 'gc2053' ***
[   30.099210] *** tx_isp_subdev_init: pdev=c06e1168, sd=85ffb000, ops=c06e1248 ***
[   30.099216] *** tx_isp_subdev_init: ourISPdev=85ffc000 ***
[   30.099223] *** tx_isp_subdev_init: ops=c06e1248, ops->core=c06e1274 ***
[   30.099229] *** tx_isp_subdev_init: ops->core->init=c06de6bc ***
[   30.099236] *** tx_isp_subdev_init: Set sd->dev=c06e1178, sd->pdev=c06e1168 ***
[   30.099243] *** tx_isp_subdev_init: DETECTED SENSOR SUBDEV - ops=c06e1248, ops->sensor=c06e125c ***
[   30.099248] *** tx_isp_subdev_init: Set up sensor module notify handler ***
[   30.099256] *** tx_isp_subdev_init: SENSOR subdev registered at slot 4, sd=85ffb000 ***
[   30.099262] *** tx_isp_subdev_init: SENSOR ops=c06e1248, ops->sensor=c06e125c ***
[   30.099268] *** tx_isp_subdev_init: Core state transitions handled by slake_module ***
[   30.099274] tx_isp_module_init: Module initialized for (null)
[   30.099280] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[   30.099288] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06e1168, sd=85ffb000, ourISPdev=85ffc000 ***
[   30.099295] *** tx_isp_subdev_auto_link: Auto-linking device 'gc2053' to ourISPdev=85ffc000 ***
[   30.099300] *** DEBUG: Device name comparison - checking 'gc2053' ***
[   30.099306] *** DEBUG: About to check device name matches ***
[   30.099312] *** DETECTED SENSOR DEVICE: 'gc2053' - checking for existing registration ***
[   30.099319] *** SENSOR 'gc2053' registered at subdev index 5 ***
[   30.099326] *** SENSOR subdev: 85ffb000, ops: c06e1248 ***
[   30.099332] *** SENSOR ops->sensor: c06e125c ***
[   30.099336] *** SENSOR REGISTERED: Caching sensor dimensions from /proc/jz/sensor/ ***
[   30.099342] *** cache_sensor_dimensions_from_proc: Reading sensor dimensions during probe ***
[   30.099416] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   30.099425] *** cache_sensor_dimensions_from_proc: Successfully cached 1920x1080 ***
[   30.099432] sensor_probe: I2C client association complete
[   30.099440]   sd=85ffb000, client=85571c00, addr=0x37, adapter=i2c0
[   30.099445] === TESTING I2C COMMUNICATION AFTER GPIO RESET ===
[   30.099454] sensor_read: reg=0xf0, client=85571c00, adapter=i2c0, addr=0x37
[   30.099952] sensor_read: reg=0xf0 value=0x20 SUCCESS
[   30.099960] I2C test read (0xf0): ret=0, val=0x20 (expected 0x20)
[   30.099966] *** SUCCESS: I2C communication working after GPIO reset! ***
[   30.099974] sensor_read: reg=0xf1, client=85571c00, adapter=i2c0, addr=0x37
[   30.100374] sensor_read: reg=0xf1 value=0x53 SUCCESS
[   30.100382] I2C test read (0xf1): ret=0, val=0x53 (expected 0x53)
[   30.100388] === I2C COMMUNICATION TEST COMPLETE ===
[   30.100395] Registering gc2053 with ISP framework (sd=85ffb000, sensor=85ffb000)
[   30.100401] gc2053 registered with ISP framework successfully
[   30.100422] *** MIPS-SAFE: I2C device created successfully at 0x85571c00 ***
[   30.100429] *** MIPS-SAFE: Module reference acquired for gc2053 ***
[   30.100435] *** MIPS-SAFE: Sensor subdev data found, device ready ***
[   30.100442] *** I2C DEVICE READY: gc2053 at 0x37 (MIPS-safe) ***
[   30.100448] *** I2C sensor device created successfully: gc2053 at 0x37 ***
[   30.100484] ISP IOCTL: cmd=0xc050561a arg=0x7fc1bf68
[   30.100491] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 0
[   30.100498] TX_ISP_SENSOR_ENUM_INPUT: Returning sensor 'gc2053' at index 0
[   30.100506] ISP IOCTL: cmd=0xc050561a arg=0x7fc1bf68
[   30.100512] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 1
[   30.100518] TX_ISP_SENSOR_ENUM_INPUT: No sensor at index 1 - returning error to end enumeration
[   30.100526] ISP IOCTL: cmd=0xc0045627 arg=0x7fc1bfc0
[   30.100536] ISP IOCTL: cmd=0x800856d5 arg=0x7fc1bfb8
[   30.100542] TX_ISP_GET_BUF: IOCTL handler called
[   30.100548] TX_ISP_GET_BUF: core_dev=85fbe000, isp_dev=85ffc000
[   30.100555] TX_ISP_GET_BUF: Using dimensions 1920x1080 from core device
[   30.100562] TX_ISP_GET_BUF: Returning buffer size=4685424, paddr=0x6300000
[   30.184108] ISP IOCTL: cmd=0x800856d4 arg=0x7fc1bfb8
[   30.184122] TX_ISP_SET_BUF: addr=0x6300000 size=0
[   30.184354] ISP IOCTL: cmd=0x40045626 arg=0x7fc1bfd0
[   30.184368] subdev_sensor_ops_ioctl: cmd=0x2000003
[   30.184373] subdev_sensor_ops_ioctl: IOCTL 0x2000003 - Get sensor input
[   30.184380] subdev_sensor_ops_ioctl: Auto-selected first sensor at slot 0 as index 0
[   30.184385] subdev_sensor_ops_ioctl: Returning current sensor index 0
[   30.184394] ISP IOCTL: cmd=0x80045612 arg=0x0
[   30.184401] *** tx_isp_video_s_stream: EXACT Binary Ninja reference implementation - enable=1 ***
[   30.184407] === ISP Subdevice Array Status ===
[   30.184414]   [0]: isp-w00 (sd=85219400)
[   30.184421]   [1]: isp-w02 (sd=8540e000)
[   30.184428]   [2]: isp-w01 (sd=84cde000)
[   30.184434]   [3]: isp-m0 (sd=85fbe000)
[   30.184441]   [4]: gc2053 (sd=85ffb000)
[   30.184447]   [5]: gc2053 (sd=85ffb000)
[   30.184452]   [6]: (empty)
[   30.184457]   [7]: (empty)
[   30.184462]   [8]: (empty)
[   30.184467]   [9]: (empty)
[   30.184472]   [10]: (empty)
[   30.184477]   [11]: (empty)
[   30.184482]   [12]: (empty)
[   30.184487]   [13]: (empty)
[   30.184492]   [14]: (empty)
[   30.184497]   [15]: (empty)
[   30.184502] === End Subdevice Array ===
[   30.184507] *** tx_isp_video_s_stream: STREAM ON - Initializing core first ***
[   30.184512] *** tx_isp_video_s_stream: VIC state is 1, calling activate_module ***
[   30.184518] *** ispcore_activate_module: Fixed for our struct layouts ***
[   30.184524] *** VIC device in state 1, proceeding with activation ***
[   30.184530] *** CLOCK CONFIGURATION SECTION: clk_array=  (null), clk_count=2 ***
[   30.184535] *** SUBDEVICE VALIDATION SECTION ***
[   30.184540] VIC device state set to 2 (activated)
[   30.184545] *** CRITICAL FUNCTION POINTER CALL SECTION ***
[   30.184550] *** CALLING CRITICAL VIC INITIALIZATION FUNCTION ***
[   30.184556] *** VIC control register written with 0x4000000 to ISP+0x9a00 ***
[   30.184560] *** SUBDEVICE INITIALIZATION LOOP ***
[   30.184566] *** SUBDEVICE INITIALIZATION: Traversing backwards to initialize sensors first ***
[   30.184572] Calling subdev 5 initialization (REVERSE ORDER - sensors first)
[   30.184580] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.184588] SENSOR_INIT: Configuring gc2053 (chip_id=0x2053, 1920x1080)
[   30.184594] *** CALLING SENSOR_WRITE_ARRAY WITH c06e1e20 (should be 137 registers) ***
[   30.184604] sensor_write: reg=0xfe val=0x80, client=85571c00, adapter=i2c0, addr=0x37
[   30.184929] sensor_write: reg=0xfe val=0x80 SUCCESS
[   30.184937] sensor_write_array: reg[1] 0xfe=0x80 OK
[   30.184946] sensor_write: reg=0xfe val=0x80, client=85571c00, adapter=i2c0, addr=0x37
[   30.189161] sensor_write: reg=0xfe val=0x80 SUCCESS
[   30.189174] sensor_write_array: reg[2] 0xfe=0x80 OK
[   30.189185] sensor_write: reg=0xfe val=0x80, client=85571c00, adapter=i2c0, addr=0x37
[   30.189504] sensor_write: reg=0xfe val=0x80 SUCCESS
[   30.189510] sensor_write_array: reg[3] 0xfe=0x80 OK
[   30.189519] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.189831] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.189838] sensor_write_array: reg[4] 0xfe=0x00 OK
[   30.189846] sensor_write: reg=0xf2 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.190164] sensor_write: reg=0xf2 val=0x00 SUCCESS
[   30.190171] sensor_write_array: reg[5] 0xf2=0x00 OK
[   30.190179] sensor_write: reg=0xf3 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.190493] sensor_write: reg=0xf3 val=0x00 SUCCESS
[   30.190500] sensor_write_array: reg[6] 0xf3=0x00 OK
[   30.190508] sensor_write: reg=0xf4 val=0x36, client=85571c00, adapter=i2c0, addr=0x37
[   30.190821] sensor_write: reg=0xf4 val=0x36 SUCCESS
[   30.190828] sensor_write_array: reg[7] 0xf4=0x36 OK
[   30.190836] sensor_write: reg=0xf5 val=0xc0, client=85571c00, adapter=i2c0, addr=0x37
[   30.191149] sensor_write: reg=0xf5 val=0xc0 SUCCESS
[   30.191156] sensor_write_array: reg[8] 0xf5=0xc0 OK
[   30.191164] sensor_write: reg=0xf6 val=0x44, client=85571c00, adapter=i2c0, addr=0x37
[   30.191477] sensor_write: reg=0xf6 val=0x44 SUCCESS
[   30.191484] sensor_write_array: reg[9] 0xf6=0x44 OK
[   30.191492] sensor_write: reg=0xf7 val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.191805] sensor_write: reg=0xf7 val=0x01 SUCCESS
[   30.191812] sensor_write_array: reg[10] 0xf7=0x01 OK
[   30.191820] sensor_write: reg=0xf8 val=0x68, client=85571c00, adapter=i2c0, addr=0x37
[   30.192133] sensor_write: reg=0xf8 val=0x68 SUCCESS
[   30.192142] sensor_write: reg=0xf9 val=0x40, client=85571c00, adapter=i2c0, addr=0x37
[   30.192454] sensor_write: reg=0xf9 val=0x40 SUCCESS
[   30.192463] sensor_write: reg=0xfc val=0x8e, client=85571c00, adapter=i2c0, addr=0x37
[   30.192776] sensor_write: reg=0xfc val=0x8e SUCCESS
[   30.192784] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.199183] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.199199] sensor_write: reg=0x87 val=0x18, client=85571c00, adapter=i2c0, addr=0x37
[   30.199517] sensor_write: reg=0x87 val=0x18 SUCCESS
[   30.199526] sensor_write: reg=0xee val=0x30, client=85571c00, adapter=i2c0, addr=0x37
[   30.199844] sensor_write: reg=0xee val=0x30 SUCCESS
[   30.199852] sensor_write: reg=0xd0 val=0xb7, client=85571c00, adapter=i2c0, addr=0x37
[   30.200164] sensor_write: reg=0xd0 val=0xb7 SUCCESS
[   30.200172] sensor_write: reg=0x03 val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.200486] sensor_write: reg=0x03 val=0x04 SUCCESS
[   30.200494] sensor_write: reg=0x04 val=0x60, client=85571c00, adapter=i2c0, addr=0x37
[   30.200807] sensor_write: reg=0x04 val=0x60 SUCCESS
[   30.200816] sensor_write: reg=0x05 val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.201128] sensor_write: reg=0x05 val=0x04 SUCCESS
[   30.201137] sensor_write: reg=0x06 val=0x4c, client=85571c00, adapter=i2c0, addr=0x37
[   30.201450] sensor_write: reg=0x06 val=0x4c SUCCESS
[   30.201458] sensor_write: reg=0x07 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.201771] sensor_write: reg=0x07 val=0x00 SUCCESS
[   30.201779] sensor_write: reg=0x08 val=0x11, client=85571c00, adapter=i2c0, addr=0x37
[   30.202092] sensor_write: reg=0x08 val=0x11 SUCCESS
[   30.202100] sensor_write: reg=0x09 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.202412] sensor_write: reg=0x09 val=0x00 SUCCESS
[   30.202421] sensor_write: reg=0x0a val=0x02, client=85571c00, adapter=i2c0, addr=0x37
[   30.202734] sensor_write: reg=0x0a val=0x02 SUCCESS
[   30.202742] sensor_write: reg=0x0b val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.203054] sensor_write: reg=0x0b val=0x00 SUCCESS
[   30.203063] sensor_write: reg=0x0c val=0x02, client=85571c00, adapter=i2c0, addr=0x37
[   30.203376] sensor_write: reg=0x0c val=0x02 SUCCESS
[   30.203384] sensor_write: reg=0x0d val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.203752] sensor_write: reg=0x0d val=0x04 SUCCESS
[   30.203761] sensor_write: reg=0x0e val=0x40, client=85571c00, adapter=i2c0, addr=0x37
[   30.204076] sensor_write: reg=0x0e val=0x40 SUCCESS
[   30.204084] sensor_write: reg=0x12 val=0xe2, client=85571c00, adapter=i2c0, addr=0x37
[   30.204398] sensor_write: reg=0x12 val=0xe2 SUCCESS
[   30.204406] sensor_write: reg=0x13 val=0x16, client=85571c00, adapter=i2c0, addr=0x37
[   30.204719] sensor_write: reg=0x13 val=0x16 SUCCESS
[   30.204727] sensor_write: reg=0x19 val=0x0a, client=85571c00, adapter=i2c0, addr=0x37
[   30.206801] sensor_write: reg=0x19 val=0x0a SUCCESS
[   30.206818] sensor_write: reg=0x21 val=0x1c, client=85571c00, adapter=i2c0, addr=0x37
[   30.207134] sensor_write: reg=0x21 val=0x1c SUCCESS
[   30.207143] sensor_write: reg=0x28 val=0x0a, client=85571c00, adapter=i2c0, addr=0x37
[   30.207472] sensor_write: reg=0x28 val=0x0a SUCCESS
[   30.207481] sensor_write: reg=0x29 val=0x24, client=85571c00, adapter=i2c0, addr=0x37
[   30.209168] sensor_write: reg=0x29 val=0x24 SUCCESS
[   30.209181] sensor_write: reg=0x2b val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.209498] sensor_write: reg=0x2b val=0x04 SUCCESS
[   30.209506] sensor_write: reg=0x32 val=0xf8, client=85571c00, adapter=i2c0, addr=0x37
[   30.209824] sensor_write: reg=0x32 val=0xf8 SUCCESS
[   30.209833] sensor_write: reg=0x37 val=0x03, client=85571c00, adapter=i2c0, addr=0x37
[   30.211282] sensor_write: reg=0x37 val=0x03 SUCCESS
[   30.211298] sensor_write: reg=0x39 val=0x15, client=85571c00, adapter=i2c0, addr=0x37
[   30.211620] sensor_write: reg=0x39 val=0x15 SUCCESS
[   30.211628] sensor_write: reg=0x43 val=0x07, client=85571c00, adapter=i2c0, addr=0x37
[   30.213568] sensor_write: reg=0x43 val=0x07 SUCCESS
[   30.213583] sensor_write: reg=0x44 val=0x40, client=85571c00, adapter=i2c0, addr=0x37
[   30.213900] sensor_write: reg=0x44 val=0x40 SUCCESS
[   30.213908] sensor_write: reg=0x46 val=0x0b, client=85571c00, adapter=i2c0, addr=0x37
[   30.214226] sensor_write: reg=0x46 val=0x0b SUCCESS
[   30.214235] sensor_write: reg=0x4b val=0x20, client=85571c00, adapter=i2c0, addr=0x37
[   30.214546] sensor_write: reg=0x4b val=0x20 SUCCESS
[   30.214555] sensor_write: reg=0x4e val=0x08, client=85571c00, adapter=i2c0, addr=0x37
[   30.214868] sensor_write: reg=0x4e val=0x08 SUCCESS
[   30.214877] sensor_write: reg=0x55 val=0x20, client=85571c00, adapter=i2c0, addr=0x37
[   30.219170] sensor_write: reg=0x55 val=0x20 SUCCESS
[   30.219186] sensor_write: reg=0x66 val=0x05, client=85571c00, adapter=i2c0, addr=0x37
[   30.219504] sensor_write: reg=0x66 val=0x05 SUCCESS
[   30.219514] sensor_write: reg=0x67 val=0x05, client=85571c00, adapter=i2c0, addr=0x37
[   30.219836] sensor_write: reg=0x67 val=0x05 SUCCESS
[   30.219845] sensor_write: reg=0x77 val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.220159] sensor_write: reg=0x77 val=0x01 SUCCESS
[   30.220168] sensor_write: reg=0x78 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.220481] sensor_write: reg=0x78 val=0x00 SUCCESS
[   30.220489] sensor_write: reg=0x7c val=0x93, client=85571c00, adapter=i2c0, addr=0x37
[   30.220802] sensor_write: reg=0x7c val=0x93 SUCCESS
[   30.220810] sensor_write_array: reg[50] 0x7c=0x93 OK
[   30.220818] sensor_write: reg=0x8c val=0x12, client=85571c00, adapter=i2c0, addr=0x37
[   30.221131] sensor_write: reg=0x8c val=0x12 SUCCESS
[   30.221140] sensor_write: reg=0x8d val=0x92, client=85571c00, adapter=i2c0, addr=0x37
[   30.221452] sensor_write: reg=0x8d val=0x92 SUCCESS
[   30.221461] sensor_write: reg=0x90 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.221774] sensor_write: reg=0x90 val=0x00 SUCCESS
[   30.221782] sensor_write: reg=0x41 val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.222095] sensor_write: reg=0x41 val=0x04 SUCCESS
[   30.222103] sensor_write: reg=0x42 val=0x9d, client=85571c00, adapter=i2c0, addr=0x37
[   30.222416] sensor_write: reg=0x42 val=0x9d SUCCESS
[   30.222424] sensor_write: reg=0x9d val=0x10, client=85571c00, adapter=i2c0, addr=0x37
[   30.222737] sensor_write: reg=0x9d val=0x10 SUCCESS
[   30.222746] sensor_write: reg=0xce val=0x7c, client=85571c00, adapter=i2c0, addr=0x37
[   30.223658] sensor_write: reg=0xce val=0x7c SUCCESS
[   30.223668] sensor_write: reg=0xd2 val=0x41, client=85571c00, adapter=i2c0, addr=0x37
[   30.223982] sensor_write: reg=0xd2 val=0x41 SUCCESS
[   30.223991] sensor_write: reg=0xd3 val=0xdc, client=85571c00, adapter=i2c0, addr=0x37
[   30.229154] sensor_write: reg=0xd3 val=0xdc SUCCESS
[   30.229169] sensor_write: reg=0xe6 val=0x50, client=85571c00, adapter=i2c0, addr=0x37
[   30.229487] sensor_write: reg=0xe6 val=0x50 SUCCESS
[   30.229496] sensor_write: reg=0xb6 val=0xc0, client=85571c00, adapter=i2c0, addr=0x37
[   30.229814] sensor_write: reg=0xb6 val=0xc0 SUCCESS
[   30.229823] sensor_write: reg=0xb0 val=0x70, client=85571c00, adapter=i2c0, addr=0x37
[   30.230137] sensor_write: reg=0xb0 val=0x70 SUCCESS
[   30.230146] sensor_write: reg=0xb1 val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.230458] sensor_write: reg=0xb1 val=0x01 SUCCESS
[   30.230467] sensor_write: reg=0xb2 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.230780] sensor_write: reg=0xb2 val=0x00 SUCCESS
[   30.230788] sensor_write: reg=0xb3 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.231101] sensor_write: reg=0xb3 val=0x00 SUCCESS
[   30.231109] sensor_write: reg=0xb4 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.231422] sensor_write: reg=0xb4 val=0x00 SUCCESS
[   30.231430] sensor_write: reg=0xb8 val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.231743] sensor_write: reg=0xb8 val=0x01 SUCCESS
[   30.231752] sensor_write: reg=0xb9 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.232064] sensor_write: reg=0xb9 val=0x00 SUCCESS
[   30.232073] sensor_write: reg=0x26 val=0x30, client=85571c00, adapter=i2c0, addr=0x37
[   30.232386] sensor_write: reg=0x26 val=0x30 SUCCESS
[   30.232394] sensor_write: reg=0xfe val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.232707] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.232715] sensor_write: reg=0x40 val=0x23, client=85571c00, adapter=i2c0, addr=0x37
[   30.233028] sensor_write: reg=0x40 val=0x23 SUCCESS
[   30.233036] sensor_write: reg=0x55 val=0x07, client=85571c00, adapter=i2c0, addr=0x37
[   30.233349] sensor_write: reg=0x55 val=0x07 SUCCESS
[   30.233358] sensor_write: reg=0x60 val=0x40, client=85571c00, adapter=i2c0, addr=0x37
[   30.233670] sensor_write: reg=0x60 val=0x40 SUCCESS
[   30.233679] sensor_write: reg=0xfe val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.239161] sensor_write: reg=0xfe val=0x04 SUCCESS
[   30.239177] sensor_write: reg=0x14 val=0x78, client=85571c00, adapter=i2c0, addr=0x37
[   30.239494] sensor_write: reg=0x14 val=0x78 SUCCESS
[   30.239504] sensor_write: reg=0x15 val=0x78, client=85571c00, adapter=i2c0, addr=0x37
[   30.239822] sensor_write: reg=0x15 val=0x78 SUCCESS
[   30.239830] sensor_write: reg=0x16 val=0x78, client=85571c00, adapter=i2c0, addr=0x37
[   30.240144] sensor_write: reg=0x16 val=0x78 SUCCESS
[   30.240153] sensor_write: reg=0x17 val=0x78, client=85571c00, adapter=i2c0, addr=0x37
[   30.240466] sensor_write: reg=0x17 val=0x78 SUCCESS
[   30.240474] sensor_write: reg=0xfe val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.240788] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.240796] sensor_write: reg=0x92 val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.241109] sensor_write: reg=0x92 val=0x00 SUCCESS
[   30.241117] sensor_write: reg=0x94 val=0x03, client=85571c00, adapter=i2c0, addr=0x37
[   30.241430] sensor_write: reg=0x94 val=0x03 SUCCESS
[   30.241438] sensor_write: reg=0x95 val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.241751] sensor_write: reg=0x95 val=0x04 SUCCESS
[   30.241760] sensor_write: reg=0x96 val=0x38, client=85571c00, adapter=i2c0, addr=0x37
[   30.242072] sensor_write: reg=0x96 val=0x38 SUCCESS
[   30.242081] sensor_write: reg=0x97 val=0x07, client=85571c00, adapter=i2c0, addr=0x37
[   30.242394] sensor_write: reg=0x97 val=0x07 SUCCESS
[   30.242402] sensor_write: reg=0x98 val=0x80, client=85571c00, adapter=i2c0, addr=0x37
[   30.242715] sensor_write: reg=0x98 val=0x80 SUCCESS
[   30.242723] sensor_write: reg=0xfe val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.243036] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.243044] sensor_write: reg=0x01 val=0x05, client=85571c00, adapter=i2c0, addr=0x37
[   30.243357] sensor_write: reg=0x01 val=0x05 SUCCESS
[   30.243365] sensor_write: reg=0x02 val=0x89, client=85571c00, adapter=i2c0, addr=0x37
[   30.243678] sensor_write: reg=0x02 val=0x89 SUCCESS
[   30.243686] sensor_write: reg=0x04 val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.249503] sensor_write: reg=0x04 val=0x01 SUCCESS
[   30.249520] sensor_write: reg=0x07 val=0xa6, client=85571c00, adapter=i2c0, addr=0x37
[   30.249836] sensor_write: reg=0x07 val=0xa6 SUCCESS
[   30.249844] sensor_write: reg=0x08 val=0xa9, client=85571c00, adapter=i2c0, addr=0x37
[   30.250179] sensor_write: reg=0x08 val=0xa9 SUCCESS
[   30.250188] sensor_write: reg=0x09 val=0xa8, client=85571c00, adapter=i2c0, addr=0x37
[   30.250502] sensor_write: reg=0x09 val=0xa8 SUCCESS
[   30.250511] sensor_write: reg=0x0a val=0xa7, client=85571c00, adapter=i2c0, addr=0x37
[   30.250824] sensor_write: reg=0x0a val=0xa7 SUCCESS
[   30.250832] sensor_write: reg=0x0b val=0xff, client=85571c00, adapter=i2c0, addr=0x37
[   30.251146] sensor_write: reg=0x0b val=0xff SUCCESS
[   30.251154] sensor_write: reg=0x0c val=0xff, client=85571c00, adapter=i2c0, addr=0x37
[   30.251467] sensor_write: reg=0x0c val=0xff SUCCESS
[   30.251475] sensor_write: reg=0x0f val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.251788] sensor_write: reg=0x0f val=0x00 SUCCESS
[   30.251796] sensor_write: reg=0x50 val=0x1c, client=85571c00, adapter=i2c0, addr=0x37
[   30.252109] sensor_write: reg=0x50 val=0x1c SUCCESS
[   30.252118] sensor_write: reg=0x89 val=0x03, client=85571c00, adapter=i2c0, addr=0x37
[   30.252430] sensor_write: reg=0x89 val=0x03 SUCCESS
[   30.252438] sensor_write: reg=0xfe val=0x04, client=85571c00, adapter=i2c0, addr=0x37
[   30.252756] sensor_write: reg=0xfe val=0x04 SUCCESS
[   30.252764] sensor_write: reg=0x28 val=0x86, client=85571c00, adapter=i2c0, addr=0x37
[   30.253086] sensor_write: reg=0x28 val=0x86 SUCCESS
[   30.253096] sensor_write_array: reg[100] 0x28=0x86 OK
[   30.253105] sensor_write: reg=0x29 val=0x86, client=85571c00, adapter=i2c0, addr=0x37
[   30.253418] sensor_write: reg=0x29 val=0x86 SUCCESS
[   30.253426] sensor_write: reg=0x2a val=0x86, client=85571c00, adapter=i2c0, addr=0x37
[   30.253742] sensor_write: reg=0x2a val=0x86 SUCCESS
[   30.253752] sensor_write: reg=0x2b val=0x68, client=85571c00, adapter=i2c0, addr=0x37
[   30.255343] sensor_write: reg=0x2b val=0x68 SUCCESS
[   30.255359] sensor_write: reg=0x2c val=0x68, client=85571c00, adapter=i2c0, addr=0x37
[   30.255680] sensor_write: reg=0x2c val=0x68 SUCCESS
[   30.255688] sensor_write: reg=0x2d val=0x68, client=85571c00, adapter=i2c0, addr=0x37
[   30.256026] sensor_write: reg=0x2d val=0x68 SUCCESS
[   30.256038] sensor_write: reg=0x2e val=0x68, client=85571c00, adapter=i2c0, addr=0x37
[   30.261308] sensor_write: reg=0x2e val=0x68 SUCCESS
[   30.261324] sensor_write: reg=0x2f val=0x68, client=85571c00, adapter=i2c0, addr=0x37
[   30.261642] sensor_write: reg=0x2f val=0x68 SUCCESS
[   30.261651] sensor_write: reg=0x30 val=0x4f, client=85571c00, adapter=i2c0, addr=0x37
[   30.261967] sensor_write: reg=0x30 val=0x4f SUCCESS
[   30.261976] sensor_write: reg=0x31 val=0x68, client=85571c00, adapter=i2c0, addr=0x37
[   30.262287] sensor_write: reg=0x31 val=0x68 SUCCESS
[   30.262296] sensor_write: reg=0x32 val=0x67, client=85571c00, adapter=i2c0, addr=0x37
[   30.262609] sensor_write: reg=0x32 val=0x67 SUCCESS
[   30.262618] sensor_write: reg=0x33 val=0x66, client=85571c00, adapter=i2c0, addr=0x37
[   30.263042] sensor_write: reg=0x33 val=0x66 SUCCESS
[   30.263054] sensor_write: reg=0x34 val=0x66, client=85571c00, adapter=i2c0, addr=0x37
[   30.263366] sensor_write: reg=0x34 val=0x66 SUCCESS
[   30.263374] sensor_write: reg=0x35 val=0x66, client=85571c00, adapter=i2c0, addr=0x37
[   30.263690] sensor_write: reg=0x35 val=0x66 SUCCESS
[   30.263698] sensor_write: reg=0x36 val=0x66, client=85571c00, adapter=i2c0, addr=0x37
[   30.264070] sensor_write: reg=0x36 val=0x66 SUCCESS
[   30.264080] sensor_write: reg=0x37 val=0x66, client=85571c00, adapter=i2c0, addr=0x37
[   30.264397] sensor_write: reg=0x37 val=0x66 SUCCESS
[   30.264406] sensor_write: reg=0x38 val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.264718] sensor_write: reg=0x38 val=0x62 SUCCESS
[   30.264726] sensor_write: reg=0x39 val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.265040] sensor_write: reg=0x39 val=0x62 SUCCESS
[   30.265048] sensor_write: reg=0x3a val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.265361] sensor_write: reg=0x3a val=0x62 SUCCESS
[   30.265370] sensor_write: reg=0x3b val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.265682] sensor_write: reg=0x3b val=0x62 SUCCESS
[   30.265691] sensor_write: reg=0x3c val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.269156] sensor_write: reg=0x3c val=0x62 SUCCESS
[   30.269171] sensor_write: reg=0x3d val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.269489] sensor_write: reg=0x3d val=0x62 SUCCESS
[   30.269498] sensor_write: reg=0x3e val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.269816] sensor_write: reg=0x3e val=0x62 SUCCESS
[   30.269825] sensor_write: reg=0x3f val=0x62, client=85571c00, adapter=i2c0, addr=0x37
[   30.270139] sensor_write: reg=0x3f val=0x62 SUCCESS
[   30.270148] sensor_write: reg=0xfe val=0x01, client=85571c00, adapter=i2c0, addr=0x37
[   30.270461] sensor_write: reg=0xfe val=0x01 SUCCESS
[   30.270469] sensor_write: reg=0x9a val=0x06, client=85571c00, adapter=i2c0, addr=0x37
[   30.270782] sensor_write: reg=0x9a val=0x06 SUCCESS
[   30.270790] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.271104] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.271112] sensor_write: reg=0x7b val=0x2a, client=85571c00, adapter=i2c0, addr=0x37
[   30.271425] sensor_write: reg=0x7b val=0x2a SUCCESS
[   30.271434] sensor_write: reg=0x23 val=0x2d, client=85571c00, adapter=i2c0, addr=0x37
[   30.271746] sensor_write: reg=0x23 val=0x2d SUCCESS
[   30.271755] sensor_write: reg=0xfe val=0x03, client=85571c00, adapter=i2c0, addr=0x37
[   30.272068] sensor_write: reg=0xfe val=0x03 SUCCESS
[   30.272076] sensor_write: reg=0x01 val=0x27, client=85571c00, adapter=i2c0, addr=0x37
[   30.274172] sensor_write: reg=0x01 val=0x27 SUCCESS
[   30.274186] sensor_write: reg=0x02 val=0x56, client=85571c00, adapter=i2c0, addr=0x37
[   30.274506] sensor_write: reg=0x02 val=0x56 SUCCESS
[   30.274516] sensor_write: reg=0x03 val=0x8e, client=85571c00, adapter=i2c0, addr=0x37
[   30.274830] sensor_write: reg=0x03 val=0x8e SUCCESS
[   30.274838] sensor_write: reg=0x12 val=0x80, client=85571c00, adapter=i2c0, addr=0x37
[   30.275152] sensor_write: reg=0x12 val=0x80 SUCCESS
[   30.275160] sensor_write: reg=0x13 val=0x07, client=85571c00, adapter=i2c0, addr=0x37
[   30.275474] sensor_write: reg=0x13 val=0x07 SUCCESS
[   30.275482] sensor_write: reg=0x15 val=0x12, client=85571c00, adapter=i2c0, addr=0x37
[   30.278609] sensor_write: reg=0x15 val=0x12 SUCCESS
[   30.278624] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   30.278933] sensor_write: reg=0xfe val=0x00 SUCCESS
[   30.278944] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   30.279291] sensor_write: reg=0x3e val=0x91 SUCCESS
[   30.279300] sensor_write_array: Complete - wrote 137 registers, 0 errors
[   30.279306] *** SENSOR_WRITE_ARRAY RETURNED: 0 ***
[   30.279312] *** SENSOR_INIT: gc2053 initialization complete - marked as initialized ***
[   30.279320] Calling subdev 4 initialization (REVERSE ORDER - sensors first)
[   30.279326] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.279332] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   30.279338] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   30.279345] Calling subdev 2 initialization (REVERSE ORDER - sensors first)
[   30.279352] VIN: tx_isp_vin_init: EXACT Binary Ninja implementation with safety checks = 0x1
[   30.279358] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.279366] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   30.279372] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   30.279378] VIN: tx_isp_vin_init: a0 (sensor) = 85ffb000
[   30.279384] VIN: tx_isp_vin_init: using VIN device from global ISP: 84cde000
[   30.279390] VIN: tx_isp_vin_init: calling sensor init function = 0x1
[   30.279396] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.279402] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   30.279408] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   30.279414] VIN: tx_isp_vin_init: sensor init returned = 0x0
[   30.279420] VIN: tx_isp_vin_init: *** VIN STATE SET SAFELY *** = 0x3
[   30.279426] VIN: tx_isp_vin_init: EXACT Binary Ninja result = 0x0
[   30.279432] Calling subdev 1 initialization (REVERSE ORDER - sensors first)
[   30.279438] *** vic_core_ops_init: ENTRY - sd=8540e000, enable=1 ***
[   30.279444] *** vic_core_ops_init: vic_dev=8540e000, current state check ***
[   30.279451] *** vic_core_ops_init: current_state=2, enable=1 ***
[   30.279456] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   30.279462] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   30.279468] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   30.279474] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   30.279480] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   30.279487] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   30.279492] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   30.279498] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   30.279504] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   30.279510] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.279516] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.279522] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.279529] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.279534] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.279540] *** tx_vic_enable_irq: completed successfully ***
[   30.279546] Calling subdev 0 initialization (REVERSE ORDER - sensors first)
[   30.279554] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=1
[   30.279559] *** VIC device final state set to 2 (fully activated) ***
[   30.279565] *** ispcore_activate_module: SUCCESS - ALL REGISTER WRITES SHOULD NOW BE TRIGGERED ***
[   30.279571] *** tx_isp_video_s_stream: ispcore_activate_module completed ***
[   30.279576] *** tx_isp_video_s_stream: VIC state is 2, calling VIC core->init ***
[   30.279583] *** vic_core_ops_init: ENTRY - sd=8540e000, enable=1 ***
[   30.279589] *** vic_core_ops_init: vic_dev=8540e000, current state check ***
[   30.279595] *** vic_core_ops_init: current_state=2, enable=1 ***
[   30.279600] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[   30.279606] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[   30.279612] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[   30.279617] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[   30.279623] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[   30.279630] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[   30.279636] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[   30.279642] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[   30.279647] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[   30.279653] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.279658] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.279664] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.279671] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.279676] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.279681] *** tx_vic_enable_irq: completed successfully ***
[   30.279687] *** tx_isp_video_s_stream: VIC core->init completed, VIC should now be state 3 ***
[   30.279693] *** tx_isp_video_s_stream: Core initialization complete, proceeding with subdev streaming ***
[   30.279698] *** tx_isp_video_s_stream: CRITICAL FIX - Initializing all subdevs before streaming ***
[   30.279708] *** tx_isp_video_s_stream: Activating CSI subdev (state 1 -> 2) before CSI init ***
[   30.279714] *** tx_isp_video_s_stream: CSI subdev activation done, state=2 ***
[   30.279720] *** tx_isp_video_s_stream: Initializing CSI subdev ***
[   30.279727] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=1
[   30.279732] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.279740] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   30.279746] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   30.279752] *** csi_core_ops_init: interface_type=1 (1=MIPI, 2=DVP) ***
[   30.279758] *** csi_core_ops_init: Set csi_dev->interface_type = 1 ***
[   30.339176] *** CRITICAL: Triggering CSI hardware state machine for CSI Lane Config ***
[   30.339191] *** CRITICAL: CSI registers 0x160/0x1e0/0x260 configured with value 0xb ***
[   30.359175] *** CRITICAL: CSI hardware state machine trigger sequence completed ***
[   30.359188] *** CSI Lane Config writes should now be generated automatically by hardware ***
[   30.359194] *** tx_isp_video_s_stream: CSI init SUCCESS ***
[   30.359200] *** tx_isp_video_s_stream: Initializing VIC subdev ***
[   30.359208] *** vic_core_ops_init: ENTRY - sd=8540e000, enable=1 ***
[   30.359214] *** vic_core_ops_init: vic_dev=8540e000, current state check ***
[   30.359220] *** vic_core_ops_init: current_state=3, enable=1 ***
[   30.359226] *** tx_isp_video_s_stream: VIC init SUCCESS ***
[   30.359232] *** tx_isp_video_s_stream: Initializing Sensor subdev ***
[   30.359240] *** SENSOR_INIT: gc2053 enable=1 ***
[   30.359246] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[   30.359252] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[   30.359258] *** tx_isp_video_s_stream: Sensor init SUCCESS ***
[   30.359264] *** tx_isp_video_s_stream: All subdev initialization complete - proceeding with s_stream ***
[   30.359270] *** tx_isp_video_s_stream: Calling subdev[0]->ops->video->s_stream(1) ***
[   30.359276] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   30.359282] csi_video_s_stream: sd=85219400, enable=1
[   30.359289] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   30.359295] *** tx_isp_video_s_stream: subdev[0] s_stream SUCCESS ***
[   30.359302] *** tx_isp_video_s_stream: Calling subdev[1]->ops->video->s_stream(1) ***
[   30.359308] *** vic_core_s_stream: BINARY NINJA EXACT - sd=8540e000, enable=1 ***
[   30.359314] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=3 ***
[   30.359320] *** vic_core_s_stream: STREAM ON ***
[   30.359325] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   30.359331] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   30.359337] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.359345] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   30.359352] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   30.359358] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   30.359364] *** STREAMING: Configuring CPM registers for VIC access ***
[   30.389169] STREAMING: CPM clocks configured for VIC access
[   30.389184] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   30.389190] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   30.389196] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   30.389202] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   30.389208] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   30.389214] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   30.389221] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   30.389228] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   30.389234] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   30.389240] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   30.389246] *** VIC unlock: Commands written, checking VIC status register ***
[   30.389252] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   30.389258] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   30.389263] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   30.389268] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   30.389274] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   30.389280] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   30.389356] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   30.389364] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   30.389370] *** VIC REGISTER CONFIG: Writing VIC configuration registers (vic_start_ok=0) ***
[   30.389378] *** VIC REGISTER CONFIG: VIC configuration registers written (0xc=2, 0x10=0x07800438, 0x14=3840) ***
[   30.389386] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   30.389391] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   30.389398] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   30.389404] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   30.389410] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   30.389416] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   30.389422] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   30.389428] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[   30.389434] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   30.389439] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   30.389446] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   30.389452] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   30.389457] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   30.389464] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   30.389470] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   30.389475] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   30.389481] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   30.389488] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   30.389494] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   30.389502] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   30.389508] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   30.389514] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   30.389522] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   30.389528] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   30.389534] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   30.389539] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   30.389545] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   30.389551] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   30.389558] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.389566] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   30.389572] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   30.389578] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   30.389584] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   30.389590] ispvic_frame_channel_s_stream: arg1=8540e000, arg2=1
[   30.389596] ispvic_frame_channel_s_stream: s0 (vic_dev) = 8540e000
[   30.389603] ispvic_frame_channel_s_stream[2441]: streamon
[   30.389609] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   30.389615] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   30.389621] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   30.389626] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   30.389632] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   30.389639] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   30.389645] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   30.389652] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   30.389658] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   30.389663] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   30.389668] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   30.389674] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   30.389681] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   30.389688] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   30.389696] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   30.389703] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   30.389711] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   30.389718] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   30.389724] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   30.389730] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   30.389735] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   30.389742] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   30.389748] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   30.389754] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   30.389759] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.389766] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   30.389771] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   30.389782] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   30.389790] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   30.389854] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   30.389864] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.389870] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   30.389879] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.389885] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   30.389890] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   30.389897] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   30.389904] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   30.390910] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   30.390916] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   30.390921] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   30.391028] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.391136] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.391142] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   30.391148] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   30.391154] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.391159] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.391166] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.391173] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.391178] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.391184] *** tx_vic_enable_irq: completed successfully ***
root@ing-wyze-cam3-a000 ~# dmesg 
[   30.389488] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[   30.389494] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   30.389502] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[   30.389508] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   30.389514] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   30.389522] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[   30.389528] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   30.389534] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   30.389539] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   30.389545] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   30.389551] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   30.389558] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.389566] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   30.389572] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   30.389578] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   30.389584] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   30.389590] ispvic_frame_channel_s_stream: arg1=8540e000, arg2=1
[   30.389596] ispvic_frame_channel_s_stream: s0 (vic_dev) = 8540e000
[   30.389603] ispvic_frame_channel_s_stream[2441]: streamon
[   30.389609] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   30.389615] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   30.389621] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   30.389626] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   30.389632] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   30.389639] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   30.389645] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   30.389652] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   30.389658] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   30.389663] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   30.389668] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   30.389674] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   30.389681] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   30.389688] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   30.389696] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   30.389703] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   30.389711] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   30.389718] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   30.389724] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   30.389730] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   30.389735] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   30.389742] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   30.389748] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   30.389754] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   30.389759] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   30.389766] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   30.389771] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   30.389782] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   30.389790] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[   30.389854] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   30.389864] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.389870] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[   30.389879] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   30.389885] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   30.389890] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   30.389897] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   30.389904] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   30.390910] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   30.390916] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   30.390921] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   30.391028] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.391136] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   30.391142] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   30.391148] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   30.391154] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   30.391159] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   30.391166] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   30.391173] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   30.391178] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   30.391184] *** tx_vic_enable_irq: completed successfully ***
[   30.804639] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   30.804652] *** vic_core_s_stream: VIC state transition 3 → 4 (STREAMING) ***
[   30.804658] *** VIC STATE 4: Initializing clocks for streaming ***
[   30.804666] *** Initializing CSI clocks (2 clocks) ***
[   30.804673] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[   30.804680] isp_subdev_init_clks: Using platform data clock arrays: c06b72a8
[   30.804687] isp_subdev_init_clks: Using platform data clock configs
[   30.804695] Platform data clock[0]: name=cgu_isp, rate=100000000
[   30.804707] Clock cgu_isp: set rate 100000000 Hz, result=0
[   30.804714] Clock cgu_isp enabled successfully
[   30.804721] Platform data clock[1]: name=isp, rate=65535
[   30.804728] Clock isp enabled successfully
[   30.829160] CPM clock gates configured
[   30.829173] isp_subdev_init_clks: Successfully initialized 2 clocks
[   30.829179] *** Initializing VIC clocks (2 clocks) ***
[   30.829186] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[   30.829193] isp_subdev_init_clks: Using platform data clock arrays: c06b73c0
[   30.829201] isp_subdev_init_clks: Using platform data clock configs
[   30.829209] Platform data clock[0]: name=cgu_isp, rate=100000000
[   30.829219] Clock cgu_isp: set rate 100000000 Hz, result=0
[   30.829225] Clock cgu_isp enabled successfully
[   30.829232] Platform data clock[1]: name=isp, rate=65535
[   30.829239] Clock isp enabled successfully
[   30.859172] CPM clock gates configured
[   30.859185] isp_subdev_init_clks: Successfully initialized 2 clocks
[   30.859191] *** VIC STATE 4: Calling ispcore_slake_module to initialize ISP core ***
[   30.859198] *** ispcore_slake_module: EXACT Binary Ninja MCP implementation ***
[   30.859205] ispcore_slake_module: VIC device=8540e000, state=4ispcore_slake_module: ISP state >= 3, calling ispcore_core_ops_init
[   30.859213] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   30.859223] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   30.859229] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   30.859235] ispcore_slake_module: Using sensor attributes from connected sensor
[   30.859241] *** ispcore_core_ops_init_with_sensor: GOOD-THINGS approach - isp=85ffc000, sensor_attr=c06e20cc ****** ispcore_core_ops_init_with_sensor: Calling tisp_init with sensor parameters (good-things approach) ***
[   30.859251] *** This will configure MIPI CSI lanes and enable proper interrupt flow ****** ispcore_core_ops_init_with_sensor: Calling tisp_init(&sensor_params, "gc2053") ***
[   30.859260] *** tisp_init: IMPLEMENTING MISSING HARDWARE REGISTER INITIALIZATION ***
[   30.859266] *** THIS FUNCTION CONTAINS ALL THE system_reg_write CALLS FROM REFERENCE ***
[   30.859273] *** tisp_init: Invalid sensor dimensions 1x0, using defaults 1920x1080 ***
[   30.859279] *** tisp_init: FIXED - Extracted dimensions from sensor_attr: 1920x1080 ***
[   30.859286] tisp_init: Initializing ISP hardware for sensor (1920x1080)
[   30.859291] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   30.859297] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   30.859303] tisp_event_init: Initializing ISP event system
[   30.859310] tisp_event_init: SAFE event system initialized with 20 nodes
[   30.859317] tisp_event_set_cb: Setting callback for event 4
[   30.859323] tisp_event_set_cb: Event 4 callback set to c06856e0
[   30.859329] tisp_event_set_cb: Setting callback for event 5
[   30.859335] tisp_event_set_cb: Event 5 callback set to c0685ba8
[   30.859341] tisp_event_set_cb: Setting callback for event 7
[   30.859347] tisp_event_set_cb: Event 7 callback set to c0685774
[   30.859353] tisp_event_set_cb: Setting callback for event 9
[   30.859359] tisp_event_set_cb: Event 9 callback set to c06857fc
[   30.859365] tisp_event_set_cb: Setting callback for event 8
[   30.859371] tisp_event_set_cb: Event 8 callback set to c06858c0
[   30.859377] *** system_irq_func_set: Registered handler c067e684 at index 13 ***
[   30.867797] *** WRITING ISP CORE CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   30.867873] *** SYSTEM_REG_WRITE: reg[0xb004] = 0xf001f001 (Binary Ninja EXACT) ***
[   30.867913] *** SYSTEM_REG_WRITE: reg[0xb008] = 0x40404040 (Binary Ninja EXACT) ***
[   30.867988] *** SYSTEM_REG_WRITE: reg[0xb00c] = 0x40404040 (Binary Ninja EXACT) ***
[   30.868026] *** SYSTEM_REG_WRITE: reg[0xb010] = 0x40404040 (Binary Ninja EXACT) ***
[   30.868099] *** SYSTEM_REG_WRITE: reg[0xb014] = 0x404040 (Binary Ninja EXACT) ***
[   30.868137] system_reg_write: BLOCKED core-control reg[0xb018]=0x40404040 during streaming (preserve interrupts)
[   30.868211] system_reg_write: BLOCKED core-control reg[0xb01c]=0x40404040 during streaming (preserve interrupts)
[   30.868249] system_reg_write: BLOCKED core-control reg[0xb020]=0x40404040 during streaming (preserve interrupts)
[   30.868323] system_reg_write: BLOCKED core-control reg[0xb024]=0x404040 during streaming (preserve interrupts)
[   30.868361] *** SYSTEM_REG_WRITE: reg[0xb028] = 0x1000080 (Binary Ninja EXACT) ***
[   30.868435] *** SYSTEM_REG_WRITE: reg[0xb02c] = 0x1000080 (Binary Ninja EXACT) ***
[   30.868473] *** SYSTEM_REG_WRITE: reg[0xb030] = 0x100 (Binary Ninja EXACT) ***
[   30.868547] *** SYSTEM_REG_WRITE: reg[0xb034] = 0xffff0100 (Binary Ninja EXACT) ***
[   30.868586] *** SYSTEM_REG_WRITE: reg[0xb038] = 0x1ff00 (Binary Ninja EXACT) ***
[   30.868659] *** SYSTEM_REG_WRITE: reg[0xb04c] = 0x103 (Binary Ninja EXACT) ***
[   30.868697] *** SYSTEM_REG_WRITE: reg[0xb050] = 0x3 (Binary Ninja EXACT) ***
[   30.868769] *** WRITING CRITICAL VARYING REGISTERS - USING EXACT REFERENCE VALUES ***
[   30.868807] *** SYSTEM_REG_WRITE: reg[0xb07c] = 0x341b (Binary Ninja EXACT) ***
[   30.868880] *** SYSTEM_REG_WRITE: reg[0xb080] = 0x46b0 (Binary Ninja EXACT) ***
[   30.868917] *** SYSTEM_REG_WRITE: reg[0xb084] = 0x1813 (Binary Ninja EXACT) ***
[   30.868991] *** SYSTEM_REG_WRITE: reg[0xb08c] = 0x10a (Binary Ninja EXACT) ***
[   30.869027] *** ISP CORE CONTROL REGISTERS WRITTEN - NOW MATCHES REFERENCE DRIVER ***
[   30.869099] *** WRITING ISP CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   30.869483] system_reg_write: BLOCKED reg[0x9804]=0x3f00 during streaming to protect interrupts
[   30.869560] *** SYSTEM_REG_WRITE: reg[0x9864] = 0x7800438 (Binary Ninja EXACT) ***
[   30.869600] *** SYSTEM_REG_WRITE: reg[0x987c] = 0xc0000000 (Binary Ninja EXACT) ***
[   30.869677] *** SYSTEM_REG_WRITE: reg[0x9880] = 0x1 (Binary Ninja EXACT) ***
[   30.869715] *** SYSTEM_REG_WRITE: reg[0x9884] = 0x1 (Binary Ninja EXACT) ***
[   30.869789] *** SYSTEM_REG_WRITE: reg[0x9890] = 0x1010001 (Binary Ninja EXACT) ***
[   30.869827] *** SYSTEM_REG_WRITE: reg[0x989c] = 0x1010001 (Binary Ninja EXACT) ***
[   30.869900] *** SYSTEM_REG_WRITE: reg[0x98a8] = 0x1010001 (Binary Ninja EXACT) ***
[   30.869936] *** WRITING VIC CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[   30.870009] *** SYSTEM_REG_WRITE: reg[0x9a00] = 0x50002d0 (Binary Ninja EXACT) ***
[   30.870047] *** SYSTEM_REG_WRITE: reg[0x9a04] = 0x3000300 (Binary Ninja EXACT) ***
[   30.870121] *** SYSTEM_REG_WRITE: reg[0x9a2c] = 0x50002d0 (Binary Ninja EXACT) ***
[   30.870158] *** SYSTEM_REG_WRITE: reg[0x9a34] = 0x1 (Binary Ninja EXACT) ***
[   30.870231] *** SYSTEM_REG_WRITE: reg[0x9a70] = 0x1 (Binary Ninja EXACT) ***
[   30.870268] *** SYSTEM_REG_WRITE: reg[0x9a7c] = 0x1 (Binary Ninja EXACT) ***
[   30.870341] *** SYSTEM_REG_WRITE: reg[0x9a80] = 0x500 (Binary Ninja EXACT) ***
[   30.870378] *** SYSTEM_REG_WRITE: reg[0x9a88] = 0x1 (Binary Ninja EXACT) ***
[   30.870453] *** SYSTEM_REG_WRITE: reg[0x9a94] = 0x1 (Binary Ninja EXACT) ***
[   30.870491] *** SYSTEM_REG_WRITE: reg[0x9a98] = 0x500 (Binary Ninja EXACT) ***
[   30.870563] *** TUNING SYSTEM: VIC control registers 0x9ac0/0x9ac8 REMOVED - not in Binary Ninja reference ***
[   30.870602] tisp_init: CRITICAL FIX - Using ACTUAL sensor image dimensions 1920x1080 (not frame size 1920x1080)
[   30.870676] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   30.870713] *** SYSTEM_REG_WRITE: reg[0x8] = 0x0 (Binary Ninja EXACT) ***
[   30.870787] *** SYSTEM_REG_WRITE: reg[0x1c] = 0x3f08 (Binary Ninja EXACT) ***
[   30.870823] *** tisp_init: ISP control register set to enable processing pipeline ***
[   30.870895] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   30.870933] *** tisp_init: REFERENCE DRIVER format register 0x10 = 0x133 ***
[   30.871005] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   30.871041] *** tisp_init: REFERENCE DRIVER register 0x30 = 0xffffffff ***
[   30.871114] *** SYSTEM_REG_WRITE: reg[0x24] = 0x1 (Binary Ninja EXACT) ***
[   30.871151] *** SYSTEM_REG_WRITE: reg[0x28] = 0x1 (Binary Ninja EXACT) ***
[   30.871224] *** tisp_init: ISP data flow configured (input->processing->output) ***
[   30.871262] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   30.871569] *** tisp_init: STREAMING ACTIVE - Skipping ISP control register write to prevent shutdown ***
[   30.871671] *** tisp_init: VIC streaming detected - keeping ISP controls enabled ***
[   30.871680] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   30.871688] *** tisp_init: REFERENCE DRIVER final configuration - 0x804=0x1c, 0x1c=SKIPPED, 0x800=1 ***
[   30.871823] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[   30.871831] *** tisp_init: ISP frame size configured - 1920x1080 (ACTUAL sensor image) ***
[   30.871837] *** SYSTEM_REG_WRITE: reg[0x8] = 0x1 (Binary Ninja EXACT) ***
[   30.871844] *** tisp_init: CRITICAL FIX - Bayer pattern configured: mbus=0x3001 -> pattern=1 (register 8) ***
[   30.872231] *** tisp_init: CONFIGURING RAW10 BAYER PROCESSING PIPELINE ***
[   30.872376] *** SYSTEM_REG_WRITE: reg[0x14] = 0x2b (Binary Ninja EXACT) ***
[   30.872384] *** SYSTEM_REG_WRITE: reg[0x18] = 0xa0a (Binary Ninja EXACT) ***
[   30.872533] *** SYSTEM_REG_WRITE: reg[0x40] = 0x1 (Binary Ninja EXACT) ***
[   30.872539] *** SYSTEM_REG_WRITE: reg[0x44] = 0x1 (Binary Ninja EXACT) ***
[   30.872899] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   30.872911] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x1000000 (Binary Ninja EXACT) ***
[   30.873060] *** SYSTEM_REG_WRITE: reg[0x5006] = 0x100 (Binary Ninja EXACT) ***
[   30.873070] *** SYSTEM_REG_WRITE: reg[0x5008] = 0x0 (Binary Ninja EXACT) ***
[   30.873077] *** SYSTEM_REG_WRITE: reg[0x500a] = 0x1000000 (Binary Ninja EXACT) ***
[   30.873084] *** SYSTEM_REG_WRITE: reg[0x500c] = 0x100 (Binary Ninja EXACT) ***
[   30.873474] *** SYSTEM_REG_WRITE: reg[0x5018] = 0x0 (Binary Ninja EXACT) ***
[   30.873617] *** SYSTEM_REG_WRITE: reg[0x501c] = 0x1 (Binary Ninja EXACT) ***
[   30.873710] *** SYSTEM_REG_WRITE: reg[0x5020] = 0x0 (Binary Ninja EXACT) ***
[   30.873716] *** CRITICAL FIX: CCM configured using EXACT Binary Ninja register addresses ***
[   30.873722] *** CCM registers 0x5004-0x5014 programmed with identity matrix ***
[   30.873727] *** This should eliminate green frames by enabling proper color processing ***
[   30.873734] *** SYSTEM_REG_WRITE: reg[0x200] = 0x4d (Binary Ninja EXACT) ***
[   30.874119] *** SYSTEM_REG_WRITE: reg[0x204] = 0x96 (Binary Ninja EXACT) ***
[   30.874131] *** SYSTEM_REG_WRITE: reg[0x208] = 0x1d (Binary Ninja EXACT) ***
[   30.874259] *** SYSTEM_REG_WRITE: reg[0x20c] = 0x70 (Binary Ninja EXACT) ***
[   30.874266] *** SYSTEM_REG_WRITE: reg[0x210] = 0x5a (Binary Ninja EXACT) ***
[   30.874273] *** SYSTEM_REG_WRITE: reg[0x214] = 0x80 (Binary Ninja EXACT) ***
[   30.874279] *** SYSTEM_REG_WRITE: reg[0x218] = 0x80 (Binary Ninja EXACT) ***
[   30.874667] *** SYSTEM_REG_WRITE: reg[0x21c] = 0x6a (Binary Ninja EXACT) ***
[   30.874766] *** SYSTEM_REG_WRITE: reg[0x220] = 0x16 (Binary Ninja EXACT) ***
[   30.874773] *** CRITICAL FIX: RGB to YUV conversion matrix configured properly ***
[   30.874778] *** tisp_init: RAW10 BAYER PROCESSING PIPELINE CONFIGURED ***
[   30.874899] *** tisp_init: Loading ISP tuning parameters from /etc/sensor/ ***
[   30.874906] *** tisp_init: Standard tuning parameters loaded successfully ***
[   30.874911] *** tisp_init: Custom tuning parameters loaded successfully ***
[   30.874918] tisp_set_csc_version: Setting CSC version 0
[   30.874925] *** SYSTEM_REG_WRITE: reg[0xc] = 0x80700008 (Binary Ninja EXACT) ***
[   30.875317] *** CRITICAL FIX: ISP bypass register set to EXACT reference value 0x80700008 - prevents hardware reset ***
[   30.875328] *** tisp_init: CONFIGURING ISP FOR NV12 OUTPUT FORMAT ***
[   30.875459] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   30.875467] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   30.875588] *** tisp_init: ISP configured for NV12 4:2:0 output format ***
[   30.875593] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   30.875601] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[   30.875949] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x0 (Binary Ninja EXACT) ***
[   30.876081] *** tisp_init: ISP-VIC frame synchronization enabled ***
[   30.876089] *** SYSTEM_REG_WRITE: reg[0x6000] = 0x1 (Binary Ninja EXACT) ***
[   30.876095] *** SYSTEM_REG_WRITE: reg[0x6004] = 0x1 (Binary Ninja EXACT) ***
[   30.876101] *** tisp_init: ISP processing pipeline fully enabled ***
[   30.876107] *** SYSTEM_REG_WRITE: reg[0x7000] = 0x1 (Binary Ninja EXACT) ***
[   30.876479] *** SYSTEM_REG_WRITE: reg[0x7004] = 0x1 (Binary Ninja EXACT) ***
[   30.876616] *** tisp_init: ISP master processing enabled - pipeline should now work ***
[   30.876720] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[   30.876728] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[   30.876733] tisp_init: ISP memory buffers configured
[   30.876738] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[   30.876746] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   30.877125] tiziano_ae_params_refresh: Refreshing AE parameters
[   30.877290] tiziano_ae_params_refresh: AE parameters refreshed
[   30.877297] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   30.877303] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   30.877512] tiziano_ae_para_addr: Setting up AE parameter addresses
[   30.877880] tiziano_ae_para_addr: AE parameter addresses configured
[   30.878047] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   30.878057] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   30.878065] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   30.878072] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   30.878456] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   30.878468] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   30.878485] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   30.878492] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b85a814 (Binary Ninja EXACT) ***
[   30.878499] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   30.878505] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   30.878512] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   30.878519] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   30.878525] tiziano_ae_set_hardware_param: Parameters written to AE0
[   30.878531] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   30.878539] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   30.878545] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   30.878552] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   30.878559] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   30.878565] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   30.878571] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   30.878578] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   30.878585] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   30.878591] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   30.878598] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   30.878604] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   30.878610] tiziano_ae_set_hardware_param: Parameters written to AE1
[   30.878616] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   30.878624] *** system_irq_func_set: Registered handler c06868b8 at index 10 ***
[   30.886941] *** system_irq_func_set: Registered handler c06869ac at index 27 ***
[   30.895544] *** system_irq_func_set: Registered handler c06868b8 at index 26 ***
[   30.907541] *** system_irq_func_set: Registered handler c0686a94 at index 29 ***
[   30.925255] *** system_irq_func_set: Registered handler c0686a20 at index 28 ***
[   30.936683] *** system_irq_func_set: Registered handler c0686b08 at index 30 ***
[   30.954697] *** system_irq_func_set: Registered handler c0686b5c at index 20 ***
[   30.966831] *** system_irq_func_set: Registered handler c0686bb0 at index 18 ***
[   30.984863] *** system_irq_func_set: Registered handler c0686c04 at index 31 ***
[   31.005059] *** system_irq_func_set: Registered handler c0686c58 at index 11 ***
[   31.019149] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   31.019171] tiziano_deflicker_expt: Generated 119 LUT entries
[   31.019177] tisp_event_set_cb: Setting callback for event 1
[   31.019185] tisp_event_set_cb: Event 1 callback set to c06864b8
[   31.019191] tisp_event_set_cb: Setting callback for event 6
[   31.019197] tisp_event_set_cb: Event 6 callback set to c0685a18
[   31.019203] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   31.019209] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   31.019216] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   31.019223] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   31.019230] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   31.019235] tiziano_awb_init: AWB hardware blocks enabled
[   31.019241] tiziano_gamma_init: Initializing Gamma processing
[   31.019246] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   31.019305] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   31.019311] tiziano_gib_init: Initializing GIB processing
[   31.019317] tiziano_lsc_init: Initializing LSC processing
[   31.019321] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   31.019328] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   31.019335] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   31.019342] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   31.019347] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   31.019404] tiziano_ccm_init: Initializing Color Correction Matrix
[   31.019409] tiziano_ccm_init: Using linear CCM parameters
[   31.019415] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   31.019421] jz_isp_ccm: EV=64, CT=9984
[   31.019428] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   31.019433] cm_control: saturation=128
[   31.019439] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   31.019445] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   31.019451] tiziano_ccm_init: CCM initialized successfully
[   31.019455] tiziano_dmsc_init: Initializing DMSC processing
[   31.019461] tiziano_sharpen_init: Initializing Sharpening
[   31.019466] tiziano_sharpen_init: Using linear sharpening parameters
[   31.019472] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   31.019479] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   31.019484] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   31.019511] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   31.019517] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   31.019523] tiziano_sharpen_init: Sharpening initialized successfully
[   31.019528] tiziano_sdns_init: Initializing SDNS processing
[   31.019536] tiziano_sdns_init: Using linear SDNS parameters
[   31.019541] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   31.019548] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   31.019554] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   31.019587] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   31.019593] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   31.019599] tiziano_sdns_init: SDNS processing initialized successfully
[   31.019605] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   31.019610] tiziano_mdns_init: Using linear MDNS parameters
[   31.019621] tiziano_mdns_init: MDNS processing initialized successfully
[   31.019626] tiziano_clm_init: Initializing CLM processing
[   31.019631] tiziano_dpc_init: Initializing DPC processing
[   31.019636] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   31.019642] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   31.019649] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   31.019655] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   31.019669] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   31.019676] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   31.019681] tiziano_hldc_init: Initializing HLDC processing
[   31.019687] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   31.019694] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.019701] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.019708] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.019715] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.019721] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.019729] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.019735] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.019742] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.019749] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.019755] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.019763] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.019769] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.019775] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.019781] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.019786] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.019793] tisp_adr_set_params: Writing ADR parameters to registers
[   31.019825] tisp_adr_set_params: ADR parameters written to hardware
[   31.019831] tisp_event_set_cb: Setting callback for event 18
[   31.019837] tisp_event_set_cb: Event 18 callback set to c0686bb0
[   31.019843] tisp_event_set_cb: Setting callback for event 2
[   31.019849] tisp_event_set_cb: Event 2 callback set to c06856b4
[   31.019854] tiziano_adr_init: ADR processing initialized successfully
[   31.019860] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.019865] tiziano_bcsh_init: Initializing BCSH processing
[   31.019871] tiziano_ydns_init: Initializing YDNS processing
[   31.019875] tiziano_rdns_init: Initializing RDNS processing
[   31.019881] *** tisp_init: ALLOCATING ISP PROCESSING BUFFERS ***
[   31.019894] *** SYSTEM_REG_WRITE: reg[0xa02c] = 0x5f80000 (Binary Ninja EXACT) ***
[   31.019901] *** SYSTEM_REG_WRITE: reg[0xa030] = 0x5f81000 (Binary Ninja EXACT) ***
[   31.019908] *** SYSTEM_REG_WRITE: reg[0xa034] = 0x5f82000 (Binary Ninja EXACT) ***
[   31.019915] *** SYSTEM_REG_WRITE: reg[0xa038] = 0x5f83000 (Binary Ninja EXACT) ***
[   31.019922] *** SYSTEM_REG_WRITE: reg[0xa03c] = 0x5f84000 (Binary Ninja EXACT) ***
[   31.019929] *** SYSTEM_REG_WRITE: reg[0xa040] = 0x5f84800 (Binary Ninja EXACT) ***
[   31.019936] *** SYSTEM_REG_WRITE: reg[0xa044] = 0x5f85000 (Binary Ninja EXACT) ***
[   31.019943] *** SYSTEM_REG_WRITE: reg[0xa048] = 0x5f85800 (Binary Ninja EXACT) ***
[   31.019949] *** SYSTEM_REG_WRITE: reg[0xa04c] = 0x33 (Binary Ninja EXACT) ***
[   31.019955] *** tisp_init: AE0 buffer allocated at 0x05f80000 ***
[   31.019961] *** CRITICAL FIX: data_b2f3c initialized to 0x85f80000 (prevents stack corruption) ***
[   31.019970] *** SYSTEM_REG_WRITE: reg[0xa82c] = 0x528000 (Binary Ninja EXACT) ***
[   31.019977] *** SYSTEM_REG_WRITE: reg[0xa830] = 0x529000 (Binary Ninja EXACT) ***
[   31.019983] *** SYSTEM_REG_WRITE: reg[0xa834] = 0x52a000 (Binary Ninja EXACT) ***
[   31.019991] *** SYSTEM_REG_WRITE: reg[0xa838] = 0x52b000 (Binary Ninja EXACT) ***
[   31.019997] *** SYSTEM_REG_WRITE: reg[0xa83c] = 0x52c000 (Binary Ninja EXACT) ***
[   31.020004] *** SYSTEM_REG_WRITE: reg[0xa840] = 0x52c800 (Binary Ninja EXACT) ***
[   31.020011] *** SYSTEM_REG_WRITE: reg[0xa844] = 0x52d000 (Binary Ninja EXACT) ***
[   31.020017] *** SYSTEM_REG_WRITE: reg[0xa848] = 0x52d800 (Binary Ninja EXACT) ***
[   31.020024] *** SYSTEM_REG_WRITE: reg[0xa84c] = 0x33 (Binary Ninja EXACT) ***
[   31.020031] *** tisp_init: AE1 buffer allocated at 0x00528000 ***
[   31.020035] *** tisp_init: FINAL REGISTER SEQUENCE ***
[   31.020042] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[   31.020047] *** tisp_init: STREAMING ACTIVE - Skipping second ISP control register write ***
[   31.020054] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[   31.020059] *** tisp_init: INITIALIZING ISP SUB-MODULES ***
[   31.020067] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[   31.020075] tiziano_ae_params_refresh: Refreshing AE parameters
[   31.020085] tiziano_ae_params_refresh: AE parameters refreshed
[   31.020091] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[   31.020097] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[   31.020102] tiziano_ae_para_addr: Setting up AE parameter addresses
[   31.020107] tiziano_ae_para_addr: AE parameter addresses configured
[   31.020113] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[   31.020120] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[   31.020127] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[   31.020134] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[   31.020141] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[   31.020147] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[   31.020154] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[   31.020161] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b85a814 (Binary Ninja EXACT) ***
[   31.020168] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[   31.020175] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[   31.020181] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[   31.020188] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[   31.020194] tiziano_ae_set_hardware_param: Parameters written to AE0
[   31.020200] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[   31.020207] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[   31.020213] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[   31.020220] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[   31.020226] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[   31.020233] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[   31.020239] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[   31.020246] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[   31.020252] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[   31.020259] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[   31.020265] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[   31.020272] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[   31.020277] tiziano_ae_set_hardware_param: Parameters written to AE1
[   31.020283] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[   31.020290] *** system_irq_func_set: Registered handler c06868b8 at index 10 ***
[   31.038119] *** system_irq_func_set: Registered handler c06869ac at index 27 ***
[   31.050272] *** system_irq_func_set: Registered handler c06868b8 at index 26 ***
[   31.057899] *** system_irq_func_set: Registered handler c0686a94 at index 29 ***
[   31.080679] *** system_irq_func_set: Registered handler c0686a20 at index 28 ***
[   31.088599] *** system_irq_func_set: Registered handler c0686b08 at index 30 ***
[   31.100403] *** system_irq_func_set: Registered handler c0686b5c at index 20 ***
[   31.113869] *** system_irq_func_set: Registered handler c0686bb0 at index 18 ***
[   31.124793] *** system_irq_func_set: Registered handler c0686c04 at index 31 ***
[   31.135805] *** system_irq_func_set: Registered handler c0686c58 at index 11 ***
[   31.146723] tiziano_deflicker_expt: flicker_t=0, param2=4096, param3=25, param4=1
[   31.146955] tiziano_deflicker_expt: Generated 119 LUT entries
[   31.147031] tisp_event_set_cb: Setting callback for event 1
[   31.147071] tisp_event_set_cb: Event 1 callback set to c06864b8
[   31.147145] tisp_event_set_cb: Setting callback for event 6
[   31.147182] tisp_event_set_cb: Event 6 callback set to c0685a18
[   31.147255] *** CRITICAL FIX: Skipping NULL spinlock initialization that was causing 6+ second delays ***
[   31.147293] tiziano_ae_init: AE initialization complete - Binary Ninja EXACT implementation
[   31.147377] tiziano_awb_init: Initializing Auto White Balance (1920x1080)
[   31.147415] *** SYSTEM_REG_WRITE: reg[0xb000] = 0x1 (Binary Ninja EXACT) ***
[   31.147489] *** SYSTEM_REG_WRITE: reg[0x1800] = 0x1 (Binary Ninja EXACT) ***
[   31.147525] tiziano_awb_init: AWB hardware blocks enabled
[   31.147607] tiziano_gamma_init: Initializing Gamma processing
[   31.147643] tiziano_gamma_lut_parameter: Writing gamma LUT to registers
[   31.148768] tiziano_gamma_lut_parameter: Gamma LUT written to hardware
[   31.148913] tiziano_gib_init: Initializing GIB processing
[   31.149024] tiziano_lsc_init: Initializing LSC processing
[   31.153105] tiziano_lsc_params_refresh: Refreshing LSC parameters
[   31.153221] tiziano_lsc_params_refresh: Updated LSC strength=0x800, CT=9984
[   31.153230] *** SYSTEM_REG_WRITE: reg[0x3800] = 0x11 (Binary Ninja EXACT) ***
[   31.153237] *** SYSTEM_REG_WRITE: reg[0x3804] = 0x108002 (Binary Ninja EXACT) ***
[   31.153675] tisp_lsc_write_lut_datas: Writing LSC LUT data
[   31.153756] tiziano_ccm_init: Initializing Color Correction Matrix
[   31.153762] tiziano_ccm_init: Using linear CCM parameters
[   31.153769] tiziano_ccm_params_refresh: Refreshing CCM parameters
[   31.153775] jz_isp_ccm: EV=64, CT=9984
[   31.153782] tiziano_ct_ccm_interpolation: CT=9984, threshold=100
[   31.153788] cm_control: saturation=128
[   31.153793] tiziano_ccm_lut_parameter: Writing CCM matrix to registers
[   31.153800] tiziano_ccm_lut_parameter: CCM matrix written to hardware
[   31.153805] tiziano_ccm_init: CCM initialized successfully
[   31.153810] tiziano_dmsc_init: Initializing DMSC processing
[   31.153815] tiziano_sharpen_init: Initializing Sharpening
[   31.153821] tiziano_sharpen_init: Using linear sharpening parameters
[   31.153826] tiziano_sharpen_params_refresh: Refreshing sharpening parameters (simple version)
[   31.153833] tisp_sharpen_par_refresh: EV=0, threshold=0, enable=1
[   31.153839] tisp_sharpen_all_reg_refresh: Writing sharpening parameters to registers
[   31.153866] tisp_sharpen_all_reg_refresh: Sharpening registers written to hardware
[   31.153873] *** SYSTEM_REG_WRITE: reg[0xb400] = 0x1 (Binary Ninja EXACT) ***
[   31.153879] tiziano_sharpen_init: Sharpening initialized successfully
[   31.153885] tiziano_sdns_init: Initializing SDNS processing
[   31.153893] tiziano_sdns_init: Using linear SDNS parameters
[   31.153898] tiziano_sdns_params_refresh: Refreshing SDNS parameters (simple version)
[   31.153905] tisp_sdns_par_refresh: EV=0, threshold=0, enable=1
[   31.153911] tisp_sdns_all_reg_refresh: Writing SDNS parameters to registers
[   31.153943] tisp_sdns_all_reg_refresh: SDNS registers written to hardware
[   31.153950] *** SYSTEM_REG_WRITE: reg[0x8b4c] = 0x1 (Binary Ninja EXACT) ***
[   31.153955] tiziano_sdns_init: SDNS processing initialized successfully
[   31.153962] tiziano_mdns_init: Initializing MDNS processing (1920x1080)
[   31.153967] tiziano_mdns_init: Using linear MDNS parameters
[   31.153977] tiziano_mdns_init: MDNS processing initialized successfully
[   31.153983] tiziano_clm_init: Initializing CLM processing
[   31.153988] tiziano_dpc_init: Initializing DPC processing
[   31.153993] tiziano_dpc_params_refresh: Refreshing DPC parameters
[   31.153999] tiziano_dpc_params_refresh: DPC parameters updated based on EV
[   31.154007] tisp_dpc_par_refresh: EV=0, threshold=0, enable=1
[   31.154012] tisp_dpc_all_reg_refresh: Writing DPC parameters to registers
[   31.154027] tisp_dpc_all_reg_refresh: DPC registers written to hardware
[   31.154033] *** SYSTEM_REG_WRITE: reg[0xa200] = 0x1 (Binary Ninja EXACT) ***
[   31.154039] tiziano_hldc_init: Initializing HLDC processing
[   31.154045] *** SYSTEM_REG_WRITE: reg[0x9044] = 0x3 (Binary Ninja EXACT) ***
[   31.154052] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.154059] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.154066] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.154073] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.154080] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.154087] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.154093] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.154100] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.154107] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.154114] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.154121] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.154127] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.154133] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.154139] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.154144] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.154151] tisp_adr_set_params: Writing ADR parameters to registers
[   31.154183] tisp_adr_set_params: ADR parameters written to hardware
[   31.154189] tisp_event_set_cb: Setting callback for event 18
[   31.154197] tisp_event_set_cb: Event 18 callback set to c0686bb0
[   31.154203] tisp_event_set_cb: Setting callback for event 2
[   31.154209] tisp_event_set_cb: Event 2 callback set to c06856b4
[   31.154214] tiziano_adr_init: ADR processing initialized successfully
[   31.154221] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.154225] tiziano_bcsh_init: Initializing BCSH processing
[   31.154231] tiziano_ydns_init: Initializing YDNS processing
[   31.154236] tiziano_rdns_init: Initializing RDNS processing
[   31.154241] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   31.154246] tisp_event_init: Initializing ISP event system
[   31.154253] tisp_event_init: SAFE event system initialized with 20 nodes
[   31.154259] tisp_event_set_cb: Setting callback for event 4
[   31.154266] tisp_event_set_cb: Event 4 callback set to c06856e0
[   31.154271] tisp_event_set_cb: Setting callback for event 5
[   31.154278] tisp_event_set_cb: Event 5 callback set to c0685ba8
[   31.154283] tisp_event_set_cb: Setting callback for event 7
[   31.154289] tisp_event_set_cb: Event 7 callback set to c0685774
[   31.154295] tisp_event_set_cb: Setting callback for event 9
[   31.154301] tisp_event_set_cb: Event 9 callback set to c06857fc
[   31.154307] tisp_event_set_cb: Setting callback for event 8
[   31.154313] tisp_event_set_cb: Event 8 callback set to c06858c0
[   31.154319] *** tisp_init: BINARY NINJA REFERENCE - No event processing thread created ***
[   31.154325] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   31.154331] tisp_param_operate_init: Initializing parameter operations
[   31.154338] tisp_netlink_init: Initializing netlink communication
[   31.154343] tisp_netlink_init: Trying standard NETLINK_GENERIC protocol (16)
[   31.154377] tisp_netlink_init: NETLINK_GENERIC failed, trying custom protocol 0x17
[   31.154387] tisp_netlink_init: Netlink socket created successfully
[   31.154393] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   31.154399] tisp_code_create_tuning_node: Device already created, skipping
[   31.154405] *** tisp_init: ISP HARDWARE PIPELINE FULLY INITIALIZED - THIS SHOULD TRIGGER REGISTER ACTIVITY ***
[   31.154411] *** tisp_init: All hardware blocks enabled, registers configured, events ready ***
[   31.154418] *** ispcore_core_ops_init_with_sensor: tisp_init SUCCESS - MIPI CSI should now be configured ***
[   31.154425] *** ispcore_core_ops_init_with_sensor: VIC already in state 4 (>= 3) ****** ispcore_core_ops_init_with_sensor: SUCCESS - Core initialized with sensor attributes ***
[   31.154433] ispcore_slake_module: Initializing channelsispcore_slake_module: Channel 0 enabled
[   31.154441] ispcore_slake_module: Channel 1 enabledispcore_slake_module: Channel 2 enabled
[   31.154449] ispcore_slake_module: Channel 3 enabledispcore_slake_module: Channel 4 enabled
[   31.154457] ispcore_slake_module: Channel 5 enabledispcore_slake_module: Calling VIC control function (0x4000001, 0)
[   31.154465] ispcore_slake_module: VIC control register written: 0x4000001ispcore_slake_module: Set VIC state to INIT (1)
[   31.154473] ispcore_slake_module: Processing subdevices*** DEBUG: isp_dev=85ffc000, isp_dev->subdevs=85fff274 ***
[   31.154487] *** ispcore_slake_module: Calling slake_module for CSI subdev ***
[   31.154493] *** tx_isp_csi_slake_subdev: CSI slake/shutdown - current state=4 ***
[   31.154499] tx_isp_csi_slake_subdev: CSI in streaming state, stopping stream
[   31.154505] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.154511] csi_video_s_stream: sd=85219400, enable=0
[   31.154517] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 3 (enable=0)
[   31.154523] tx_isp_csi_slake_subdev: CSI in state 3, calling core_ops_init(disable)
[   31.154531] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=0
[   31.154537] tx_isp_csi_slake_subdev: CSI state 2->1, disabling clocks
[   31.154544] tx_isp_csi_slake_subdev: Disabled clock 1
[   31.154550] tx_isp_csi_slake_subdev: Disabled clock 0
[   31.154556] *** tx_isp_csi_slake_subdev: CSI slake complete, final state=1 ***
[   31.154561] ispcore_slake_module: CSI slake success
[   31.154565] *** ispcore_slake_module: Calling slake_module for VIC subdev ***
[   31.154572] *** tx_isp_vic_slake_subdev: ENTRY - sd=8540e000 ***
[   31.154579] *** tx_isp_vic_slake_subdev: VIC slake/shutdown - vic_dev=8540e000, current state=1 ***
[   31.154585] *** tx_isp_vic_slake_subdev: VIC slake complete, final state=1 ***
[   31.154591] ispcore_slake_module: VIC slake success
[   31.154596] *** ispcore_slake_module: All subdev slake operations completed using helper functions ***
[   31.154601] ispcore_slake_module: Managing ISP clocks
[   31.154605] ispcore_slake_module: Disabled IPU clockispcore_slake_module: Disabled ISP clock
[   31.154613] ispcore_slake_module: Complete, result=0<6>[   31.154619] *** ispcore_slake_module SUCCESS - ISP core should now be initialized ***
[   31.154625] *** vic_core_s_stream: VIC initialized, final state=1 ***
[   31.154632] *** tx_isp_video_s_stream: subdev[1] s_stream SUCCESS ***
---- FPGA board is ready ----
  Board UID : 30AB6E51
  Board HW ID : 72000460
  Board rev.  : 5DE5A975
  Board date  : 20190326
-----------------------------
[   31.154639] *** tx_isp_video_s_stream: Calling subdev[2]->ops->video->s_stream(1) ***
[   31.154646] *** vin_s_stream: SAFE implementation - sd=84cde000, enable=1 ***
[   31.154653] vin_s_stream: VIN state = 3, enable = 1
[   31.154658] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.154667] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   31.154673] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   31.154679] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   31.154685] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   31.154691] *** tx_isp_video_s_stream: subdev[2] s_stream SUCCESS ***
[   31.154697] *** tx_isp_video_s_stream: Calling subdev[4]->ops->video->s_stream(1) ***
[   31.154705] gc2053: s_stream called with enable=1
[   31.154712] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.154718] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.154725] gc2053: About to write streaming registers for interface 1
[   31.154731] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.154740] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   31.155064] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.155072] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.155081] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   31.155461] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.155470] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.155477] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.155483] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.155911] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.156040] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.156048] *** tx_isp_video_s_stream: subdev[4] s_stream SUCCESS ***
[   31.156162] *** tx_isp_video_s_stream: Calling subdev[5]->ops->video->s_stream(1) ***
[   31.156170] gc2053: s_stream called with enable=1
[   31.156177] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.156183] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.156189] gc2053: About to write streaming registers for interface 1
[   31.158413] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.158440] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   31.158760] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.158767] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.158776] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   31.159368] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.159382] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.159389] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.159396] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.159402] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.159408] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.159415] *** tx_isp_video_s_stream: subdev[5] s_stream SUCCESS ***
[   31.159421] *** VIC POST-SENSOR REASSERT: re-applying routing/mask after sensor stream-on ***
[   31.205753] *** VIC POST-SENSOR REASSERT: No status bits asserted in 20ms window ***
[   31.205799] ISP IOCTL: cmd=0x800456d0 arg=0x7fc1bfd0
[   31.205807] TX_ISP_VIDEO_LINK_SETUP: config=0
[   31.205813] TX_ISP_VIDEO_LINK_SETUP: Link config unchanged (0)
[   31.205820] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   31.205827] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   31.205833] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   31.205839] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   31.205847] VIC activated: state 1 -> 2 (READY)
[   31.205852] *** VIC ACTIVATION: Buffer allocation DEFERRED to prevent Wyze Cam memory exhaustion ***
[   31.205857] *** VIC ACTIVATION: Buffers will be allocated on-demand during QBUF operations ***
[   31.205863] *** VIC ACTIVATION: Free buffer list initialized (empty) - allocation deferred ***
[   31.205869] *** VIC ACTIVATION: Using GOOD-THINGS deferred buffer allocation strategy ***
[   31.205875] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   31.205882] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   31.205888] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.205895] csi_video_s_stream: sd=85219400, enable=1
[   31.205902] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   31.205909] *** vic_core_s_stream: BINARY NINJA EXACT - sd=8540e000, enable=1 ***
[   31.205915] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   31.205921] *** vic_core_s_stream: STREAM ON ***
[   31.205926] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   31.205932] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   31.205938] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.205947] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   31.205954] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   31.205961] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   31.205966] *** STREAMING: Configuring CPM registers for VIC access ***
[   31.229168] STREAMING: CPM clocks configured for VIC access
[   31.229183] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   31.229189] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   31.229195] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   31.229201] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   31.229207] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   31.229213] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   31.229222] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   31.229229] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   31.229236] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   31.229241] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   31.229247] *** VIC unlock: Commands written, checking VIC status register ***
[   31.229254] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   31.229259] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   31.229265] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   31.229271] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   31.229276] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   31.229282] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   31.229357] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   31.229365] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   31.229371] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   31.229379] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   31.229385] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   31.229392] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   31.229399] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   31.229404] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   31.229410] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   31.229416] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   31.229423] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000001) ***
[   31.229428] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   31.229433] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   31.229441] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   31.229446] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   31.229452] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   31.229458] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   31.229464] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   31.229470] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   31.229475] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   31.229483] *** ISP CORE VERIFY: 0x30=0x8fffffff, 0x10=0x00000133 ***
[   31.229489] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   31.229499] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x07800438, 0x0c=0x00000001, 0x100=0x000002d0, 0x14=0x00000001 ***
[   31.229505] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   31.229511] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   31.229518] *** VIC INTERRUPT: imr_ok=1, imcr_ok=0, config_ok=1, control_ok=0 ***
[   31.229524] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   31.229529] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   31.229535] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   31.229541] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   31.229547] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   31.229553] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.229561] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   31.229567] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   31.229573] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   31.229579] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   31.229586] ispvic_frame_channel_s_stream: arg1=8540e000, arg2=1
[   31.229592] ispvic_frame_channel_s_stream: s0 (vic_dev) = 8540e000
[   31.229599] ispvic_frame_channel_s_stream[2441]: streamon
[   31.229605] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   31.229611] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   31.229617] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   31.229622] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   31.229627] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   31.229635] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   31.229641] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   31.229648] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   31.229654] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   31.229659] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   31.229665] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   31.229671] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   31.229677] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   31.229685] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   31.229693] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   31.229700] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   31.229707] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   31.229715] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   31.229721] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   31.229727] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   31.229732] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   31.229739] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   31.229745] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   31.229751] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   31.229757] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.229763] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   31.229769] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   31.229781] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x07800438 [0x300]=0x80040020 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   31.229789] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x000002d0 [0x14]=0x00000001 (PRIMARY 0x14=stride) ***
[   31.229853] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   31.229865] *** VIC BUFS (PRIMARY): [0x318]=0x06300000 [0x31c]=0x066f4800 [0x320]=0x06ae9000 [0x324]=0x06edd800 [0x328]=0x072d2000 ***
[   31.229871] *** VIC CTRL (PRIMARY): [0x300]=0x80040020 ***
[   31.229880] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   31.229887] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   31.229892] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   31.229899] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   31.229905] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   31.230914] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   31.230919] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   31.230925] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   31.231033] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.231140] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.231147] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   31.231153] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   31.231158] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   31.231164] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   31.231170] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   31.231177] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   31.231183] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   31.231189] *** tx_vic_enable_irq: completed successfully ***
root@ing-wyze-cam3-a000 ~# dmesg [INFO:WS.cpp]: Server started on port 8089

[   31.154052] tiziano_defog_init: Initializing Defog processing (1920x1080)
[   31.154059] tiziano_adr_init: Initializing ADR processing (1920x1080)
[   31.154066] *** SYSTEM_REG_WRITE: reg[0x4000] = 0x10e0140 (Binary Ninja EXACT) ***
[   31.154073] *** SYSTEM_REG_WRITE: reg[0x4010] = 0x10e0000 (Binary Ninja EXACT) ***
[   31.154080] *** SYSTEM_REG_WRITE: reg[0x4014] = 0x21c021c (Binary Ninja EXACT) ***
[   31.154087] *** SYSTEM_REG_WRITE: reg[0x4018] = 0x438 (Binary Ninja EXACT) ***
[   31.154093] *** SYSTEM_REG_WRITE: reg[0x401c] = 0x1400000 (Binary Ninja EXACT) ***
[   31.154100] *** SYSTEM_REG_WRITE: reg[0x4020] = 0x3c00280 (Binary Ninja EXACT) ***
[   31.154107] *** SYSTEM_REG_WRITE: reg[0x4024] = 0x50003c0 (Binary Ninja EXACT) ***
[   31.154114] *** SYSTEM_REG_WRITE: reg[0x4028] = 0x780 (Binary Ninja EXACT) ***
[   31.154121] *** SYSTEM_REG_WRITE: reg[0x4454] = 0x3f60042 (Binary Ninja EXACT) ***
[   31.154127] *** SYSTEM_REG_WRITE: reg[0x4458] = 0x7300050 (Binary Ninja EXACT) ***
[   31.154133] tiziano_adr_params_refresh: Refreshing ADR parameters
[   31.154139] tiziano_adr_params_refresh: ADR ratio updated to 0x180
[   31.154144] tiziano_adr_params_init: Initializing ADR parameter arrays
[   31.154151] tisp_adr_set_params: Writing ADR parameters to registers
[   31.154183] tisp_adr_set_params: ADR parameters written to hardware
[   31.154189] tisp_event_set_cb: Setting callback for event 18
[   31.154197] tisp_event_set_cb: Event 18 callback set to c0686bb0
[   31.154203] tisp_event_set_cb: Setting callback for event 2
[   31.154209] tisp_event_set_cb: Event 2 callback set to c06856b4
[   31.154214] tiziano_adr_init: ADR processing initialized successfully
[   31.154221] tiziano_af_init: Initializing Auto Focus (1920x1080)
[   31.154225] tiziano_bcsh_init: Initializing BCSH processing
[   31.154231] tiziano_ydns_init: Initializing YDNS processing
[   31.154236] tiziano_rdns_init: Initializing RDNS processing
[   31.154241] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[   31.154246] tisp_event_init: Initializing ISP event system
[   31.154253] tisp_event_init: SAFE event system initialized with 20 nodes
[   31.154259] tisp_event_set_cb: Setting callback for event 4
[   31.154266] tisp_event_set_cb: Event 4 callback set to c06856e0
[   31.154271] tisp_event_set_cb: Setting callback for event 5
[   31.154278] tisp_event_set_cb: Event 5 callback set to c0685ba8
[   31.154283] tisp_event_set_cb: Setting callback for event 7
[   31.154289] tisp_event_set_cb: Event 7 callback set to c0685774
[   31.154295] tisp_event_set_cb: Setting callback for event 9
[   31.154301] tisp_event_set_cb: Event 9 callback set to c06857fc
[   31.154307] tisp_event_set_cb: Setting callback for event 8
[   31.154313] tisp_event_set_cb: Event 8 callback set to c06858c0
[   31.154319] *** tisp_init: BINARY NINJA REFERENCE - No event processing thread created ***
[   31.154325] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[   31.154331] tisp_param_operate_init: Initializing parameter operations
[   31.154338] tisp_netlink_init: Initializing netlink communication
[   31.154343] tisp_netlink_init: Trying standard NETLINK_GENERIC protocol (16)
[   31.154377] tisp_netlink_init: NETLINK_GENERIC failed, trying custom protocol 0x17
[   31.154387] tisp_netlink_init: Netlink socket created successfully
[   31.154393] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[   31.154399] tisp_code_create_tuning_node: Device already created, skipping
[   31.154405] *** tisp_init: ISP HARDWARE PIPELINE FULLY INITIALIZED - THIS SHOULD TRIGGER REGISTER ACTIVITY ***
[   31.154411] *** tisp_init: All hardware blocks enabled, registers configured, events ready ***
[   31.154418] *** ispcore_core_ops_init_with_sensor: tisp_init SUCCESS - MIPI CSI should now be configured ***
[   31.154425] *** ispcore_core_ops_init_with_sensor: VIC already in state 4 (>= 3) ****** ispcore_core_ops_init_with_sensor: SUCCESS - Core initialized with sensor attributes ***
[   31.154433] ispcore_slake_module: Initializing channelsispcore_slake_module: Channel 0 enabled
[   31.154441] ispcore_slake_module: Channel 1 enabledispcore_slake_module: Channel 2 enabled
[   31.154449] ispcore_slake_module: Channel 3 enabledispcore_slake_module: Channel 4 enabled
[   31.154457] ispcore_slake_module: Channel 5 enabledispcore_slake_module: Calling VIC control function (0x4000001, 0)
[   31.154465] ispcore_slake_module: VIC control register written: 0x4000001ispcore_slake_module: Set VIC state to INIT (1)
[   31.154473] ispcore_slake_module: Processing subdevices*** DEBUG: isp_dev=85ffc000, isp_dev->subdevs=85fff274 ***
[   31.154487] *** ispcore_slake_module: Calling slake_module for CSI subdev ***
[   31.154493] *** tx_isp_csi_slake_subdev: CSI slake/shutdown - current state=4 ***
[   31.154499] tx_isp_csi_slake_subdev: CSI in streaming state, stopping stream
[   31.154505] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.154511] csi_video_s_stream: sd=85219400, enable=0
[   31.154517] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 3 (enable=0)
[   31.154523] tx_isp_csi_slake_subdev: CSI in state 3, calling core_ops_init(disable)
[   31.154531] csi_core_ops_init: sd=85219400, csi_dev=85219400, enable=0
[   31.154537] tx_isp_csi_slake_subdev: CSI state 2->1, disabling clocks
[   31.154544] tx_isp_csi_slake_subdev: Disabled clock 1
[   31.154550] tx_isp_csi_slake_subdev: Disabled clock 0
[   31.154556] *** tx_isp_csi_slake_subdev: CSI slake complete, final state=1 ***
[   31.154561] ispcore_slake_module: CSI slake success
[   31.154565] *** ispcore_slake_module: Calling slake_module for VIC subdev ***
[   31.154572] *** tx_isp_vic_slake_subdev: ENTRY - sd=8540e000 ***
[   31.154579] *** tx_isp_vic_slake_subdev: VIC slake/shutdown - vic_dev=8540e000, current state=1 ***
[   31.154585] *** tx_isp_vic_slake_subdev: VIC slake complete, final state=1 ***
[   31.154591] ispcore_slake_module: VIC slake success
[   31.154596] *** ispcore_slake_module: All subdev slake operations completed using helper functions ***
[   31.154601] ispcore_slake_module: Managing ISP clocks
[   31.154605] ispcore_slake_module: Disabled IPU clockispcore_slake_module: Disabled ISP clock
[   31.154613] ispcore_slake_module: Complete, result=0<6>[   31.154619] *** ispcore_slake_module SUCCESS - ISP core should now be initialized ***
[   31.154625] *** vic_core_s_stream: VIC initialized, final state=1 ***
[   31.154632] *** tx_isp_video_s_stream: subdev[1] s_stream SUCCESS ***
[   31.154639] *** tx_isp_video_s_stream: Calling subdev[2]->ops->video->s_stream(1) ***
[   31.154646] *** vin_s_stream: SAFE implementation - sd=84cde000, enable=1 ***
[   31.154653] vin_s_stream: VIN state = 3, enable = 1
[   31.154658] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.154667] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   31.154673] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   31.154679] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   31.154685] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   31.154691] *** tx_isp_video_s_stream: subdev[2] s_stream SUCCESS ***
[   31.154697] *** tx_isp_video_s_stream: Calling subdev[4]->ops->video->s_stream(1) ***
[   31.154705] gc2053: s_stream called with enable=1
[   31.154712] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.154718] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.154725] gc2053: About to write streaming registers for interface 1
[   31.154731] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.154740] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   31.155064] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.155072] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.155081] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   31.155461] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.155470] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.155477] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.155483] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.155911] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.156040] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.156048] *** tx_isp_video_s_stream: subdev[4] s_stream SUCCESS ***
[   31.156162] *** tx_isp_video_s_stream: Calling subdev[5]->ops->video->s_stream(1) ***
[   31.156170] gc2053: s_stream called with enable=1
[   31.156177] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.156183] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.156189] gc2053: About to write streaming registers for interface 1
[   31.158413] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.158440] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   31.158760] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.158767] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.158776] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   31.159368] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.159382] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.159389] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.159396] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.159402] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.159408] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.159415] *** tx_isp_video_s_stream: subdev[5] s_stream SUCCESS ***
[   31.159421] *** VIC POST-SENSOR REASSERT: re-applying routing/mask after sensor stream-on ***
[   31.205753] *** VIC POST-SENSOR REASSERT: No status bits asserted in 20ms window ***
[   31.205799] ISP IOCTL: cmd=0x800456d0 arg=0x7fc1bfd0
[   31.205807] TX_ISP_VIDEO_LINK_SETUP: config=0
[   31.205813] TX_ISP_VIDEO_LINK_SETUP: Link config unchanged (0)
[   31.205820] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   31.205827] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   31.205833] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   31.205839] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   31.205847] VIC activated: state 1 -> 2 (READY)
[   31.205852] *** VIC ACTIVATION: Buffer allocation DEFERRED to prevent Wyze Cam memory exhaustion ***
[   31.205857] *** VIC ACTIVATION: Buffers will be allocated on-demand during QBUF operations ***
[   31.205863] *** VIC ACTIVATION: Free buffer list initialized (empty) - allocation deferred ***
[   31.205869] *** VIC ACTIVATION: Using GOOD-THINGS deferred buffer allocation strategy ***
[   31.205875] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   31.205882] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   31.205888] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.205895] csi_video_s_stream: sd=85219400, enable=1
[   31.205902] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   31.205909] *** vic_core_s_stream: BINARY NINJA EXACT - sd=8540e000, enable=1 ***
[   31.205915] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   31.205921] *** vic_core_s_stream: STREAM ON ***
[   31.205926] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   31.205932] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   31.205938] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.205947] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   31.205954] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   31.205961] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   31.205966] *** STREAMING: Configuring CPM registers for VIC access ***
[   31.229168] STREAMING: CPM clocks configured for VIC access
[   31.229183] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   31.229189] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   31.229195] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   31.229201] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   31.229207] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   31.229213] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   31.229222] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   31.229229] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   31.229236] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   31.229241] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   31.229247] *** VIC unlock: Commands written, checking VIC status register ***
[   31.229254] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   31.229259] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   31.229265] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   31.229271] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   31.229276] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   31.229282] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   31.229357] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   31.229365] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   31.229371] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   31.229379] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   31.229385] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   31.229392] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   31.229399] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   31.229404] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   31.229410] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   31.229416] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   31.229423] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000001) ***
[   31.229428] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   31.229433] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   31.229441] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   31.229446] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   31.229452] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   31.229458] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   31.229464] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   31.229470] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   31.229475] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   31.229483] *** ISP CORE VERIFY: 0x30=0x8fffffff, 0x10=0x00000133 ***
[   31.229489] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   31.229499] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x07800438, 0x0c=0x00000001, 0x100=0x000002d0, 0x14=0x00000001 ***
[   31.229505] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   31.229511] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   31.229518] *** VIC INTERRUPT: imr_ok=1, imcr_ok=0, config_ok=1, control_ok=0 ***
[   31.229524] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   31.229529] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   31.229535] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   31.229541] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   31.229547] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   31.229553] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.229561] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   31.229567] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   31.229573] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   31.229579] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   31.229586] ispvic_frame_channel_s_stream: arg1=8540e000, arg2=1
[   31.229592] ispvic_frame_channel_s_stream: s0 (vic_dev) = 8540e000
[   31.229599] ispvic_frame_channel_s_stream[2441]: streamon
[   31.229605] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   31.229611] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   31.229617] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   31.229622] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   31.229627] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   31.229635] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   31.229641] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   31.229648] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   31.229654] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   31.229659] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   31.229665] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   31.229671] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   31.229677] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   31.229685] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   31.229693] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   31.229700] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   31.229707] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   31.229715] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   31.229721] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   31.229727] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   31.229732] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   31.229739] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   31.229745] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   31.229751] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   31.229757] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   31.229763] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   31.229769] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   31.229781] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x07800438 [0x300]=0x80040020 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   31.229789] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x000002d0 [0x14]=0x00000001 (PRIMARY 0x14=stride) ***
[   31.229853] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   31.229865] *** VIC BUFS (PRIMARY): [0x318]=0x06300000 [0x31c]=0x066f4800 [0x320]=0x06ae9000 [0x324]=0x06edd800 [0x328]=0x072d2000 ***
[   31.229871] *** VIC CTRL (PRIMARY): [0x300]=0x80040020 ***
[   31.229880] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   31.229887] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   31.229892] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   31.229899] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   31.229905] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   31.230914] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   31.230919] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   31.230925] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   31.231033] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.231140] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   31.231147] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   31.231153] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   31.231158] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   31.231164] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   31.231170] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   31.231177] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   31.231183] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   31.231189] *** tx_vic_enable_irq: completed successfully ***
[   31.653485] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   31.653499] *** vic_core_s_stream: VIC state 2 - letting tx_isp_video_s_stream handle state 2 → 3 transition ***
[   31.653506] *** vic_core_s_stream: VIC initialized, final state=2 ***
[   31.653515] *** vin_s_stream: SAFE implementation - sd=84cde000, enable=1 ***
[   31.653522] vin_s_stream: VIN state = 4, enable = 1
[   31.653528] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.653537] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   31.653544] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   31.653550] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   31.653555] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   31.653563] gc2053: s_stream called with enable=1
[   31.653570] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.653576] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.653582] gc2053: About to write streaming registers for interface 1
[   31.653588] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.653598] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   31.653918] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.653925] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.653934] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   31.654254] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.654260] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.654267] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.654274] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.654280] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.654286] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.654292] gc2053: s_stream called with enable=1
[   31.654298] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.654304] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   31.654310] gc2053: About to write streaming registers for interface 1
[   31.654316] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   31.654325] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   31.654637] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.654644] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.654652] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   31.654966] sensor_write: reg=0x3e val=0x91 SUCCESS
[   31.654973] sensor_write_array: reg[2] 0x3e=0x91 OK
[   31.654979] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   31.654986] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   31.654991] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   31.654997] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   31.992845] ISP M0 device open called from pid 2262
[   31.992876] *** REFERENCE DRIVER IMPLEMENTATION ***
[   31.992884] ISP M0 tuning buffer allocated: 81168000 (size=0x500c, aligned)
[   31.992890] tisp_par_ioctl global variable set: 81168000
[   31.992944] isp_core_tunning_unlocked_ioctl: Auto-initializing tuning for V4L2 control (one-time)
[   31.992952] isp_core_tunning_unlocked_ioctl: Initializing tuning data structure
[   31.992958] isp_core_tuning_init: Initializing tuning data structure
[   31.992977] isp_core_tuning_init: Tuning data structure initialized at 81170000
[   31.992984] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[   31.992989] *** SAFE: mode_flag properly initialized using struct member access ***
[   31.992996] isp_core_tunning_unlocked_ioctl: Tuning data allocated at 81170000
[   31.993001] *** BINARY NINJA REFERENCE: Skipping auto-initialization - no hardware reset during tuning setup ***
[   31.993007] isp_core_tunning_unlocked_ioctl: ISP tuning auto-enabled for V4L2 controls (permanent)
[   31.993014] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   31.993021] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   31.993027] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   31.993032] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   31.993038] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   31.993062] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561b
[   31.993069] isp_core_tunning_unlocked_ioctl: Get control cmd=0x980900
[   31.993075] CRITICAL: Cannot access brightness field - PREVENTS BadVA CRASH
[   31.993083] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561b
[   31.993090] isp_core_tunning_unlocked_ioctl: Get control cmd=0x980902
[   31.993096] CRITICAL: Cannot access saturation field at 81170024 - PREVENTING BadVA CRASH
[   31.993467] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.993480] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980901 value=128
[   31.993487] Set control: cmd=0x980901 value=128
[   31.993553] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.993561] isp_core_tunning_unlocked_ioctl: Set control cmd=0x98091b value=128
[   31.993568] Set control: cmd=0x98091b value=128
[   31.993629] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.993637] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980902 value=128
[   31.993643] Set control: cmd=0x980902 value=128
[   31.993650] tisp_bcsh_saturation: saturation=128
[   31.993655] tiziano_bcsh_update: Updating BCSH parameters
[   31.993662]   Brightness: 128, Contrast: 128, Saturation: 128, Hue: 0
[   31.993668] tiziano_bcsh_update: BCSH update completed (simplified implementation)
[   31.993729] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.993737] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980900 value=128
[   31.993744] Set control: cmd=0x980900 value=128
[   31.993822] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.993831] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980901 value=128
[   31.993837] Set control: cmd=0x980901 value=128
[   31.993898] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.993906] isp_core_tunning_unlocked_ioctl: Set control cmd=0x98091b value=128
[   31.993912] Set control: cmd=0x98091b value=128
[   31.993971] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.993979] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980902 value=128
[   31.993986] Set control: cmd=0x980902 value=128
[   31.993992] tisp_bcsh_saturation: saturation=128
[   31.993997] tiziano_bcsh_update: Updating BCSH parameters
[   31.994004]   Brightness: 128, Contrast: 128, Saturation: 128, Hue: 0
[   31.994010] tiziano_bcsh_update: BCSH update completed (simplified implementation)
[   31.994077] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.994085] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980900 value=128
set jpeg streamMngCtx suceess
[   31.994092] Set control: cmd=0x980900 value=128
[   31.994162] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   31.994170] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   31.994176] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   31.994243] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   31.994250] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   31.994256] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   31.997406] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.997418] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980914 value=0
[   31.997426] Set control: cmd=0x980914 value=0
[   31.997598] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   31.997608] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980915 value=0
[   31.997615] Set control: cmd=0x980915 value=0
[   31.997742] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   31.997752] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   31.997758] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   31.997909] ISP IOCTL: cmd=0x800456d3 arg=0x0
[   31.997920] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=0 ***
[   31.997928] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   31.997934] csi_video_s_stream: sd=85219400, enable=0
[   31.997941] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 3 (enable=0)
[   31.997949] *** vic_core_s_stream: BINARY NINJA EXACT - sd=8540e000, enable=0 ***
[   31.997956] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   31.997960] *** vic_core_s_stream: STREAM OFF ***
[   31.997968] *** vin_s_stream: SAFE implementation - sd=84cde000, enable=0 ***
[   31.997974] vin_s_stream: VIN state = 4, enable = 0
[   31.997980] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   31.997988] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   31.997995] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   31.998001] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   31.998007] vin_s_stream: VIN state set to 3 (SAFE implementation)
[   31.998015] gc2053: s_stream called with enable=0
[   31.998022] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   31.998028] gc2053: *** STOPPING SENSOR HARDWARE STREAMING ***
[   31.998034] gc2053: Writing MIPI stream OFF registers (0x3e=0x00)
[   31.998044] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   31.998367] sensor_write: reg=0xfe val=0x00 SUCCESS
[   31.998375] sensor_write_array: reg[1] 0xfe=0x00 OK
[   31.998384] sensor_write: reg=0x3e val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   32.003752] sensor_write: reg=0x3e val=0x00 SUCCESS
[   32.003764] sensor_write_array: reg[2] 0x3e=0x00 OK
[   32.003771] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.003778] gc2053: Sensor hardware streaming stopped
[   32.003786] gc2053: s_stream called with enable=0
[   32.003792] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   32.003798] gc2053: *** STOPPING SENSOR HARDWARE STREAMING ***
[   32.003804] gc2053: Writing MIPI stream OFF registers (0x3e=0x00)
[   32.003814] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   32.004597] sensor_write: reg=0xfe val=0x00 SUCCESS
[   32.004606] sensor_write_array: reg[1] 0xfe=0x00 OK
[   32.004614] sensor_write: reg=0x3e val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   32.004996] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.005007] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   32.005013] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   32.005019] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   32.005024] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   32.005624] sensor_write: reg=0x3e val=0x00 SUCCESS
[   32.005637] sensor_write_array: reg[2] 0x3e=0x00 OK
[   32.005643] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.005650] gc2053: Sensor hardware streaming stopped
[   32.005664] ISP IOCTL: cmd=0x800456d1 arg=0x7fc1bfd0
[   32.005672] tx_isp_video_link_destroy: Destroying links for config 0
[   32.005680] tx_isp_video_link_destroy: All links destroyed, config reset to -1
[   32.005688] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.005694] isp_core_tunning_unlocked_ioctl: Set control cmd=0x8000164 value=1
[   32.005702] Set control: cmd=0x8000164 value=1
[   32.005709] ISP IOCTL: cmd=0x800456d0 arg=0x7fc1bfd0
[   32.005715] TX_ISP_VIDEO_LINK_SETUP: config=0
[   32.005721] TX_ISP_VIDEO_LINK_SETUP: Link config changed from -1 to 0
[   32.005726] TX_ISP_VIDEO_LINK_SETUP: Link config updated to 0
[   32.005733] ISP IOCTL: cmd=0x800456d2 arg=0x0
[   32.005740] *** tx_isp_video_link_stream: EXACT Binary Ninja MCP implementation - enable=1 ***
[   32.005746] *** tx_isp_video_link_stream: CRITICAL FIX - Calling activate_module on all subdevs first ***
[   32.005752] *** tx_isp_video_link_stream: Calling activate_module on subdev[1] ***
[   32.005759] *** tx_isp_video_link_stream: activate_module SUCCESS on subdev[1] ***
[   32.005766] *** tx_isp_video_link_stream: All activate_module calls complete ***
[   32.005772] *** csi_video_s_stream: EXACT Binary Ninja MCP implementation ***
[   32.005793] csi_video_s_stream: sd=85219400, enable=1
[   32.005800] csi_video_s_stream: EXACT Binary Ninja MCP - CSI state set to 4 (enable=1)
[   32.005808] *** vic_core_s_stream: BINARY NINJA EXACT - sd=8540e000, enable=1 ***
[   32.005814] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=2 ***
[   32.005819] *** vic_core_s_stream: STREAM ON ***
[   32.005824] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[   32.005830] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[   32.005836] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   32.005845] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   32.005851] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   32.005858] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[   32.005863] *** STREAMING: Configuring CPM registers for VIC access ***
[   32.029175] STREAMING: CPM clocks configured for VIC access
[   32.029190] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[   32.029196] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[   32.029203] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[   32.029208] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[   32.029214] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[   32.029220] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[   32.029229] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[   32.029236] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[   32.029242] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[   32.029248] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[   32.029254] *** VIC unlock: Commands written, checking VIC status register ***
[   32.029260] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[   32.029266] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[   32.029272] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[   32.029278] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[   32.029283] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[   32.029289] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[   32.029362] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[   32.029370] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[   32.029377] *** VIC REGISTER PROTECTION: SKIPPING interrupt-disrupting registers 0xc, 0x10, 0x14 - VIC interrupts already working ***
[   32.029384] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[   32.029390] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[   32.029398] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[   32.029404] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[   32.029410] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[   32.029416] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[   32.029422] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[   32.029428] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000001) ***
[   32.029434] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[   32.029440] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[   32.029446] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[   32.029452] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[   32.029458] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[   32.029464] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[   32.029470] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[   32.029476] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[   32.029481] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[   32.029489] *** ISP CORE VERIFY: 0x30=0x8fffffff, 0x10=0x00000133 ***
[   32.029494] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[   32.029504] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x07800438, 0x0c=0x00000001, 0x100=0x000002d0, 0x14=0x00000001 ***
[   32.029510] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[   32.029516] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[   32.029524] *** VIC INTERRUPT: imr_ok=1, imcr_ok=0, config_ok=1, control_ok=0 ***
[   32.029529] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[   32.029535] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[   32.029541] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[   32.029546] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[   32.029553] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[   32.029559] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   32.029566] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   32.029573] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[   32.029579] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[   32.029585] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[   32.029591] ispvic_frame_channel_s_stream: arg1=8540e000, arg2=1
[   32.029597] ispvic_frame_channel_s_stream: s0 (vic_dev) = 8540e000
[   32.029604] ispvic_frame_channel_s_stream[2441]: streamon
[   32.029610] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[   32.029616] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[   32.029622] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[   32.029628] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[   32.029633] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[   32.029640] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[   32.029646] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[   32.029653] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[   32.029659] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[   32.029665] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[   32.029670] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[   32.029676] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[   32.029682] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[   32.029690] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[   32.029698] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[   32.029705] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[   32.029713] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[   32.029720] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[   32.029726] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[   32.029732] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[   32.029738] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[   32.029745] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[   32.029751] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[   32.029757] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[   32.029762] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[   32.029769] ispvic_frame_channel_qbuf: arg1=8540e000, arg2=  (null)
[   32.029774] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[   32.029787] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x07800438 [0x300]=0x80040020 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[   32.029795] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x000002d0 [0x14]=0x00000001 (PRIMARY 0x14=stride) ***
[   32.029859] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[   32.029871] *** VIC BUFS (PRIMARY): [0x318]=0x06300000 [0x31c]=0x066f4800 [0x320]=0x06ae9000 [0x324]=0x06edd800 [0x328]=0x072d2000 ***
[   32.029877] *** VIC CTRL (PRIMARY): [0x300]=0x80040020 ***
[   32.029886] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[   32.029892] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[   32.029898] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[   32.029904] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[   32.029911] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[   32.030920] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[   32.030925] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[   32.030930] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[   32.031038] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   32.031146] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[   32.031153] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[   32.031158] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[   32.031164] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[   32.031170] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[   32.031176] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[   32.031183] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[   32.031189] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[   32.031194] *** tx_vic_enable_irq: completed successfully ***
[   32.700187] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[   32.700202] *** vic_core_s_stream: VIC state 2 - letting tx_isp_video_s_stream handle state 2 → 3 transition ***
[   32.700208] *** vic_core_s_stream: VIC initialized, final state=2 ***
[   32.700217] *** vin_s_stream: SAFE implementation - sd=84cde000, enable=1 ***
[   32.700224] vin_s_stream: VIN state = 3, enable = 1
[   32.700230] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   32.700240] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   32.700247] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   32.700253] vin_s_stream: VIN processing complete - sensor will be handled by core loop
[   32.700259] vin_s_stream: VIN state set to 4 (SAFE implementation)
[   32.700267] gc2053: s_stream called with enable=1
[   32.700273] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   32.700279] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   32.700286] gc2053: About to write streaming registers for interface 1
[   32.700292] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   32.700302] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   32.700627] sensor_write: reg=0xfe val=0x00 SUCCESS
[   32.700635] sensor_write_array: reg[1] 0xfe=0x00 OK
[   32.700643] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   32.701745] sensor_write: reg=0x3e val=0x91 SUCCESS
[   32.701758] sensor_write_array: reg[2] 0x3e=0x91 OK
[   32.701765] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.701773] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   32.701779] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   32.701785] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   32.701793] gc2053: s_stream called with enable=1
[   32.701799] gc2053: module data_interface=1, sensor data_interface=1 (1=MIPI, 2=DVP)
[   32.701805] gc2053: *** STARTING SENSOR HARDWARE STREAMING ***
[   32.701811] gc2053: About to write streaming registers for interface 1
[   32.701817] gc2053: *** WRITING MIPI STREAM ON REGISTERS - INCLUDING 0x3e=0x91 ***
[   32.701827] sensor_write: reg=0xfe val=0x00, client=85571c00, adapter=i2c0, addr=0x37
[   32.702149] sensor_write: reg=0xfe val=0x00 SUCCESS
[   32.702155] sensor_write_array: reg[1] 0xfe=0x00 OK
[   32.702164] sensor_write: reg=0x3e val=0x91, client=85571c00, adapter=i2c0, addr=0x37
[   32.709237] sensor_write: reg=0x3e val=0x91 SUCCESS
[   32.709249] sensor_write_array: reg[2] 0x3e=0x91 OK
[   32.709256] sensor_write_array: Complete - wrote 2 registers, 0 errors
[   32.709264] gc2053: *** MIPI STREAM ON REGISTER WRITE COMPLETE, ret=0 ***
[   32.709270] gc2053: *** STREAMING REGISTERS WRITTEN SUCCESSFULLY ***
[   32.709276] gc2053: CRITICAL: 0x3e=0x91 should now be written - sensor outputting MIPI data
[   32.713316] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc008561c
[   32.713328] isp_core_tunning_unlocked_ioctl: Set control cmd=0x980918 value=2
[   32.713335] Set control: cmd=0x980918 value=2
[   32.715345] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.715357] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.715363] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.717870] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.717883] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.717888] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.718097] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.718107] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.718113] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.718245] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.718253] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.718259] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.718421] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.718431] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.718437] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.718566] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.718575] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.718581] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.718717] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.718725] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.718731] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.718863] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.718871] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.718877] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.719097] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.719107] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.719203] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   32.719391] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   32.719402] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: DISABLE
[   32.719408] *** BINARY NINJA REFERENCE: Tuning disable - no hardware reset performed ***
[   33.005302] isp_core_tunning_unlocked_ioctl: Handling ISP core control command 0xc00c56c6
[   33.005315] isp_core_tunning_unlocked_ioctl: Tuning enable/disable: ENABLE
[   33.005321] *** DEBUG: enable=1, dev->core_dev->tuning_enabled=1 ***
[   33.005327] *** BINARY NINJA REFERENCE: Tuning enable - no hardware reset performed ***
[   33.005332] isp_core_tunning_unlocked_ioctl: ISP tuning enabled
[   33.190756] *** FRAME CHANNEL OPEN: minor=54 ***
[   33.190768] *** FRAME CHANNEL OPEN: Device not in array, creating new entry for minor 54 ***
[   33.190775] *** FRAME CHANNEL OPEN: Assigned to channel 0 ***
[   33.190782] *** FRAME CHANNEL 0: State set to 3 (ready for streaming) - Binary Ninja EXACT ***
[   33.190787] *** SAFE: Frame channel device stored in file->private_data ***
[   33.190793] *** FRAME CHANNEL 0 OPENED SUCCESSFULLY - NOW READY FOR IOCTLS ***
[   33.190801] Channel 0: Format 1920x1080, pixfmt=0x32315659, minor=54
[   33.190820] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc07056c3 ***
[   33.190827] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc07056c3 ***
[   33.190835] Channel 0: Set format 1920x1080 pixfmt=0x3231564e
[   33.191435] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0145608 ***
[   33.191446] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc0145608 ***
[   33.191453] *** Channel 0: REQBUFS - MEMORY-AWARE implementation ***
[   33.191460] Channel 0: Request 4 buffers, type=1 memory=2
[   33.191466] Channel 0: USERPTR mode - client will provide buffers
[   33.191472] Channel 0: USERPTR mode - 4 user buffers expected
[   33.191482] *** Channel 0: REQBUFS allocated VBM buffer array for 4 buffers at 811ce400 ***
[   33.191489] *** Channel 0: VIC active_buffer_count set to 4 ***
[   33.191494] *** REQBUFS: VIC DMA will be configured during streaming via vic_pipo_mdma_enable ***
[   33.191501] *** Channel 0: MEMORY-AWARE REQBUFS SUCCESS - 4 buffers ***
[   33.191526] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   33.191533] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   33.191540] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   33.191546] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   33.191553] *** Channel 0: QBUF - Buffer received: index=0, type=1, memory=2 ***
[   33.191560] *** Channel 0: QBUF - Buffer m.offset=0x70d9000, m.userptr=0x70d9000 ***
[   33.191567] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   33.191574] *** Channel 0: QBUF - Validation: buffer.index=0, state->buffer_count=4 ***
[   33.191580] *** Channel 0: QBUF - Queue buffer index=0 ***
[   33.191586] *** QBUF: No buffer allocated for index 0 - VBM initialization mode ***
[   33.191594] *** Channel 0: QBUF - Using buffer struct   (null) for index 0 ***
[   33.191601] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   33.191608] *** Channel 0: QBUF EVENT - No VIC callback ***
[   33.191614] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x70d9000 ***
[   33.191623] *** Channel 0: QBUF - Buffer 0: phys_addr=0x70d9000, size=4147200 (VALIDATED) ***
[   33.191630] *** Channel 0: QBUF VBM - Stored buffer[0] = 0x70d9000, total_count=1 ***
[   33.191638] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=811ce400, vbm_buffer_count=1 ***
[   33.191645] *** Channel 0: QBUF - VBM buffer slot[0] available ***
[   33.191652] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x70d9000 ***
[   33.191658] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   33.191668] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   33.191675] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   33.191681] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   33.191687] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   33.191694] *** Channel 0: QBUF - Buffer received: index=1, type=1, memory=2 ***
[   33.191702] *** Channel 0: QBUF - Buffer m.offset=0x73d6000, m.userptr=0x73d6000 ***
[   33.191709] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   33.191716] *** Channel 0: QBUF - Validation: buffer.index=1, state->buffer_count=4 ***
[   33.191722] *** Channel 0: QBUF - Queue buffer index=1 ***
[   33.191728] *** QBUF: No buffer allocated for index 1 - VBM initialization mode ***
[   33.191735] *** Channel 0: QBUF - Using buffer struct   (null) for index 1 ***
[   33.191741] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   33.191747] *** Channel 0: QBUF EVENT - No VIC callback ***
[   33.191754] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x73d6000 ***
[   33.191762] *** Channel 0: QBUF - Buffer 1: phys_addr=0x73d6000, size=4147200 (VALIDATED) ***
[   33.191769] *** Channel 0: QBUF VBM - Stored buffer[1] = 0x73d6000, total_count=2 ***
[   33.191777] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=811ce400, vbm_buffer_count=2 ***
[   33.191783] *** Channel 0: QBUF - VBM buffer slot[1] available ***
[   33.191790] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x73d6000 ***
[   33.191796] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   33.191804] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   33.191811] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   33.191817] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   33.191823] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   33.191830] *** Channel 0: QBUF - Buffer received: index=2, type=1, memory=2 ***
[   33.191838] *** Channel 0: QBUF - Buffer m.offset=0x76d3000, m.userptr=0x76d3000 ***
[   33.191845] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   33.191852] *** Channel 0: QBUF - Validation: buffer.index=2, state->buffer_count=4 ***
[   33.191858] *** Channel 0: QBUF - Queue buffer index=2 ***
[   33.191864] *** QBUF: No buffer allocated for index 2 - VBM initialization mode ***
[   33.191870] *** Channel 0: QBUF - Using buffer struct   (null) for index 2 ***
[   33.191877] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   33.191883] *** Channel 0: QBUF EVENT - No VIC callback ***
[   33.191890] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x76d3000 ***
[   33.191897] *** Channel 0: QBUF - Buffer 2: phys_addr=0x76d3000, size=4147200 (VALIDATED) ***
[   33.191905] *** Channel 0: QBUF VBM - Stored buffer[2] = 0x76d3000, total_count=3 ***
[   33.191912] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=811ce400, vbm_buffer_count=3 ***
[   33.191919] *** Channel 0: QBUF - VBM buffer slot[2] available ***
[   33.191926] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x76d3000 ***
[   33.191932] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   33.191941] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc044560f ***
[   33.191948] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc044560f ***
[   33.191954] *** Channel 0: QBUF - ENTRY POINT - VBM buffer queue attempt ***
[   33.191960] *** Channel 0: QBUF - Buffer copied from user successfully ***
[   33.191967] *** Channel 0: QBUF - Buffer received: index=3, type=1, memory=2 ***
[   33.191974] *** Channel 0: QBUF - Buffer m.offset=0x79d0000, m.userptr=0x79d0000 ***
[   33.191981] *** Channel 0: QBUF - Validation: buffer.type=1, fcd->buffer_type=1 ***
[   33.191988] *** Channel 0: QBUF - Validation: buffer.index=3, state->buffer_count=4 ***
[   33.191994] *** Channel 0: QBUF - Queue buffer index=3 ***
[   33.192000] *** QBUF: No buffer allocated for index 3 - VBM initialization mode ***
[   33.192007] *** Channel 0: QBUF - Using buffer struct   (null) for index 3 ***
[   33.192013] *** Channel 0: QBUF - Calling tx_isp_send_event_to_remote(VIC, 0x3000008, &buffer) ***
[   33.192019] *** Channel 0: QBUF EVENT - No VIC callback ***
[   33.192026] *** Channel 0: QBUF - Using REAL buffer address from userptr: 0x79d0000 ***
[   33.192034] *** Channel 0: QBUF - Buffer 3: phys_addr=0x79d0000, size=4147200 (VALIDATED) ***
[   33.192042] *** Channel 0: QBUF VBM - Stored buffer[3] = 0x79d0000, total_count=4 ***
[   33.192049] *** Channel 0: QBUF - VBM buffer check: vbm_buffer_addresses=811ce400, vbm_buffer_count=4 ***
[   33.192056] *** Channel 0: QBUF - VBM buffer slot[3] available ***
[   33.192062] *** Channel 0: QBUF VBM mode - VBMFillPool initialization with buffer_addr=0x79d0000 ***
[   33.192068] *** Channel 0: QBUF completed successfully (MIPS-safe) ***
[   33.192159] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x80045612 ***
[   33.192169] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x80045612 ***
[   33.192176] *** Channel 0: VIDIOC_STREAMON - Binary Ninja implementation ***
[   33.192182] Channel 0: STREAMON - Enqueuing buffers in driver
[   33.192260] *** Channel 0: STREAMON - Core device is stateless, only managing streaming flag ***
[   33.200120] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   33.200133] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   33.200140] *** Channel 0: Frame completion wait ***
[   33.200146] *** Channel 0: Waiting for frame (timeout=100ms) ***
[   33.200152] *** Channel 0: Frame wait returned 10 ***
[   33.200158] *** Channel 0: Frame was ready, consuming it ***
[   33.200260] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0xc0445611 ***
[   33.200268] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0xc0445611 ***
[   33.200275] *** Channel 0: DQBUF - dequeue buffer request ***
[   33.200280] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[   33.200291] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 85ffb000 (name=gc2053) ***
[   33.200298] *** tx_isp_get_sensor: Found real sensor: 85ffb000 ***
[   33.200304] *** Channel 0: DQBUF waiting for frame completion (timeout=200ms) ***
[   33.200505] *** frame_channel_unlocked_ioctl: ENTRY - cmd=0x400456bf ***
[   33.200517] *** Frame channel 0 IOCTL: MIPS-safe processing - cmd=0x400456bf ***
[   33.200524] *** Channel 0: Frame completion wait ***
[   33.200529] *** Channel 0: Waiting for frame (timeout=100ms) ***
root@ing-wyze-cam3-a000 ~# cat /opt/trace.txt 
ISP Register Monitor v1.3 initializing
ISP Monitor: initialized region isp-w01 at phys 0x0x10023000 size 0x1000
ISP Monitor: initialized region isp-m0 at phys 0x0x13300000 size 0x100000
ISP Monitor: initialized region isp-w02 at phys 0x0x133e0000 size 0x10000
ISP Monitor: initialized region isp-csi at phys 0x0x10022000 size 0x1000
ISP isp-m0: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x54560031 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xf00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x60: 0x0 -> 0x800800 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x64: 0x0 -> 0x9d09d0 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x8: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x80700008 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x28: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x2c: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x90: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x70: 0x0 -> 0x6002 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x74: 0x0 -> 0x7003 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x98: 0x0 -> 0x30000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xa8: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xac: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x40000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xdc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xc (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xec: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0xff808000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x80007000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x114: 0x0 -> 0x777111 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x0 -> 0x3f00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9864: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x987c: 0x0 -> 0xc0000000 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9880: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9884: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9890: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x989c: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xfc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x100: 0x0 -> 0x2d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x0 -> 0x2c000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x7800000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a4: 0x0 -> 0x100010 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a8: 0x0 -> 0x4440 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1b0: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x98a8: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a00: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a04: 0x0 -> 0x3000300 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a2c: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a34: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a70: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a7c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a80: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a88: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a98: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0x0 -> 0xf001f001 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb00c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb010: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb014: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb018: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb01c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb020: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb024: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb028: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb02c: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb030: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb034: 0x0 -> 0xffff0100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb038: 0x0 -> 0x1ff00 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb04c: 0x0 -> 0x103 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb050: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb078: 0x0 -> 0x10000000 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb07c: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb080: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb084: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb088: 0x0 -> 0x1fdeff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb08c: 0x0 -> 0x1fff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x10: 0x0 -> 0x133 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2b (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xa (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x1c: 0x0 -> 0x8 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x30: 0x0 -> 0x8fffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x80007000 -> 0x80007001 (delta: 270.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x3f00 -> 0x0 (delta: 270.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0xf001f001 -> 0x7 (delta: 270.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x40404040 -> 0x0 (delta: 270.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x2 -> 0x30 (delta: 350.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x2 -> 0x1 (delta: 440.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x30 -> 0x1 (delta: 90.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x8c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x2c000 -> 0x1f40000 (delta: 440.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x7800000 -> 0x780002b (delta: 440.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a0: 0x0 -> 0x1 (delta: 0.000 ms)
root@ing-wyze-cam3-a000 ~# [INFO:RTSP.cpp]: stream 0 available at: rtsp://192.168.50.211/ch0
[INFO:RTSP.cpp]: stream 1 available at: rtsp://192.168.50.211/ch1
