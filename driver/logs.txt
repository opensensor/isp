[  107.272855] *** tx_isp_init: EXACT Binary Ninja MCP reference implementation ***
[  107.275443] *** PROBE: tx_isp_platform_probe CALLED for device tx-isp ***
[  107.275461] *** PROBE: ISP device allocated successfully: 80514000 ***
[  107.275478] *** PROBE: ISP core registers mapped at 0x13300000 for system_reg_write ***
[  107.275483] *** PROBE: ISP device mutex and spinlock initialized ***
[  107.275491] *** PROBE: Event callback structure initialized at 0x85f58680 (offset 0xc from isp_dev) ***
[  107.275501] parse_rmem_bootarg: Found rmem=29M@0x06300000 (size=0x01d00000)
[  107.275508] *** PROBE: Initialized rmem_addr=0x06300000, size=0x01d00000 ***
[  107.275515] *** PROBE: Platform data: c06b7060 ***
[  107.275520] *** PROBE: Platform data validation passed ***
[  107.275525] *** REFERENCE DRIVER: Individual subdevices will initialize their own memory regions ***
[  107.275531] *** PLATFORM DEVICES ALREADY REGISTERED IN INIT - SKIPPING DUPLICATE REGISTRATION ***
[  107.275537] *** tx_isp_module_init: EXACT Binary Ninja reference implementation ***
[  107.275543] *** tx_isp_module_init: Registering subdev platform drivers FIRST ***
[  107.275548] *** TX ISP SUBDEV PLATFORM DRIVERS REGISTRATION ***
[  107.296901] All ISP subdev platform drivers registered successfully
[  107.299814] *** tx_isp_create_graph_and_nodes: EXACT Binary Ninja reference implementation ***
[  107.299827] *** Registering platform device 0 from platform data ***
[  107.304641] *** tx_isp_subdev_init: CALLED for device 'isp-w00' ***
[  107.304656] *** tx_isp_subdev_init: pdev=c06b6d40, sd=85402800, ops=c06b7360 ***
[  107.304663] *** tx_isp_subdev_init: ourISPdev=80514000 ***
[  107.304669] *** tx_isp_subdev_init: ops=c06b7360, ops->core=c06b7394 ***
[  107.304675] *** tx_isp_subdev_init: ops->core->init=c066d0e8 ***
[  107.304683] *** tx_isp_subdev_init: Set sd->dev=c06b6d50, sd->pdev=c06b6d40 ***
[  107.304689] *** tx_isp_subdev_init: CSI subdev registered at slot 0 ***
[  107.304695] tx_isp_module_init: Module initialized for isp-w00
[  107.304701] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[  107.304707] *** isp-w00: Skipping IRQ request - device has no IRQ resource ***
[  107.304715] tx_isp_subdev_init: platform_get_resource returned c06b6e38 for device isp-w00
[  107.304723] tx_isp_subdev_init: Memory resource found: start=0x10022000, end=0x10022fff, size=0x00001000
[  107.304731] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[  107.304737] *** tx_isp_subdev_init: Clock count stored: 2 ***
[  107.304745] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b6d40, sd=85402800, ourISPdev=80514000 ***
[  107.304753] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w00' to ourISPdev=80514000 ***
[  107.304759] *** DEBUG: Device name comparison - checking 'isp-w00' ***
[  107.304764] *** DEBUG: About to check device name matches ***
[  107.304770] *** CSI BASIC REGISTERS SET: b0022000 (from tx_isp_subdev_init) ***
[  107.304777] *** LINKED CSI device: 85402800, regs: b0022000 ***
[  107.304783] *** CSI PROBE: Set dev_priv to csi_dev 85402800 AFTER subdev_init ***
[  107.304789] *** CSI PROBE: Set host_priv to csi_dev 85402800 AFTER subdev_init ***
[  107.304796] *** CSI PROBE: Using register mapping from tx_isp_subdev_init: b0022000 ***
[  107.304802] *** CSI PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[  107.304823] *** Platform device 0 (isp-w00) registered successfully ***
[  107.304829] *** Registering platform device 1 from platform data ***
[  107.307306] *** VIC PROBE: IRQ numbers initialized to 38 ***
[  107.307321] *** VIC PROBE: Primary VIC registers mapped at 0x133e0000 -> b33e0000 ***
[  107.307327] *** VIC PROBE: VIC control registers mapped at 0x10023000 -> b0023000 ***
[  107.307333] *** VIC PROBE: Hardware IRQ function pointers set using SAFE struct members (tx_isp_enable/disable_irq) ***
[  107.307340] *** VIC PROBE: Secondary VIC register test - 0x1e0 = 0x00000000 (mapping verified) ***
[  107.307346] *** VIC PROBE: VIC interrupt registers will be configured during tx_isp_vic_start ***
[  107.307352] *** BINARY NINJA MCP: VIC buffer management ENABLED - following reference driver ***
[  107.307357] *** VIC will operate in FULL mode with complete buffer operations ***
[  107.307363] *** BINARY NINJA MCP: VIC full initialization complete - buffer management ENABLED ***
[  107.307370] *** VIC PROBE: Initialized default dimensions 1920x1080 and critical fields ***
[  107.307376] *** VIC PROBE: Event callback structure stored in VIC device field ***
[  107.307383] *** VIC PROBE: Stored vic_dev pointer 85215400 in subdev dev_priv ***
[  107.307389] *** VIC PROBE: Set host_priv to vic_dev 85215400 for Binary Ninja compatibility ***
[  107.307395] *** VIC PROBE: Skipping tx_isp_vic_hw_init - working branch configures interrupts during VIC operations ***
[  107.307402] *** tx_isp_subdev_init: CALLED for device 'isp-w02' ***
[  107.307410] *** tx_isp_subdev_init: pdev=c06b6e58, sd=85215400, ops=c06b72e0 ***
[  107.307416] *** tx_isp_subdev_init: ourISPdev=80514000 ***
[  107.307423] *** tx_isp_subdev_init: ops=c06b72e0, ops->core=c06b72fc ***
[  107.307429] *** tx_isp_subdev_init: ops->core->init=c0682788 ***
[  107.307436] *** tx_isp_subdev_init: Set sd->dev=c06b6e68, sd->pdev=c06b6e58 ***
[  107.307443] *** tx_isp_subdev_init: VIC device linked and registered at slot 1 ***
[  107.307449] tx_isp_module_init: Module initialized for isp-w02
[  107.307455] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[  107.307463] *** tx_isp_request_irq: platform_get_irq returned 38 for device isp-w02 ***
[  107.307469] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 38 (device: isp-w02) ***
[  107.307479] *** tx_isp_request_irq: About to call request_threaded_irq(irq=38, handler=c06756e0, thread=c0668584, flags=0x80, name=isp-w02, dev_id=80514000) ***
[  107.307488] *** tx_isp_request_irq: About to register IRQ 38 with handlers: main=c06756e0, thread=c0668584 ***
[  107.314589] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[  107.314600] *** tx_isp_request_irq: IRQ 38 LEFT ENABLED (working version behavior) ***
[  107.314607] *** tx_isp_request_irq: IRQ 38 registered successfully for isp-w02 ***
[  107.314616] tx_isp_subdev_init: platform_get_resource returned c06b6f50 for device isp-w02
[  107.314624] tx_isp_subdev_init: Memory resource found: start=0x10023000, end=0x10023fff, size=0x00001000
[  107.314633] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[  107.314639] *** tx_isp_subdev_init: Clock count stored: 2 ***
[  107.314647] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b6e58, sd=85215400, ourISPdev=80514000 ***
[  107.314655] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w02' to ourISPdev=80514000 ***
[  107.314660] *** DEBUG: Device name comparison - checking 'isp-w02' ***
[  107.314665] *** DEBUG: About to check device name matches ***
[  107.314671] *** DEBUG: VIC DEVICE NAME MATCHED! Processing VIC device linking ***
[  107.314677] *** DEBUG: Retrieved vic_dev from subdev data: 85215400 ***
[  107.314683] *** DEBUG: About to set ourISPdev->vic_dev = 85215400 ***
[  107.314689] *** DEBUG: ourISPdev before linking: 80514000 ***
[  107.314695] *** DEBUG: ourISPdev->vic_dev set to: 85215400 ***
[  107.314701] *** VIC AUTO-LINK: VIC IRQ already registered (irq=38) ***
[  107.314707] *** VIC AUTO-LINK: Using existing VIC register mapping (0x133e0000) - NOT remapping ***
[  107.314713] *** VIC AUTO-LINK: Registers are mapped, registering interrupt handler ***
[  107.314720] *** VIC PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[  107.314725] *** VIC PROBE: Sensor dimensions will be cached when sensor module loads ***
[  107.314731] *** VIC PROBE: VIC frame channel streaming will be initialized via tisp_init ***
[  107.314737] *** VIC PROBE: Waiting for core subdev init to call tisp_init which calls tx_isp_subdev_pipo ***
[  107.314759] *** Platform device 1 (isp-w02) registered successfully ***
[  107.314766] *** Registering platform device 2 from platform data ***
[  107.315093] *** tx_isp_subdev_init: CALLED for device 'isp-w01' ***
[  107.315109] *** tx_isp_subdev_init: pdev=c06b6c68, sd=85407800, ops=c06b81c4 ***
[  107.315115] *** tx_isp_subdev_init: ourISPdev=80514000 ***
[  107.315122] *** tx_isp_subdev_init: ops=c06b81c4, ops->core=c06b81e4 ***
[  107.315128] *** tx_isp_subdev_init: ops->core->init=c068eee0 ***
[  107.315135] *** tx_isp_subdev_init: Set sd->dev=c06b6c78, sd->pdev=c06b6c68 ***
[  107.315141] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b81c4 ***
[  107.315149] *** tx_isp_subdev_init: ops->sensor=  (null), csi_subdev_ops=c06b7360 ***
[  107.315155] tx_isp_module_init: Module initialized for isp-w01
[  107.315161] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[  107.315169] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b6c68, sd=85407800, ourISPdev=80514000 ***
[  107.315176] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-w01' to ourISPdev=80514000 ***
[  107.315182] *** DEBUG: Device name comparison - checking 'isp-w01' ***
[  107.315187] *** DEBUG: About to check device name matches ***
[  107.315193] *** DEBUG: VIN device name matched! Setting up VIN device ***
[  107.315199] *** LINKED VIN device: 85407800 ***
[  107.315207] *** VIN SUBDEV OPS CONFIGURED: core=c06b81e4, video=c06b81d8, s_stream=c068f0d8 ***
[  107.315213] *** REGISTERED VIN SUBDEV AT SLOT 2 WITH VIDEO OPS ***
[  107.315220] *** VIN PROBE: Set dev_priv to vin_dev 85407800 AFTER subdev_init ***
[  107.315226] *** VIN PROBE: Device linking handled automatically by tx_isp_subdev_init ***
[  107.315245] *** Platform device 2 (isp-w01) registered successfully ***
[  107.315251] *** Registering platform device 3 from platform data ***
[  107.317763] *** tx_isp_subdev_init: CALLED for device 'isp-fs' ***
[  107.317779] *** tx_isp_subdev_init: pdev=c06b6b28, sd=85407a00, ops=c06b7414 ***
[  107.317785] *** tx_isp_subdev_init: ourISPdev=80514000 ***
[  107.317793] *** tx_isp_subdev_init: ops=c06b7414, ops->core=c06be29c ***
[  107.317906] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[  107.317916] *** tx_isp_subdev_init: Set sd->dev=c06b6b38, sd->pdev=c06b6b28 ***
[  107.317923] *** tx_isp_subdev_init: NOT A SENSOR - ops=c06b7414 ***
[  107.317931] *** tx_isp_subdev_init: ops->sensor=c06be290, csi_subdev_ops=c06b7360 ***
[  107.317937] tx_isp_module_init: Module initialized for isp-fs
[  107.317943] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[  107.317949] *** isp-fs: Skipping IRQ request - device has no IRQ resource ***
[  107.317956] tx_isp_subdev_init: platform_get_resource returned   (null) for device isp-fs
[  107.317962] tx_isp_subdev_init: No memory resource for device isp-fs (logical device - OK)
[  107.317970] *** FS PROBE: Set dev_priv to fs_dev 85407a00 AFTER subdev_init ***
[  107.317976] *** FS PROBE: Device linking handled automatically by tx_isp_subdev_auto_link() ***
[  107.317994] *** Platform device 3 (isp-fs) registered successfully ***
[  107.318001] *** Registering platform device 4 from platform data ***
[  107.324879] *** tx_isp_core_probe: NEW ARCHITECTURE - Creating separate core device ***
[  107.324893] *** tx_isp_create_core_device: Creating ISP core device ***
[  107.324909] *** tx_isp_create_core_device: Core device created successfully: 81160000 ***
[  107.324917] *** CORE PROBE: Set dev_priv to core_dev 81160000 ***
[  107.324923] *** CORE PROBE: Set host_priv to core_dev 81160000 - PREVENTS BadVA CRASH ***
[  107.324930] *** tx_isp_subdev_init: CALLED for device 'isp-m0' ***
[  107.324937] *** tx_isp_subdev_init: pdev=c06b69f0, sd=81160000, ops=c06b7118 ***
[  107.324943] *** tx_isp_subdev_init: ourISPdev=80514000 ***
[  107.324951] *** tx_isp_subdev_init: ops=c06b7118, ops->core=c06b7144 ***
[  107.324957] *** tx_isp_subdev_init: WARNING - ops->core->init is NULL! ***
[  107.324963] *** tx_isp_subdev_init: Set sd->dev=c06b6a00, sd->pdev=c06b69f0 ***
[  107.324970] *** tx_isp_subdev_init: Core ISP subdev registered at slot 3 ***
[  107.324977] tx_isp_module_init: Module initialized for isp-m0
[  107.324982] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[  107.324991] *** tx_isp_request_irq: platform_get_irq returned 37 for device isp-m0 ***
[  107.324997] *** tx_isp_request_irq: Using main ISP device as dev_id for IRQ 37 (device: isp-m0) ***
[  107.325007] *** tx_isp_request_irq: About to call request_threaded_irq(irq=37, handler=c06756e0, thread=c0668584, flags=0x80, name=isp-m0, dev_id=80514000) ***
[  107.325015] *** tx_isp_request_irq: About to register IRQ 37 with handlers: main=c06756e0, thread=c0668584 ***
[  107.327305] *** tx_isp_request_irq: request_threaded_irq returned 0 ***
[  107.327317] *** tx_isp_request_irq: IRQ 37 LEFT ENABLED (working version behavior) ***
[  107.327324] *** tx_isp_request_irq: IRQ 37 registered successfully for isp-m0 ***
[  107.327333] tx_isp_subdev_init: platform_get_resource returned c06b6af0 for device isp-m0
[  107.327341] tx_isp_subdev_init: Memory resource found: start=0x13300000, end=0x133fffff, size=0x00100000
[  107.327351] *** tx_isp_subdev_init: Clock initialization deferred until streaming starts ***
[  107.327357] *** tx_isp_subdev_init: Clock count stored: 3 ***
[  107.327365] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06b69f0, sd=81160000, ourISPdev=80514000 ***
[  107.327373] *** tx_isp_subdev_auto_link: Auto-linking device 'isp-m0' to ourISPdev=80514000 ***
[  107.327379] *** DEBUG: Device name comparison - checking 'isp-m0' ***
[  107.327383] *** DEBUG: About to check device name matches ***
[  107.327390] *** DEBUG: CORE device name matched! Setting up Core device ***
[  107.327397] *** CRITICAL FIX: CORE regs mapped to core device: b3300000 ***
[  107.327405] *** tx_isp_link_core_device: Linking core device 81160000 to ISP device 80514000 ***
[  107.327410] *** tx_isp_link_core_device: Core device linked successfully ***
[  107.327417] *** Core subdev already registered at slot 3: 81160000 ***
[  107.327423] *** LINKED CORE device: 81160000 ***
[  107.327428] *** CORE SUBDEV REGISTERED AT INDEX 0 ***
[  107.327433] *** tx_isp_core_probe: Core subdev initialized successfully ***
[  107.327440] *** tx_isp_core_device_init: Initializing core device: 81160000 ***
[  107.327452] *** tx_isp_core_device_init: State transitions handled by slake_module ***
[  107.327457] *** tx_isp_core_device_init: Core device initialized successfully ***
[  107.327463] *** tx_isp_core_device_init: Core sensor IOCTL handler set for sensor registration ***
[  107.327471] *** tx_isp_link_core_device: Linking core device 81160000 to ISP device 80514000 ***
[  107.327476] *** tx_isp_link_core_device: Core device linked successfully ***
[  107.327483] *** Core subdev already registered at slot 3: 81160000 ***
[  107.327497] *** tx_isp_core_probe: Assigned frame_channels=81160400 to core_dev ***
[  107.327503] *** tx_isp_core_probe: VIC device creation deferred to platform driver system ***
[  107.327509] *** tx_isp_core_probe: Platform drivers will call tx_isp_subdev_init for proper initialization ***
[  107.327514] *** tx_isp_core_probe: Calling sensor_early_init ***
[  107.327519] *** tx_isp_core_probe: ISP clock management handled by infrastructure ***
[  107.327525] *** tx_isp_core_probe: ispcore_slake_module will be called when VIC reaches streaming state ***
[  107.327531] *** tx_isp_core_probe: Core device setup complete ***
[  107.327537] ***   - Core device: 81160000 ***
[  107.327542] ***   - Channel count: 6 ***
[  107.327548] ***   - Linked to ISP device: 80514000 ***
[  107.327553] *** tx_isp_core_probe: Initializing core tuning system ***
[  107.327559] isp_core_tuning_init: Initializing tuning data structure
[  107.327572] isp_core_tuning_init: Tuning data structure initialized at 84d56000
[  107.327578] isp_core_tuning_init: Structure size: 4356 bytes (vs Binary Ninja 0x40d0)
[  107.327583] *** SAFE: mode_flag properly initialized using struct member access ***
[  107.327589] *** tx_isp_core_probe: Tuning init SUCCESS ***
[  107.327594] *** tx_isp_core_probe: Set platform driver data ***
[  107.327599] *** tx_isp_core_probe: Set global core device reference ***
[  107.327605] *** tx_isp_core_probe: SUCCESS - Core device fully initialized ***
[  107.327611] ***   - Core device: 81160000 ***
[  107.327616] ***   - Tuning device: 84d56000 ***
[  107.327621] *** tx_isp_core_probe: Creating frame channel devices ***
[  107.327627] *** tx_isp_create_framechan_devices: Creating frame channel devices ***
[  107.328051] *** Created frame channel device: /dev/framechan0 (major=10, minor=54) ***
[  107.334980] *** Created frame channel device: /dev/framechan1 (major=10, minor=53) ***
[  107.337518] *** Created frame channel device: /dev/framechan2 (major=10, minor=52) ***
[  107.340267] *** Created frame channel device: /dev/framechan3 (major=10, minor=51) ***
[  107.340278] *** tx_isp_create_framechan_devices: All frame channel devices created ***
[  107.340284] *** tx_isp_core_probe: Frame channel devices created successfully ***
[  107.340289] *** tx_isp_core_probe: Creating ISP M0 tuning device node ***
[  107.340295] tisp_code_create_tuning_node: Creating ISP M0 tuning device node
[  107.340304] tisp_code_create_tuning_node: Allocated dynamic major 251
[  107.355219] *** ISP M0 TUNING DEVICE CREATED: /dev/isp-m0 (major=251, minor=0) ***
[  107.355231] *** tx_isp_core_probe: ISP M0 tuning device node created successfully ***
[  107.355237] *** tx_isp_core_probe: Core probe completed successfully ***
[  107.355256] *** Platform device 4 (isp-m0) registered successfully ***
[  107.355262] *** tx_isp_create_graph_and_nodes: Creating /proc/jz/isp entries ***
[  107.355285] *** Created /proc/jz/isp directory ***
[  107.355293] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w00 (with ioctl handler) ***
[  107.355302] *** Created /proc/jz/isp/isp-w00 entry with file ops ***
[  107.355309] *** PROC ENTRY DEBUG: Using vic_w02_proc_fops for isp-w02 (with write handler) ***
[  107.355316] *** PROC ENTRY DEBUG: vic_w02_proc_fops.write=c0684954 ***
[  107.355324] *** PROC ENTRY FIX: Using ISP device 80514000 instead of VIC device 85215400 for isp-w02 ***
[  107.355332] *** Created /proc/jz/isp/isp-w02 entry with file ops ***
[  107.355339] *** PROC ENTRY DEBUG: Using isp_vic_frd_fops for isp-w01 (with ioctl handler) ***
[  107.355347] *** Created /proc/jz/isp/isp-w01 entry with file ops ***
[  107.355357] *** Created /proc/jz/isp/isp-fs entry with file ops ***
[  107.355367] *** Created /proc/jz/isp/isp-m0 entry with file ops ***
[  107.355372] *** tx_isp_create_graph_and_nodes: Registering misc devices ***
[  107.355378] *** Misc device registration handled via main tx-isp device ***
[  107.355383] *** Misc device registration handled via main tx-isp device ***
[  107.355389] *** Misc device registration handled via main tx-isp device ***
[  107.355394] *** Misc device registration handled via main tx-isp device ***
[  107.355399] *** Misc device registration handled via main tx-isp device ***
[  107.355405] *** tx_isp_create_graph_and_nodes: Initializing frame channels ***
[  107.355414] *** Frame channel 0 initialized: 1920x1080, state=2 ***
[  107.355421] *** Frame channel 1 initialized: 640x360, state=2 ***
[  107.355427] *** tx_isp_create_graph_and_nodes: Binary Ninja reference implementation complete ***
[  107.355434] *** tx_isp_module_init: VIC device linkage check - isp_dev->vic_dev = 85215400 ***
[  107.355439] *** ENABLING HARDWARE INTERRUPT GENERATION ***
[  107.355445] *** WRITING VIC INTERRUPT ENABLE REGISTERS ***
[  107.355451] *** EARLY VIC ENABLES (MODULE INIT): PRIMARY [1e0]=0x00000000 [1e4]=0x00000000 ***
[  107.355459] *** EARLY VIC ENABLES (MODULE INIT): CONTROL [1e0]=0x00000000 [1e4]=0x00000000 ***
[  107.355464] *** ENABLING ISP CORE INTERRUPT REGISTERS FOR MIPI DATA ***
[  107.355470] *** ISP CORE INTERRUPT REGISTERS ENABLED at legacy(+0xb*) and new(+0x98b*) ***
[  107.355475] *** BOTH VIC AND ISP CORE INTERRUPTS NOW ENABLED! ***
[  107.355481] *** tx_isp_module_init: Binary Ninja reference implementation complete ***
[  107.355487] *** PROBE: Binary Ninja reference implementation complete ***
[  107.358078] *** tx_isp_init: Platform device and driver registered successfully ***
[  108.437867] === gc2053 SENSOR MODULE INIT ===
[  108.441235] gc2053 I2C driver registered, waiting for device creation by ISP
[  112.469008] ISP opened successfully
[  112.469348] ISP IOCTL: cmd=0x805056c1 arg=0x77dffd60
[  112.469363] subdev_sensor_ops_ioctl: cmd=0x2000000
[  112.469369] *** subdev_sensor_ops_ioctl: IOCTL 0x2000000 - Creating I2C sensor device ***
[  112.469375] *** Creating I2C sensor device on adapter 0 ***
[  112.469384] *** Creating I2C device: gc2053 at 0x37 ***
[  112.469389] *** isp_i2c_new_subdev_board: MIPS-SAFE implementation - FIXED CRASH ***
[  112.469397] Creating I2C subdev: type=gc2053 addr=0x37 on adapter i2c0 (MIPS-safe)
[  112.469403] *** MIPS-SAFE: Requesting sensor module gc2053 ***
[  112.472189] *** MIPS-SAFE: Valid I2C address 0x37, creating device ***
[  112.477937] === GC2053 SENSOR PROBE START ===
[  112.477954] sensor_probe: client=85d07d00, addr=0x37, adapter=84074c10 (i2c0)
[  112.477959] === PERFORMING GPIO RESET SEQUENCE BEFORE I2C ===
[  112.477965] Requesting reset GPIO 18
[  112.477974] GPIO reset sequence: HIGH -> LOW -> HIGH
root@ing-wyze-cam3-a000 ~# dmesg 
[  112.707793] sensor_probe: data_interface=1, sensor_max_fps=30
[  112.707799] sensor_probe: MIPI 30fps
[  112.707806] *** tx_isp_subdev_init: CALLED for device 'gc2053' ***
[  112.707814] *** tx_isp_subdev_init: pdev=c06e1168, sd=80519c00, ops=c06e1248 ***
[  112.707820] *** tx_isp_subdev_init: ourISPdev=80514000 ***
[  112.707827] *** tx_isp_subdev_init: ops=c06e1248, ops->core=c06e1274 ***
[  112.707833] *** tx_isp_subdev_init: ops->core->init=c06de6bc ***
[  112.707840] *** tx_isp_subdev_init: Set sd->dev=c06e1178, sd->pdev=c06e1168 ***
[  112.707847] *** tx_isp_subdev_init: DETECTED SENSOR SUBDEV - ops=c06e1248, ops->sensor=c06e125c ***
[  112.707853] *** tx_isp_subdev_init: Set up sensor module notify handler ***
[  112.707860] *** tx_isp_subdev_init: SENSOR subdev registered at slot 4, sd=80519c00 ***
[  112.707867] *** tx_isp_subdev_init: SENSOR ops=c06e1248, ops->sensor=c06e125c ***
[  112.707873] *** tx_isp_subdev_init: Core state transitions handled by slake_module ***
[  112.707879] tx_isp_module_init: Module initialized for (null)
[  112.707885] *** tx_isp_subdev_init: VIC interrupt registration will happen in auto-linking function ***
[  112.707893] *** tx_isp_subdev_auto_link: ENTRY - pdev=c06e1168, sd=80519c00, ourISPdev=80514000 ***
[  112.707901] *** tx_isp_subdev_auto_link: Auto-linking device 'gc2053' to ourISPdev=80514000 ***
[  112.707906] *** DEBUG: Device name comparison - checking 'gc2053' ***
[  112.707911] *** DEBUG: About to check device name matches ***
[  112.707919] *** DETECTED SENSOR DEVICE: 'gc2053' - checking for existing registration ***
[  112.707925] *** SENSOR 'gc2053' registered at subdev index 5 ***
[  112.707932] *** SENSOR subdev: 80519c00, ops: c06e1248 ***
[  112.707938] *** SENSOR ops->sensor: c06e125c ***
[  112.707943] *** SENSOR REGISTERED: Caching sensor dimensions from /proc/jz/sensor/ ***
[  112.707949] *** cache_sensor_dimensions_from_proc: Reading sensor dimensions during probe ***
[  112.708025] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[  112.708034] *** cache_sensor_dimensions_from_proc: Successfully cached 1920x1080 ***
[  112.708041] sensor_probe: I2C client association complete
[  112.708049]   sd=80519c00, client=85d07d00, addr=0x37, adapter=i2c0
[  112.708055] === TESTING I2C COMMUNICATION AFTER GPIO RESET ===
[  112.708063] sensor_read: reg=0xf0, client=85d07d00, adapter=i2c0, addr=0x37
[  112.710694] sensor_read: reg=0xf0 value=0x20 SUCCESS
[  112.710706] I2C test read (0xf0): ret=0, val=0x20 (expected 0x20)
[  112.710711] *** SUCCESS: I2C communication working after GPIO reset! ***
[  112.710721] sensor_read: reg=0xf1, client=85d07d00, adapter=i2c0, addr=0x37
[  112.711211] sensor_read: reg=0xf1 value=0x53 SUCCESS
[  112.711219] I2C test read (0xf1): ret=0, val=0x53 (expected 0x53)
[  112.711224] === I2C COMMUNICATION TEST COMPLETE ===
[  112.711231] Registering gc2053 with ISP framework (sd=80519c00, sensor=80519c00)
[  112.711237] gc2053 registered with ISP framework successfully
[  112.711260] *** MIPS-SAFE: I2C device created successfully at 0x85d07d00 ***
[  112.711267] *** MIPS-SAFE: Module reference acquired for gc2053 ***
[  112.711273] *** MIPS-SAFE: Sensor subdev data found, device ready ***
[  112.711281] *** I2C DEVICE READY: gc2053 at 0x37 (MIPS-safe) ***
[  112.711287] *** I2C sensor device created successfully: gc2053 at 0x37 ***
[  112.711327] ISP IOCTL: cmd=0xc050561a arg=0x7f8b5a38
[  112.711333] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 0
[  112.711340] TX_ISP_SENSOR_ENUM_INPUT: Returning sensor 'gc2053' at index 0
[  112.711348] ISP IOCTL: cmd=0xc050561a arg=0x7f8b5a38
[  112.711353] TX_ISP_SENSOR_ENUM_INPUT: Enumerating sensor at index 1
[  112.711359] TX_ISP_SENSOR_ENUM_INPUT: No sensor at index 1 - returning error to end enumeration
[  112.711367] ISP IOCTL: cmd=0xc0045627 arg=0x7f8b5a90
[  112.711377] ISP IOCTL: cmd=0x800856d5 arg=0x7f8b5a88
[  112.711383] TX_ISP_GET_BUF: IOCTL handler called
[  112.711390] TX_ISP_GET_BUF: core_dev=81160000, isp_dev=80514000
[  112.711397] TX_ISP_GET_BUF: Using dimensions 1920x1080 from core device
[  112.711403] TX_ISP_GET_BUF: Returning buffer size=4685424, paddr=0x6300000
[  112.786904] ISP IOCTL: cmd=0x800856d4 arg=0x7f8b5a88
[  112.786917] TX_ISP_SET_BUF: addr=0x6300000 size=0
[  112.791647] ISP IOCTL: cmd=0x40045626 arg=0x7f8b5aa0
[  112.791661] subdev_sensor_ops_ioctl: cmd=0x2000003
[  112.791667] subdev_sensor_ops_ioctl: IOCTL 0x2000003 - Get sensor input
[  112.791673] subdev_sensor_ops_ioctl: Auto-selected first sensor at slot 0 as index 0
[  112.791679] subdev_sensor_ops_ioctl: Returning current sensor index 0
[  112.791689] ISP IOCTL: cmd=0x80045612 arg=0x0
[  112.791695] *** tx_isp_video_s_stream: EXACT Binary Ninja reference implementation - enable=1 ***
[  112.791701] === ISP Subdevice Array Status ===
[  112.791709]   [0]: isp-w00 (sd=85402800)
[  112.791716]   [1]: isp-w02 (sd=85215400)
[  112.791723]   [2]: isp-w01 (sd=85407800)
[  112.791729]   [3]: isp-m0 (sd=81160000)
[  112.791736]   [4]: gc2053 (sd=80519c00)
[  112.791742]   [5]: gc2053 (sd=80519c00)
[  112.791747]   [6]: (empty)
[  112.791753]   [7]: (empty)
[  112.791757]   [8]: (empty)
[  112.791763]   [9]: (empty)
[  112.791767]   [10]: (empty)
[  112.791773]   [11]: (empty)
[  112.791778]   [12]: (empty)
[  112.791783]   [13]: (empty)
[  112.791788]   [14]: (empty)
[  112.791793]   [15]: (empty)
[  112.791798] === End Subdevice Array ===
[  112.791803] *** tx_isp_video_s_stream: STREAM ON - Initializing core first ***
[  112.791809] *** tx_isp_video_s_stream: VIC state is 1, calling activate_module ***
[  112.791814] *** ispcore_activate_module: Fixed for our struct layouts ***
[  112.791819] *** VIC device in state 1, proceeding with activation ***
[  112.791826] *** CLOCK CONFIGURATION SECTION: clk_array=  (null), clk_count=2 ***
[  112.791831] *** SUBDEVICE VALIDATION SECTION ***
[  112.791836] VIC device state set to 2 (activated)
[  112.791841] *** CRITICAL FUNCTION POINTER CALL SECTION ***
[  112.791847] *** CALLING CRITICAL VIC INITIALIZATION FUNCTION ***
[  112.791852] *** VIC control register written with 0x4000000 to ISP+0x9a00 ***
[  112.791857] *** SUBDEVICE INITIALIZATION LOOP ***
[  112.791862] *** SUBDEVICE INITIALIZATION: Traversing backwards to initialize sensors first ***
[  112.791869] Calling subdev 5 initialization (REVERSE ORDER - sensors first)
[  112.791876] *** SENSOR_INIT: gc2053 enable=1 ***
[  112.791884] SENSOR_INIT: Configuring gc2053 (chip_id=0x2053, 1920x1080)
[  112.791891] *** CALLING SENSOR_WRITE_ARRAY WITH c06e1e20 (should be 137 registers) ***
[  112.791901] sensor_write: reg=0xfe val=0x80, client=85d07d00, adapter=i2c0, addr=0x37
[  112.792222] sensor_write: reg=0xfe val=0x80 SUCCESS
[  112.792229] sensor_write_array: reg[1] 0xfe=0x80 OK
[  112.792238] sensor_write: reg=0xfe val=0x80, client=85d07d00, adapter=i2c0, addr=0x37
[  112.797749] sensor_write: reg=0xfe val=0x80 SUCCESS
[  112.797761] sensor_write_array: reg[2] 0xfe=0x80 OK
[  112.797772] sensor_write: reg=0xfe val=0x80, client=85d07d00, adapter=i2c0, addr=0x37
[  112.798090] sensor_write: reg=0xfe val=0x80 SUCCESS
[  112.798097] sensor_write_array: reg[3] 0xfe=0x80 OK
[  112.798105] sensor_write: reg=0xfe val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.798423] sensor_write: reg=0xfe val=0x00 SUCCESS
[  112.798430] sensor_write_array: reg[4] 0xfe=0x00 OK
[  112.798438] sensor_write: reg=0xf2 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.798750] sensor_write: reg=0xf2 val=0x00 SUCCESS
[  112.798757] sensor_write_array: reg[5] 0xf2=0x00 OK
[  112.798765] sensor_write: reg=0xf3 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.799078] sensor_write: reg=0xf3 val=0x00 SUCCESS
[  112.799085] sensor_write_array: reg[6] 0xf3=0x00 OK
[  112.799094] sensor_write: reg=0xf4 val=0x36, client=85d07d00, adapter=i2c0, addr=0x37
[  112.799407] sensor_write: reg=0xf4 val=0x36 SUCCESS
[  112.799414] sensor_write_array: reg[7] 0xf4=0x36 OK
[  112.799422] sensor_write: reg=0xf5 val=0xc0, client=85d07d00, adapter=i2c0, addr=0x37
[  112.799735] sensor_write: reg=0xf5 val=0xc0 SUCCESS
[  112.799742] sensor_write_array: reg[8] 0xf5=0xc0 OK
[  112.799751] sensor_write: reg=0xf6 val=0x44, client=85d07d00, adapter=i2c0, addr=0x37
[  112.800064] sensor_write: reg=0xf6 val=0x44 SUCCESS
[  112.800071] sensor_write_array: reg[9] 0xf6=0x44 OK
[  112.800079] sensor_write: reg=0xf7 val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.800392] sensor_write: reg=0xf7 val=0x01 SUCCESS
[  112.800399] sensor_write_array: reg[10] 0xf7=0x01 OK
[  112.800407] sensor_write: reg=0xf8 val=0x68, client=85d07d00, adapter=i2c0, addr=0x37
[  112.800720] sensor_write: reg=0xf8 val=0x68 SUCCESS
[  112.800729] sensor_write: reg=0xf9 val=0x40, client=85d07d00, adapter=i2c0, addr=0x37
[  112.801042] sensor_write: reg=0xf9 val=0x40 SUCCESS
[  112.801050] sensor_write: reg=0xfc val=0x8e, client=85d07d00, adapter=i2c0, addr=0x37
[  112.801363] sensor_write: reg=0xfc val=0x8e SUCCESS
[  112.801371] sensor_write: reg=0xfe val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.801742] sensor_write: reg=0xfe val=0x00 SUCCESS
[  112.801751] sensor_write: reg=0x87 val=0x18, client=85d07d00, adapter=i2c0, addr=0x37
[  112.802063] sensor_write: reg=0x87 val=0x18 SUCCESS
[  112.802072] sensor_write: reg=0xee val=0x30, client=85d07d00, adapter=i2c0, addr=0x37
[  112.806005] sensor_write: reg=0xee val=0x30 SUCCESS
[  112.806022] sensor_write: reg=0xd0 val=0xb7, client=85d07d00, adapter=i2c0, addr=0x37
[  112.806359] sensor_write: reg=0xd0 val=0xb7 SUCCESS
[  112.806368] sensor_write: reg=0x03 val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.806683] sensor_write: reg=0x03 val=0x04 SUCCESS
[  112.806692] sensor_write: reg=0x04 val=0x60, client=85d07d00, adapter=i2c0, addr=0x37
[  112.807003] sensor_write: reg=0x04 val=0x60 SUCCESS
[  112.807012] sensor_write: reg=0x05 val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.807323] sensor_write: reg=0x05 val=0x04 SUCCESS
[  112.807331] sensor_write: reg=0x06 val=0x4c, client=85d07d00, adapter=i2c0, addr=0x37
[  112.807645] sensor_write: reg=0x06 val=0x4c SUCCESS
[  112.807653] sensor_write: reg=0x07 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.809097] sensor_write: reg=0x07 val=0x00 SUCCESS
[  112.809114] sensor_write: reg=0x08 val=0x11, client=85d07d00, adapter=i2c0, addr=0x37
[  112.809435] sensor_write: reg=0x08 val=0x11 SUCCESS
[  112.809444] sensor_write: reg=0x09 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.809775] sensor_write: reg=0x09 val=0x00 SUCCESS
[  112.809785] sensor_write: reg=0x0a val=0x02, client=85d07d00, adapter=i2c0, addr=0x37
[  112.811687] sensor_write: reg=0x0a val=0x02 SUCCESS
[  112.811703] sensor_write: reg=0x0b val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.814266] sensor_write: reg=0x0b val=0x00 SUCCESS
[  112.814282] sensor_write: reg=0x0c val=0x02, client=85d07d00, adapter=i2c0, addr=0x37
[  112.814600] sensor_write: reg=0x0c val=0x02 SUCCESS
[  112.814609] sensor_write: reg=0x0d val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.814925] sensor_write: reg=0x0d val=0x04 SUCCESS
[  112.814934] sensor_write: reg=0x0e val=0x40, client=85d07d00, adapter=i2c0, addr=0x37
[  112.815247] sensor_write: reg=0x0e val=0x40 SUCCESS
[  112.815256] sensor_write: reg=0x12 val=0xe2, client=85d07d00, adapter=i2c0, addr=0x37
[  112.815608] sensor_write: reg=0x12 val=0xe2 SUCCESS
[  112.815695] sensor_write: reg=0x13 val=0x16, client=85d07d00, adapter=i2c0, addr=0x37
[  112.816012] sensor_write: reg=0x13 val=0x16 SUCCESS
[  112.816021] sensor_write: reg=0x19 val=0x0a, client=85d07d00, adapter=i2c0, addr=0x37
[  112.816337] sensor_write: reg=0x19 val=0x0a SUCCESS
[  112.816345] sensor_write: reg=0x21 val=0x1c, client=85d07d00, adapter=i2c0, addr=0x37
[  112.816657] sensor_write: reg=0x21 val=0x1c SUCCESS
[  112.816666] sensor_write: reg=0x28 val=0x0a, client=85d07d00, adapter=i2c0, addr=0x37
[  112.821924] sensor_write: reg=0x28 val=0x0a SUCCESS
[  112.821939] sensor_write: reg=0x29 val=0x24, client=85d07d00, adapter=i2c0, addr=0x37
[  112.822257] sensor_write: reg=0x29 val=0x24 SUCCESS
[  112.822266] sensor_write: reg=0x2b val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.822583] sensor_write: reg=0x2b val=0x04 SUCCESS
[  112.822591] sensor_write: reg=0x32 val=0xf8, client=85d07d00, adapter=i2c0, addr=0x37
[  112.822905] sensor_write: reg=0x32 val=0xf8 SUCCESS
[  112.822914] sensor_write: reg=0x37 val=0x03, client=85d07d00, adapter=i2c0, addr=0x37
[  112.823227] sensor_write: reg=0x37 val=0x03 SUCCESS
[  112.823235] sensor_write: reg=0x39 val=0x15, client=85d07d00, adapter=i2c0, addr=0x37
[  112.823549] sensor_write: reg=0x39 val=0x15 SUCCESS
[  112.823557] sensor_write: reg=0x43 val=0x07, client=85d07d00, adapter=i2c0, addr=0x37
[  112.823870] sensor_write: reg=0x43 val=0x07 SUCCESS
[  112.823879] sensor_write: reg=0x44 val=0x40, client=85d07d00, adapter=i2c0, addr=0x37
[  112.824191] sensor_write: reg=0x44 val=0x40 SUCCESS
[  112.824200] sensor_write: reg=0x46 val=0x0b, client=85d07d00, adapter=i2c0, addr=0x37
[  112.824513] sensor_write: reg=0x46 val=0x0b SUCCESS
[  112.824521] sensor_write: reg=0x4b val=0x20, client=85d07d00, adapter=i2c0, addr=0x37
[  112.824835] sensor_write: reg=0x4b val=0x20 SUCCESS
[  112.824843] sensor_write: reg=0x4e val=0x08, client=85d07d00, adapter=i2c0, addr=0x37
[  112.825156] sensor_write: reg=0x4e val=0x08 SUCCESS
[  112.825164] sensor_write: reg=0x55 val=0x20, client=85d07d00, adapter=i2c0, addr=0x37
[  112.825477] sensor_write: reg=0x55 val=0x20 SUCCESS
[  112.825485] sensor_write: reg=0x66 val=0x05, client=85d07d00, adapter=i2c0, addr=0x37
[  112.825799] sensor_write: reg=0x66 val=0x05 SUCCESS
[  112.825807] sensor_write: reg=0x67 val=0x05, client=85d07d00, adapter=i2c0, addr=0x37
[  112.826120] sensor_write: reg=0x67 val=0x05 SUCCESS
[  112.826129] sensor_write: reg=0x77 val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.826441] sensor_write: reg=0x77 val=0x01 SUCCESS
[  112.826450] sensor_write: reg=0x78 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.832036] sensor_write: reg=0x78 val=0x00 SUCCESS
[  112.832052] sensor_write: reg=0x7c val=0x93, client=85d07d00, adapter=i2c0, addr=0x37
[  112.832369] sensor_write: reg=0x7c val=0x93 SUCCESS
[  112.832377] sensor_write_array: reg[50] 0x7c=0x93 OK
[  112.832386] sensor_write: reg=0x8c val=0x12, client=85d07d00, adapter=i2c0, addr=0x37
[  112.832704] sensor_write: reg=0x8c val=0x12 SUCCESS
[  112.832713] sensor_write: reg=0x8d val=0x92, client=85d07d00, adapter=i2c0, addr=0x37
[  112.833027] sensor_write: reg=0x8d val=0x92 SUCCESS
[  112.833035] sensor_write: reg=0x90 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.833348] sensor_write: reg=0x90 val=0x00 SUCCESS
[  112.833357] sensor_write: reg=0x41 val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.833674] sensor_write: reg=0x41 val=0x04 SUCCESS
[  112.833683] sensor_write: reg=0x42 val=0x9d, client=85d07d00, adapter=i2c0, addr=0x37
[  112.833996] sensor_write: reg=0x42 val=0x9d SUCCESS
[  112.834005] sensor_write: reg=0x9d val=0x10, client=85d07d00, adapter=i2c0, addr=0x37
[  112.834318] sensor_write: reg=0x9d val=0x10 SUCCESS
[  112.834326] sensor_write: reg=0xce val=0x7c, client=85d07d00, adapter=i2c0, addr=0x37
[  112.834639] sensor_write: reg=0xce val=0x7c SUCCESS
[  112.834648] sensor_write: reg=0xd2 val=0x41, client=85d07d00, adapter=i2c0, addr=0x37
[  112.834961] sensor_write: reg=0xd2 val=0x41 SUCCESS
[  112.834969] sensor_write: reg=0xd3 val=0xdc, client=85d07d00, adapter=i2c0, addr=0x37
[  112.835282] sensor_write: reg=0xd3 val=0xdc SUCCESS
[  112.835291] sensor_write: reg=0xe6 val=0x50, client=85d07d00, adapter=i2c0, addr=0x37
[  112.835603] sensor_write: reg=0xe6 val=0x50 SUCCESS
[  112.835612] sensor_write: reg=0xb6 val=0xc0, client=85d07d00, adapter=i2c0, addr=0x37
[  112.835925] sensor_write: reg=0xb6 val=0xc0 SUCCESS
[  112.835933] sensor_write: reg=0xb0 val=0x70, client=85d07d00, adapter=i2c0, addr=0x37
[  112.836246] sensor_write: reg=0xb0 val=0x70 SUCCESS
[  112.836255] sensor_write: reg=0xb1 val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.836567] sensor_write: reg=0xb1 val=0x01 SUCCESS
[  112.836576] sensor_write: reg=0xb2 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.836889] sensor_write: reg=0xb2 val=0x00 SUCCESS
[  112.836897] sensor_write: reg=0xb3 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.837731] sensor_write: reg=0xb3 val=0x00 SUCCESS
[  112.837741] sensor_write: reg=0xb4 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.838057] sensor_write: reg=0xb4 val=0x00 SUCCESS
[  112.838065] sensor_write: reg=0xb8 val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.842137] sensor_write: reg=0xb8 val=0x01 SUCCESS
[  112.842152] sensor_write: reg=0xb9 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.842475] sensor_write: reg=0xb9 val=0x00 SUCCESS
[  112.842485] sensor_write: reg=0x26 val=0x30, client=85d07d00, adapter=i2c0, addr=0x37
[  112.842799] sensor_write: reg=0x26 val=0x30 SUCCESS
[  112.842808] sensor_write: reg=0xfe val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.843121] sensor_write: reg=0xfe val=0x01 SUCCESS
[  112.843130] sensor_write: reg=0x40 val=0x23, client=85d07d00, adapter=i2c0, addr=0x37
[  112.843443] sensor_write: reg=0x40 val=0x23 SUCCESS
[  112.843452] sensor_write: reg=0x55 val=0x07, client=85d07d00, adapter=i2c0, addr=0x37
[  112.843765] sensor_write: reg=0x55 val=0x07 SUCCESS
[  112.843773] sensor_write: reg=0x60 val=0x40, client=85d07d00, adapter=i2c0, addr=0x37
[  112.844087] sensor_write: reg=0x60 val=0x40 SUCCESS
[  112.844095] sensor_write: reg=0xfe val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.844408] sensor_write: reg=0xfe val=0x04 SUCCESS
[  112.844417] sensor_write: reg=0x14 val=0x78, client=85d07d00, adapter=i2c0, addr=0x37
[  112.844729] sensor_write: reg=0x14 val=0x78 SUCCESS
[  112.844738] sensor_write: reg=0x15 val=0x78, client=85d07d00, adapter=i2c0, addr=0x37
[  112.845051] sensor_write: reg=0x15 val=0x78 SUCCESS
[  112.845059] sensor_write: reg=0x16 val=0x78, client=85d07d00, adapter=i2c0, addr=0x37
[  112.845372] sensor_write: reg=0x16 val=0x78 SUCCESS
[  112.845381] sensor_write: reg=0x17 val=0x78, client=85d07d00, adapter=i2c0, addr=0x37
[  112.848863] sensor_write: reg=0x17 val=0x78 SUCCESS
[  112.848878] sensor_write: reg=0xfe val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.849195] sensor_write: reg=0xfe val=0x01 SUCCESS
[  112.849203] sensor_write: reg=0x92 val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.849519] sensor_write: reg=0x92 val=0x00 SUCCESS
[  112.849528] sensor_write: reg=0x94 val=0x03, client=85d07d00, adapter=i2c0, addr=0x37
[  112.849841] sensor_write: reg=0x94 val=0x03 SUCCESS
[  112.849850] sensor_write: reg=0x95 val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.850163] sensor_write: reg=0x95 val=0x04 SUCCESS
[  112.850171] sensor_write: reg=0x96 val=0x38, client=85d07d00, adapter=i2c0, addr=0x37
[  112.850485] sensor_write: reg=0x96 val=0x38 SUCCESS
[  112.850493] sensor_write: reg=0x97 val=0x07, client=85d07d00, adapter=i2c0, addr=0x37
[  112.852247] sensor_write: reg=0x97 val=0x07 SUCCESS
[  112.852259] sensor_write: reg=0x98 val=0x80, client=85d07d00, adapter=i2c0, addr=0x37
[  112.852582] sensor_write: reg=0x98 val=0x80 SUCCESS
[  112.852591] sensor_write: reg=0xfe val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.852905] sensor_write: reg=0xfe val=0x01 SUCCESS
[  112.852913] sensor_write: reg=0x01 val=0x05, client=85d07d00, adapter=i2c0, addr=0x37
[  112.853227] sensor_write: reg=0x01 val=0x05 SUCCESS
[  112.853235] sensor_write: reg=0x02 val=0x89, client=85d07d00, adapter=i2c0, addr=0x37
[  112.853549] sensor_write: reg=0x02 val=0x89 SUCCESS
[  112.853557] sensor_write: reg=0x04 val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.857204] sensor_write: reg=0x04 val=0x01 SUCCESS
[  112.857221] sensor_write: reg=0x07 val=0xa6, client=85d07d00, adapter=i2c0, addr=0x37
[  112.857537] sensor_write: reg=0x07 val=0xa6 SUCCESS
[  112.857545] sensor_write: reg=0x08 val=0xa9, client=85d07d00, adapter=i2c0, addr=0x37
[  112.859024] sensor_write: reg=0x08 val=0xa9 SUCCESS
[  112.859041] sensor_write: reg=0x09 val=0xa8, client=85d07d00, adapter=i2c0, addr=0x37
[  112.859361] sensor_write: reg=0x09 val=0xa8 SUCCESS
[  112.859371] sensor_write: reg=0x0a val=0xa7, client=85d07d00, adapter=i2c0, addr=0x37
[  112.859701] sensor_write: reg=0x0a val=0xa7 SUCCESS
[  112.859710] sensor_write: reg=0x0b val=0xff, client=85d07d00, adapter=i2c0, addr=0x37
[  112.860022] sensor_write: reg=0x0b val=0xff SUCCESS
[  112.860031] sensor_write: reg=0x0c val=0xff, client=85d07d00, adapter=i2c0, addr=0x37
[  112.860345] sensor_write: reg=0x0c val=0xff SUCCESS
[  112.860353] sensor_write: reg=0x0f val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.862349] sensor_write: reg=0x0f val=0x00 SUCCESS
[  112.862364] sensor_write: reg=0x50 val=0x1c, client=85d07d00, adapter=i2c0, addr=0x37
[  112.862681] sensor_write: reg=0x50 val=0x1c SUCCESS
[  112.862690] sensor_write: reg=0x89 val=0x03, client=85d07d00, adapter=i2c0, addr=0x37
[  112.863008] sensor_write: reg=0x89 val=0x03 SUCCESS
[  112.863017] sensor_write: reg=0xfe val=0x04, client=85d07d00, adapter=i2c0, addr=0x37
[  112.863331] sensor_write: reg=0xfe val=0x04 SUCCESS
[  112.863340] sensor_write: reg=0x28 val=0x86, client=85d07d00, adapter=i2c0, addr=0x37
[  112.863653] sensor_write: reg=0x28 val=0x86 SUCCESS
[  112.863660] sensor_write_array: reg[100] 0x28=0x86 OK
[  112.863669] sensor_write: reg=0x29 val=0x86, client=85d07d00, adapter=i2c0, addr=0x37
[  112.864961] sensor_write: reg=0x29 val=0x86 SUCCESS
[  112.865098] sensor_write: reg=0x2a val=0x86, client=85d07d00, adapter=i2c0, addr=0x37
[  112.865421] sensor_write: reg=0x2a val=0x86 SUCCESS
[  112.865431] sensor_write: reg=0x2b val=0x68, client=85d07d00, adapter=i2c0, addr=0x37
[  112.867751] sensor_write: reg=0x2b val=0x68 SUCCESS
[  112.867767] sensor_write: reg=0x2c val=0x68, client=85d07d00, adapter=i2c0, addr=0x37
[  112.868085] sensor_write: reg=0x2c val=0x68 SUCCESS
[  112.868095] sensor_write: reg=0x2d val=0x68, client=85d07d00, adapter=i2c0, addr=0x37
[  112.868413] sensor_write: reg=0x2d val=0x68 SUCCESS
[  112.868421] sensor_write: reg=0x2e val=0x68, client=85d07d00, adapter=i2c0, addr=0x37
[  112.868735] sensor_write: reg=0x2e val=0x68 SUCCESS
[  112.868745] sensor_write: reg=0x2f val=0x68, client=85d07d00, adapter=i2c0, addr=0x37
[  112.869058] sensor_write: reg=0x2f val=0x68 SUCCESS
[  112.869066] sensor_write: reg=0x30 val=0x4f, client=85d07d00, adapter=i2c0, addr=0x37
[  112.869379] sensor_write: reg=0x30 val=0x4f SUCCESS
[  112.869388] sensor_write: reg=0x31 val=0x68, client=85d07d00, adapter=i2c0, addr=0x37
[  112.872467] sensor_write: reg=0x31 val=0x68 SUCCESS
[  112.872482] sensor_write: reg=0x32 val=0x67, client=85d07d00, adapter=i2c0, addr=0x37
[  112.872800] sensor_write: reg=0x32 val=0x67 SUCCESS
[  112.872809] sensor_write: reg=0x33 val=0x66, client=85d07d00, adapter=i2c0, addr=0x37
[  112.873127] sensor_write: reg=0x33 val=0x66 SUCCESS
[  112.873136] sensor_write: reg=0x34 val=0x66, client=85d07d00, adapter=i2c0, addr=0x37
[  112.873449] sensor_write: reg=0x34 val=0x66 SUCCESS
[  112.873459] sensor_write: reg=0x35 val=0x66, client=85d07d00, adapter=i2c0, addr=0x37
[  112.873770] sensor_write: reg=0x35 val=0x66 SUCCESS
[  112.873779] sensor_write: reg=0x36 val=0x66, client=85d07d00, adapter=i2c0, addr=0x37
[  112.874091] sensor_write: reg=0x36 val=0x66 SUCCESS
[  112.874100] sensor_write: reg=0x37 val=0x66, client=85d07d00, adapter=i2c0, addr=0x37
[  112.874413] sensor_write: reg=0x37 val=0x66 SUCCESS
[  112.874422] sensor_write: reg=0x38 val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.874735] sensor_write: reg=0x38 val=0x62 SUCCESS
[  112.874743] sensor_write: reg=0x39 val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.875057] sensor_write: reg=0x39 val=0x62 SUCCESS
[  112.875065] sensor_write: reg=0x3a val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.882569] sensor_write: reg=0x3a val=0x62 SUCCESS
[  112.882585] sensor_write: reg=0x3b val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.882903] sensor_write: reg=0x3b val=0x62 SUCCESS
[  112.882911] sensor_write: reg=0x3c val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.883229] sensor_write: reg=0x3c val=0x62 SUCCESS
[  112.883238] sensor_write: reg=0x3d val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.883552] sensor_write: reg=0x3d val=0x62 SUCCESS
[  112.883561] sensor_write: reg=0x3e val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.883874] sensor_write: reg=0x3e val=0x62 SUCCESS
[  112.883883] sensor_write: reg=0x3f val=0x62, client=85d07d00, adapter=i2c0, addr=0x37
[  112.884196] sensor_write: reg=0x3f val=0x62 SUCCESS
[  112.884205] sensor_write: reg=0xfe val=0x01, client=85d07d00, adapter=i2c0, addr=0x37
[  112.884518] sensor_write: reg=0xfe val=0x01 SUCCESS
[  112.884526] sensor_write: reg=0x9a val=0x06, client=85d07d00, adapter=i2c0, addr=0x37
[  112.884839] sensor_write: reg=0x9a val=0x06 SUCCESS
[  112.884848] sensor_write: reg=0xfe val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.885161] sensor_write: reg=0xfe val=0x00 SUCCESS
[  112.885169] sensor_write: reg=0x7b val=0x2a, client=85d07d00, adapter=i2c0, addr=0x37
[  112.885483] sensor_write: reg=0x7b val=0x2a SUCCESS
[  112.885491] sensor_write: reg=0x23 val=0x2d, client=85d07d00, adapter=i2c0, addr=0x37
[  112.885804] sensor_write: reg=0x23 val=0x2d SUCCESS
[  112.885813] sensor_write: reg=0xfe val=0x03, client=85d07d00, adapter=i2c0, addr=0x37
[  112.886125] sensor_write: reg=0xfe val=0x03 SUCCESS
[  112.886134] sensor_write: reg=0x01 val=0x27, client=85d07d00, adapter=i2c0, addr=0x37
[  112.886447] sensor_write: reg=0x01 val=0x27 SUCCESS
[  112.886455] sensor_write: reg=0x02 val=0x56, client=85d07d00, adapter=i2c0, addr=0x37
[  112.886769] sensor_write: reg=0x02 val=0x56 SUCCESS
[  112.886777] sensor_write: reg=0x03 val=0x8e, client=85d07d00, adapter=i2c0, addr=0x37
[  112.887090] sensor_write: reg=0x03 val=0x8e SUCCESS
[  112.887098] sensor_write: reg=0x12 val=0x80, client=85d07d00, adapter=i2c0, addr=0x37
[  112.887411] sensor_write: reg=0x12 val=0x80 SUCCESS
[  112.887420] sensor_write: reg=0x13 val=0x07, client=85d07d00, adapter=i2c0, addr=0x37
[  112.887756] sensor_write: reg=0x13 val=0x07 SUCCESS
[  112.887765] sensor_write: reg=0x15 val=0x12, client=85d07d00, adapter=i2c0, addr=0x37
[  112.888081] sensor_write: reg=0x15 val=0x12 SUCCESS
[  112.888090] sensor_write: reg=0xfe val=0x00, client=85d07d00, adapter=i2c0, addr=0x37
[  112.888403] sensor_write: reg=0xfe val=0x00 SUCCESS
[  112.888413] sensor_write: reg=0x3e val=0x91, client=85d07d00, adapter=i2c0, addr=0x37
[  112.888726] sensor_write: reg=0x3e val=0x91 SUCCESS
[  112.888733] sensor_write_array: Complete - wrote 137 registers, 0 errors
[  112.888739] *** SENSOR_WRITE_ARRAY RETURNED: 0 ***
[  112.888745] *** SENSOR_INIT: gc2053 initialization complete - marked as initialized ***
[  112.888753] Calling subdev 4 initialization (REVERSE ORDER - sensors first)
[  112.888760] *** SENSOR_INIT: gc2053 enable=1 ***
[  112.888766] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[  112.888772] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[  112.888779] Calling subdev 2 initialization (REVERSE ORDER - sensors first)
[  112.888786] VIN: tx_isp_vin_init: EXACT Binary Ninja implementation with safety checks = 0x1
[  112.888792] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[  112.888800] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 80519c00 (name=gc2053) ***
[  112.888807] *** tx_isp_get_sensor: Found real sensor: 80519c00 ***
[  112.888813] VIN: tx_isp_vin_init: a0 (sensor) = 80519c00
[  112.888819] VIN: tx_isp_vin_init: using VIN device from global ISP: 85407800
[  112.888826] VIN: tx_isp_vin_init: calling sensor init function = 0x1
[  112.888832] *** SENSOR_INIT: gc2053 enable=1 ***
[  112.888838] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[  112.888844] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[  112.888850] VIN: tx_isp_vin_init: sensor init returned = 0x0
[  112.888856] VIN: tx_isp_vin_init: *** VIN STATE SET SAFELY *** = 0x3
[  112.888861] VIN: tx_isp_vin_init: EXACT Binary Ninja result = 0x0
[  112.888867] Calling subdev 1 initialization (REVERSE ORDER - sensors first)
[  112.888875] *** vic_core_ops_init: ENTRY - sd=85215400, enable=1 ***
[  112.888881] *** vic_core_ops_init: vic_dev=85215400, current state check ***
[  112.888887] *** vic_core_ops_init: current_state=2, enable=1 ***
[  112.888893] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[  112.888899] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[  112.888905] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[  112.888911] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[  112.888917] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[  112.888923] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[  112.888929] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[  112.888935] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[  112.888941] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[  112.888947] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[  112.888953] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[  112.888959] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[  112.888967] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[  112.888973] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[  112.888978] *** tx_vic_enable_irq: completed successfully ***
[  112.888984] Calling subdev 0 initialization (REVERSE ORDER - sensors first)
[  112.888992] csi_core_ops_init: sd=85402800, csi_dev=85402800, enable=1
[  112.888997] *** VIC device final state set to 2 (fully activated) ***
[  112.889003] *** ispcore_activate_module: SUCCESS - ALL REGISTER WRITES SHOULD NOW BE TRIGGERED ***
[  112.889009] *** tx_isp_video_s_stream: ispcore_activate_module completed ***
[  112.889015] *** tx_isp_video_s_stream: VIC state is 2, calling VIC core->init ***
[  112.889021] *** vic_core_ops_init: ENTRY - sd=85215400, enable=1 ***
[  112.889028] *** vic_core_ops_init: vic_dev=85215400, current state check ***
[  112.889034] *** vic_core_ops_init: current_state=2, enable=1 ***
[  112.889039] *** vic_core_ops_init: Calling VIC hardware init for interrupt setup ***
[  112.889045] *** VIC HW INIT: Using PRIMARY VIC space for interrupt configuration ***
[  112.889051] *** VIC HW INIT: Configuring ACTUAL VIC interrupt registers (0x1e0-0x1f4 range) ***
[  112.889057] *** VIC HW INIT: Basic interrupt clearing complete - full interrupt config happens later ***
[  112.889063] *** VIC HW INIT: Interrupt handler registration SKIPPED - main module handles IRQ 38 routing ***
[  112.889069] *** VIC HW INIT VERIFY: 0x00=0x00000000 (should be 0), 0x20=0x00000000 (should be 0) ***
[  112.889075] *** VIC HW INIT: SUCCESS - Basic VIC hardware initialization complete ***
[  112.889081] *** VIC HW INIT: Hardware interrupt configuration complete - ready for main module IRQ routing ***
[  112.889087] *** vic_core_ops_init: VIC hardware init SUCCESS - interrupts should now work ***
[  112.889093] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[  112.889098] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[  112.889105] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[  112.889111] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[  112.889117] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[  112.889122] *** tx_vic_enable_irq: completed successfully ***
[  112.889127] *** tx_isp_video_s_stream: VIC core->init completed, VIC should now be state 3 ***
[  112.889133] *** tx_isp_video_s_stream: Core initialization complete, proceeding with subdev streaming ***
[  112.889139] *** tx_isp_video_s_stream: CRITICAL FIX - Initializing all subdevs before streaming ***
[  112.889147] *** tx_isp_video_s_stream: Initializing CSI subdev ***
[  112.889154] csi_core_ops_init: sd=85402800, csi_dev=85402800, enable=1
[  112.889159] *** tx_isp_video_s_stream: CSI init SUCCESS ***
[  112.889165] *** tx_isp_video_s_stream: Initializing VIC subdev ***
[  112.889171] *** vic_core_ops_init: ENTRY - sd=85215400, enable=1 ***
[  112.889177] *** vic_core_ops_init: vic_dev=85215400, current state check ***
[  112.889184] *** vic_core_ops_init: current_state=3, enable=1 ***
[  112.889189] *** tx_isp_video_s_stream: VIC init SUCCESS ***
[  112.889195] *** tx_isp_video_s_stream: Initializing Sensor subdev ***
[  112.889201] *** SENSOR_INIT: gc2053 enable=1 ***
[  112.889207] *** SENSOR_INIT: gc2053 already initialized, skipping to prevent CSI PHY reconfiguration ***
[  112.889213] *** SENSOR_INIT: This prevents register reset that disables ISP/VIC interrupts ***
[  112.889219] *** tx_isp_video_s_stream: Sensor init SUCCESS ***
[  112.889224] *** tx_isp_video_s_stream: All subdev initialization complete - proceeding with s_stream ***
[  112.889231] *** tx_isp_video_s_stream: Calling subdev[0]->ops->video->s_stream(1) ***
[  112.889237] *** csi_video_s_stream: EXACT Binary Ninja implementation - FIXED for MIPS ***
[  112.889243] csi_video_s_stream: sd=85402800, enable=1
[  112.889249] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[  112.889256] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 80519c00 (name=gc2053) ***
[  112.889262] *** tx_isp_get_sensor: Found real sensor: 80519c00 ***
[  112.889268] csi_video_s_stream: Stream ON - CSI state set to 4
[  112.889273] *** tx_isp_video_s_stream: subdev[0] s_stream SUCCESS ***
[  112.889280] *** tx_isp_video_s_stream: Calling subdev[1]->ops->video->s_stream(1) ***
[  112.889287] *** vic_core_s_stream: BINARY NINJA EXACT - sd=85215400, enable=1 ***
[  112.889293] *** vic_core_s_stream: BINARY NINJA EXACT - current_state=3 ***
[  112.889299] *** vic_core_s_stream: STREAM ON ***
[  112.889304] *** vic_core_s_stream: EXACT Binary Ninja - State != 4, calling VIC start sequence ***
[  112.889310] *** vic_core_s_stream: SKIPPING tx_vic_disable_irq before VIC start to preserve first frame IRQ ***
[  112.889316] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[  112.889323] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 80519c00 (name=gc2053) ***
[  112.889329] *** tx_isp_get_sensor: Found real sensor: 80519c00 ***
[  112.889335] *** tx_isp_vic_start: Using single VIC register base - EXACT Binary Ninja reference ***
[  112.889341] *** STREAMING: Configuring CPM registers for VIC access ***
[  112.917725] STREAMING: CPM clocks configured for VIC access
[  112.917739] *** tx_isp_vic_start: CRITICAL DEBUG - interface_type=1, checking if == 1 ***
[  112.917745] *** tx_isp_vic_start: MIPI interface detected - configuring VIC for MIPI ***
[  112.917753] *** tx_isp_vic_start: vic_dev->width=1920, vic_dev->height=1080 ***
[  112.917759] *** tx_isp_vic_start: sensor_mode != interface_type, writing 0xa000a to 0x1a4 ***
[  112.917765] *** tx_isp_vic_start: Writing VIC configuration registers - EXACT Binary Ninja sequence ***
[  112.917771] *** tx_isp_vic_start: Adding CRITICAL missing VIC configuration registers ***
[  112.917777] *** tx_isp_vic_start: CRITICAL VIC configuration registers written - hardware protection should be prevented ***
[  112.917785] *** tx_isp_vic_start: Frame size 0x07800438 written to register 0x4 ***
[  112.917791] *** tx_isp_vic_start: VIC unlock sequence using SECONDARY VIC space (0x10023000) ***
[  112.917797] *** tx_isp_vic_start: VIC unlock sequence - FIXED register space issue ***
[  112.917802] *** VIC unlock: Commands written, checking VIC status register ***
[  112.917809] *** VIC unlock: Completed with final status=0x0 after 0 iterations ***
[  112.917815] *** tx_isp_vic_start: VIC unlock completed using SECONDARY VIC space ***
[  112.917820] *** tx_isp_vic_start: VIC enabled using SECONDARY VIC space ***
[  112.917826] *** tx_isp_vic_start: CRITICAL FIX - Writing VIC Control register sequence ***
[  112.917831] *** tx_isp_vic_start: VIC processing enabled (0x0=0x1, 0x4=0x1) ***
[  112.917837] *** tx_isp_vic_start: Configuring VIC hardware prerequisites for interrupt registers ***
[  112.917912] read_sensor_dimensions: Successfully read 1920x1080 from /proc/jz/sensor/
[  112.917921] *** VIC DIMENSIONS: Using /proc/jz/sensor/ dimensions 1920x1080 (RELIABLE) ***
[  112.917927] *** VIC REGISTER CONFIG: Writing VIC configuration registers (vic_start_ok=0) ***
[  112.917935] *** VIC REGISTER CONFIG: VIC configuration registers written (0xc=2, 0x10=0x07800438, 0x14=3840) ***
[  112.917942] *** VIC HARDWARE PREREQUISITES: Dimensions 1920x1080, stride 3840, MIPI mode 2 ***
[  112.917948] *** VIC INTERRUPT CONFIG: VIC unlock sequence will be completed first, then interrupt config ***
[  112.917955] *** VIC INTERRUPT STATUS CHECK (BEFORE UNLOCK): STATUS=0x00000000, MASK_STATUS=0x00000000 ***
[  112.917961] *** VIC INTERRUPT CONFIG: Using WORKING BRANCH registers (NOT Binary Ninja) ***
[  112.917967] *** VIC INTERRUPT CONFIG: Configuring interrupt masks (WORKING BRANCH) ***
[  112.917973] *** VIC INTERRUPT CONFIG: Configuring ISP control interrupts (WORKING BRANCH) ***
[  112.917979] *** VIC INTERRUPT CONFIG: Applying VIC interrupt system configuration (WORKING BRANCH) ***
[  112.917985] *** VIC PRIMARY: leaving 0x14=stride as-is (readback=0x00000000) ***
[  112.917991] *** VIC INTERRUPT CONFIG: WORKING BRANCH interrupt configuration complete ***
[  112.917996] *** VIC INTERRUPT CONFIG: Mirroring WORKING BRANCH registers to control bank ***
[  112.918003] *** VIC CONTROL VERIFY: 0x0c(IMCR)=0x00000000 (expect 0xb5742249) ***
[  112.918009] *** VIC INTERRUPT CONFIG: Control bank configuration complete ***
[  112.918015] *** ISP CORE INTERRUPT CONFIG: Enabling ISP core interrupt generation (MISSING FROM CURRENT BRANCH) ***
[  112.918021] *** ISP CORE CONFIG: Writing ISP core interrupt registers at VIC start ***
[  112.918027] *** ISP CORE CONFIG: ISP core interrupt registers written (0x30=0xffffffff, 0x10=0x133) ***
[  112.918033] *** ISP CORE: Hardware interrupt generation ENABLED (0x30=0xffffffff, 0x10=0x133) ***
[  112.918039] *** VIC->ISP: Pipeline should now generate hardware interrupts when VIC completes frames! ***
[  112.918045] *** ISP CORE VERIFY: 0x30=0x00000000, 0x10=0x00000000 ***
[  112.918051] *** VIC INTERRUPT CONFIG: Starting verification of WORKING BRANCH interrupt registers ***
[  112.918060] *** VIC INTERRUPT CONTROL VERIFY (WORKING BRANCH REGS): 0x04=0x00000000, 0x0c=0x00000000, 0x100=0x00000000, 0x14=0x00000000 ***
[  112.918067] *** VIC INTERRUPT: Some WORKING BRANCH interrupt register configuration failed ***
[  112.918073] *** VIC INTERRUPT: Expected: 0x04=0x07800438, 0x0c=0xb5742249, 0x100=0x2d0, 0x14=0x2b ***
[  112.918080] *** VIC INTERRUPT: imr_ok=0, imcr_ok=0, config_ok=0, control_ok=0 ***
[  112.918086] *** tx_isp_vic_start: vic_start_ok set to 1 - EXACT Binary Ninja reference ***
[  112.918092] *** tx_isp_vic_start: VIC Control register sequence complete - streaming should start ***
[  112.918098] *** tx_isp_vic_start: VIC should now generate frame done interrupts! ***
[  112.918103] *** tx_isp_vic_start: VIC interrupt will be enabled by tx_vic_enable_irq callback ***
[  112.918110] *** vic_core_s_stream: Forcing ispvic_frame_channel_qbuf to program buffer addresses before MDMA ***
[  112.918116] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[  112.918124] ispvic_frame_channel_qbuf: arg1=85215400, arg2=  (null)
[  112.918131] *** vic_core_s_stream: ispvic_frame_channel_qbuf SUCCESS ***
[  112.918137] *** vic_core_s_stream: Calling ispvic_frame_channel_s_stream(ENABLE) to start MDMA before enabling IRQ ***
[  112.918143] *** ispvic_frame_channel_s_stream: EXACT Binary Ninja implementation ***
[  112.918149] ispvic_frame_channel_s_stream: arg1=85215400, arg2=1
[  112.918155] ispvic_frame_channel_s_stream: s0 (vic_dev) = 85215400
[  112.918162] ispvic_frame_channel_s_stream[2441]: streamon
[  112.918169] *** ispvic_frame_channel_s_stream: Checking stream state - current=0, requested=1 ***
[  112.918175] *** ispvic_frame_channel_s_stream: Stream state different - proceeding with streaming setup ***
[  112.918181] *** VIC CONTROL (PRIMARY): WROTE 2 to [0x0] before MDMA/config ***
[  112.918186] *** CRITICAL: Calling vic_pipo_mdma_enable - required for VIC interrupts ***
[  112.918192] *** vic_pipo_mdma_enable: EXACT Binary Ninja MCP implementation ***
[  112.918199] vic_pipo_mdma_enable: Using cached sensor dimensions 1920x1080 (ATOMIC CONTEXT SAFE)
[  112.918205] vic_pipo_mdma_enable: reg 0x308 = 1 (MDMA enable)
[  112.918212] vic_pipo_mdma_enable: reg 0x304 = 0x7800438 (dimensions 1920x1080)
[  112.918218] vic_pipo_mdma_enable: reg 0x310 = 3840 (stride)
[  112.918224] vic_pipo_mdma_enable: reg 0x314 = 3840 (stride)
[  112.918229] *** CRITICAL FIX: Writing buffer addresses to VIC hardware registers ***
[  112.918235] *** CRITICAL: No VBM buffer addresses - using fallback addresses from reserved memory ***
[  112.918242] *** vbm_buffer_addresses=  (null), vbm_buffer_count=0 ***
[  112.918249] *** VIC FALLBACK BUFFER 0: Wrote reserved memory address 0x6300000 to reg 0x318 ***
[  112.918257] *** VIC FALLBACK BUFFER 1: Wrote reserved memory address 0x66f4800 to reg 0x31c ***
[  112.918265] *** VIC FALLBACK BUFFER 2: Wrote reserved memory address 0x6ae9000 to reg 0x320 ***
[  112.918272] *** VIC FALLBACK BUFFER 3: Wrote reserved memory address 0x6edd800 to reg 0x324 ***
[  112.918280] *** VIC FALLBACK BUFFER 4: Wrote reserved memory address 0x72d2000 to reg 0x328 ***
[  112.918286] *** CRITICAL: VIC fallback buffer addresses configured - hardware can now generate interrupts! ***
[  112.918291] *** VIC PIPO MDMA ENABLE COMPLETE - VIC should now generate interrupts! ***
[  112.918297] *** vic_pipo_mdma_enable completed - VIC MDMA should now generate interrupts! ***
[  112.918304] *** Binary Ninja EXACT: Wrote 0x80040020 to reg 0x300 (4 buffers) ***
[  112.918311] *** vic_core_s_stream: CORE W1C [9a70/9a7c] then GATE REASSERT [9ac0/9ac8] ***
[  112.918316] *** vic_core_s_stream: Re-writing buffer addresses AFTER MDMA start ***
[  112.918321] *** ispvic_frame_channel_qbuf: EXACT Binary Ninja MCP implementation ***
[  112.918328] ispvic_frame_channel_qbuf: arg1=85215400, arg2=  (null)
[  112.918333] *** vic_core_s_stream: Post-MDMA QBUF SUCCESS ***
[  112.918345] *** VIC VERIFY (PRIMARY): [0x0]=0x00000000 [0x4]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 (UNMASK-ALL)***
[  112.918353] *** VIC VERIFY (PRIMARY EXTRA): [0x100]=0x00000000 [0x14]=0x00000000 (PRIMARY 0x14=stride) ***
[  112.918417] *** VIC VERIFY (CONTROL): [0x0]=0x00000000 [0x4]=0x00000000 [0x100]=0x00000000 [0x14]=0x00000000 [0x300]=0x00000000 [0x30c]=0x00000000 [0x1e0]=0x00000000 [0x1e4]=0x00000000 [0x1e8]=0x00000000 [0x1ec]=0x00000000 ***
[  112.918427] *** VIC BUFS (PRIMARY): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[  112.918433] *** VIC CTRL (PRIMARY): [0x300]=0x00000000 ***
[  112.918443] *** VIC BUFS (CONTROL): [0x318]=0x00000000 [0x31c]=0x00000000 [0x320]=0x00000000 [0x324]=0x00000000 [0x328]=0x00000000 ***
[  112.918449] *** VIC CTRL (CONTROL): [0x300]=0x00000000 ***
[  112.918454] *** VIC CONTROL BANK: Re-applying enable sequence on CONTROL bank ***
[  112.918461] *** VIC CONTROL BANK: Post-enable [0x0]=0x00000000 ***
[  112.918467] *** VIC UNMASK-ALL TEST: [0x1e8]=0x00000000 [0x1ec]=0x00000000 (expect 0) ***
[  112.919474] *** VIC UNMASK-ALL TEST: No status bits asserted during pre-IRQ sample ***
[  112.919479] *** VIC MASK: Keeping UNMASK-ALL (0x1e8=0) during debug ***
[  112.919485] *** VIC CONTROL (PRIMARY): WROTE 1 to [0x0] before enabling IRQ ***
[  112.919592] *** VIC PRIMARY ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[  112.919700] *** VIC CONTROL ENABLES (POST-RUN COMMIT): [0x1e0]=0x00000000 [0x1e4]=0x00000000 ***
[  112.919707] *** CORE VIC GATE REASSERT: [0x9ac0]=0x00000000 [0x9ac8]=0x00000000 ***
[  112.919713] *** vic_core_s_stream: Enabling VIC IRQ AFTER final re-assert/verify ***
[  112.919718] *** tx_vic_enable_irq: EXACT Binary Ninja implementation from working reference ***
[  112.919724] tx_vic_enable_irq: VIC interrupts enabled (irq_enabled = 1)
[  112.919730] *** tx_vic_enable_irq: CRITICAL FIX - Enabling VIC interrupt (IRQ 38) at kernel level ***
[  112.919737] *** tx_vic_enable_irq: VIC interrupt (IRQ 38) ENABLED at kernel level ***
[  112.919743] tx_vic_enable_irq: VIC interrupt flag set and kernel interrupt enabled
[  112.919749] *** tx_vic_enable_irq: completed successfully ***
[  113.328383] *** VIC POST-IRQ SAMPLE: No status bits asserted in 200ms window ***
[  113.328396] *** vic_core_s_stream: VIC state transition 3 → 4 (STREAMING) ***
[  113.328402] *** VIC STATE 4: Initializing clocks for streaming ***
[  113.328410] *** Initializing CSI clocks (2 clocks) ***
[  113.328417] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[  113.328424] isp_subdev_init_clks: Using platform data clock arrays: c06b6e28
[  113.328432] isp_subdev_init_clks: Using platform data clock configs
[  113.328440] Platform data clock[0]: name=cgu_isp, rate=100000000
[  113.328452] Clock cgu_isp: set rate 100000000 Hz, result=0
[  113.328460] Clock cgu_isp enabled successfully
[  113.328466] Platform data clock[1]: name=isp, rate=65535
[  113.328474] Clock isp enabled successfully
[  113.357714] CPM clock gates configured
[  113.357729] isp_subdev_init_clks: Successfully initialized 2 clocks
[  113.357736] *** Initializing VIC clocks (2 clocks) ***
[  113.357742] isp_subdev_init_clks: EXACT Binary Ninja MCP - Initializing 2 clocks
[  113.357750] isp_subdev_init_clks: Using platform data clock arrays: c06b6f40
[  113.357758] isp_subdev_init_clks: Using platform data clock configs
[  113.357766] Platform data clock[0]: name=cgu_isp, rate=100000000
[  113.357776] Clock cgu_isp: set rate 100000000 Hz, result=0
[  113.357782] Clock cgu_isp enabled successfully
[  113.357789] Platform data clock[1]: name=isp, rate=65535
[  113.357796] Clock isp enabled successfully
[  113.387712] CPM clock gates configured
[  113.387728] isp_subdev_init_clks: Successfully initialized 2 clocks
[  113.387734] *** VIC STATE 4: Calling ispcore_slake_module to initialize ISP core ***
[  113.387741] *** ispcore_slake_module: EXACT Binary Ninja MCP implementation ***
[  113.387748] ispcore_slake_module: VIC device=85215400, state=4ispcore_slake_module: ISP state >= 3, calling ispcore_core_ops_init
[  113.387757] *** tx_isp_get_sensor: Searching subdev array for sensors ***
[  113.387767] *** tx_isp_get_sensor: Found real sensor subdev at index 4: 80519c00 (name=gc2053) ***
[  113.387774] *** tx_isp_get_sensor: Found real sensor: 80519c00 ***
[  113.387780] ispcore_slake_module: Using sensor attributes from connected sensor
[  113.387786] *** ispcore_core_ops_init_with_sensor: GOOD-THINGS approach - isp=80514000, sensor_attr=c06e20cc ****** ispcore_core_ops_init_with_sensor: Calling tisp_init with sensor attributes ***
[  113.387794] *** This will configure MIPI CSI lanes and enable proper interrupt flow ***<6>[  113.387801] *** tisp_init: IMPLEMENTING MISSING HARDWARE REGISTER INITIALIZATION ***
[  113.387806] *** THIS FUNCTION CONTAINS ALL THE system_reg_write CALLS FROM REFERENCE ***
[  113.387814] *** tisp_init: FIXED - Extracted dimensions from sensor_attr: 2200x1418 ***
[  113.387820] tisp_init: Initializing ISP hardware for sensor (2200x1418)
[  113.387826] *** tisp_init: Event system ready for on-demand processing (Binary Ninja reference) ***
[  113.387832] *** tisp_init: INITIALIZING ISP EVENT SYSTEM ***
[  113.387837] tisp_event_init: Initializing ISP event system
[  113.387845] tisp_event_init: SAFE event system initialized with 20 nodes
[  113.387851] tisp_event_set_cb: Setting callback for event 4
[  113.387858] tisp_event_set_cb: Event 4 callback set to c0685594
[  113.387864] tisp_event_set_cb: Setting callback for event 5
[  113.387870] tisp_event_set_cb: Event 5 callback set to c0685a5c
[  113.387876] tisp_event_set_cb: Setting callback for event 7
[  113.387882] tisp_event_set_cb: Event 7 callback set to c0685628
[  113.387888] tisp_event_set_cb: Setting callback for event 9
[  113.387894] tisp_event_set_cb: Event 9 callback set to c06856b0
[  113.387900] tisp_event_set_cb: Setting callback for event 8
[  113.387906] tisp_event_set_cb: Event 8 callback set to c0685774
[  113.387914] *** system_irq_func_set: Registered handler c067e520 at index 13 ***
[  113.395542] *** WRITING ISP CORE CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[  113.395550] *** SYSTEM_REG_WRITE: reg[0xb004] = 0xf001f001 (Binary Ninja EXACT) ***
[  113.395557] *** SYSTEM_REG_WRITE: reg[0xb008] = 0x40404040 (Binary Ninja EXACT) ***
[  113.395564] *** SYSTEM_REG_WRITE: reg[0xb00c] = 0x40404040 (Binary Ninja EXACT) ***
[  113.395571] *** SYSTEM_REG_WRITE: reg[0xb010] = 0x40404040 (Binary Ninja EXACT) ***
[  113.395578] *** SYSTEM_REG_WRITE: reg[0xb014] = 0x404040 (Binary Ninja EXACT) ***
[  113.395585] system_reg_write: BLOCKED core-control reg[0xb018]=0x40404040 during streaming (preserve interrupts)
[  113.395592] system_reg_write: BLOCKED core-control reg[0xb01c]=0x40404040 during streaming (preserve interrupts)
[  113.395600] system_reg_write: BLOCKED core-control reg[0xb020]=0x40404040 during streaming (preserve interrupts)
[  113.395608] system_reg_write: BLOCKED core-control reg[0xb024]=0x404040 during streaming (preserve interrupts)
[  113.395614] *** SYSTEM_REG_WRITE: reg[0xb028] = 0x1000080 (Binary Ninja EXACT) ***
[  113.395622] *** SYSTEM_REG_WRITE: reg[0xb02c] = 0x1000080 (Binary Ninja EXACT) ***
[  113.395628] *** SYSTEM_REG_WRITE: reg[0xb030] = 0x100 (Binary Ninja EXACT) ***
[  113.395636] *** SYSTEM_REG_WRITE: reg[0xb034] = 0xffff0100 (Binary Ninja EXACT) ***
[  113.395642] *** SYSTEM_REG_WRITE: reg[0xb038] = 0x1ff00 (Binary Ninja EXACT) ***
[  113.395649] *** SYSTEM_REG_WRITE: reg[0xb04c] = 0x103 (Binary Ninja EXACT) ***
[  113.395656] *** SYSTEM_REG_WRITE: reg[0xb050] = 0x3 (Binary Ninja EXACT) ***
[  113.395662] *** WRITING CRITICAL VARYING REGISTERS - USING EXACT REFERENCE VALUES ***
[  113.395668] *** SYSTEM_REG_WRITE: reg[0xb07c] = 0x341b (Binary Ninja EXACT) ***
[  113.395675] *** SYSTEM_REG_WRITE: reg[0xb080] = 0x46b0 (Binary Ninja EXACT) ***
[  113.395682] *** SYSTEM_REG_WRITE: reg[0xb084] = 0x1813 (Binary Ninja EXACT) ***
[  113.395688] *** SYSTEM_REG_WRITE: reg[0xb08c] = 0x10a (Binary Ninja EXACT) ***
[  113.395694] *** ISP CORE CONTROL REGISTERS WRITTEN - NOW MATCHES REFERENCE DRIVER ***
[  113.395700] *** WRITING ISP CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[  113.395707] system_reg_write: BLOCKED reg[0x9804]=0x3f00 during streaming to protect interrupts
[  113.395714] *** SYSTEM_REG_WRITE: reg[0x9864] = 0x7800438 (Binary Ninja EXACT) ***
[  113.395721] *** SYSTEM_REG_WRITE: reg[0x987c] = 0xc0000000 (Binary Ninja EXACT) ***
[  113.395728] *** SYSTEM_REG_WRITE: reg[0x9880] = 0x1 (Binary Ninja EXACT) ***
[  113.395734] *** SYSTEM_REG_WRITE: reg[0x9884] = 0x1 (Binary Ninja EXACT) ***
[  113.395741] *** SYSTEM_REG_WRITE: reg[0x9890] = 0x1010001 (Binary Ninja EXACT) ***
[  113.395748] *** SYSTEM_REG_WRITE: reg[0x989c] = 0x1010001 (Binary Ninja EXACT) ***
[  113.395755] *** SYSTEM_REG_WRITE: reg[0x98a8] = 0x1010001 (Binary Ninja EXACT) ***
[  113.395761] *** WRITING VIC CONTROL REGISTERS - FROM BINARY NINJA tisp_init ***
[  113.395768] *** SYSTEM_REG_WRITE: reg[0x9a00] = 0x50002d0 (Binary Ninja EXACT) ***
[  113.395775] *** SYSTEM_REG_WRITE: reg[0x9a04] = 0x3000300 (Binary Ninja EXACT) ***
[  113.395782] *** SYSTEM_REG_WRITE: reg[0x9a2c] = 0x50002d0 (Binary Ninja EXACT) ***
[  113.395788] *** SYSTEM_REG_WRITE: reg[0x9a34] = 0x1 (Binary Ninja EXACT) ***
[  113.395796] *** SYSTEM_REG_WRITE: reg[0x9a70] = 0x1 (Binary Ninja EXACT) ***
[  113.395802] *** SYSTEM_REG_WRITE: reg[0x9a7c] = 0x1 (Binary Ninja EXACT) ***
[  113.395809] *** SYSTEM_REG_WRITE: reg[0x9a80] = 0x500 (Binary Ninja EXACT) ***
[  113.395816] *** SYSTEM_REG_WRITE: reg[0x9a88] = 0x1 (Binary Ninja EXACT) ***
[  113.395822] *** SYSTEM_REG_WRITE: reg[0x9a94] = 0x1 (Binary Ninja EXACT) ***
[  113.395829] *** SYSTEM_REG_WRITE: reg[0x9a98] = 0x500 (Binary Ninja EXACT) ***
[  113.395835] *** TUNING SYSTEM: VIC control registers 0x9ac0/0x9ac8 REMOVED - not in Binary Ninja reference ***
[  113.395843] tisp_init: CRITICAL FIX - Using ACTUAL sensor image dimensions 1920x1080 (not frame size 2200x1418)
[  113.395850] *** SYSTEM_REG_WRITE: reg[0x4] = 0x898058a (Binary Ninja EXACT) ***
[  113.395856] *** SYSTEM_REG_WRITE: reg[0x8] = 0x0 (Binary Ninja EXACT) ***
[  113.395863] *** SYSTEM_REG_WRITE: reg[0x1c] = 0x3f08 (Binary Ninja EXACT) ***
[  113.395869] *** tisp_init: ISP control register set to enable processing pipeline ***
[  113.395876] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[  113.395882] *** tisp_init: REFERENCE DRIVER format register 0x10 = 0x133 ***
[  113.395888] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[  113.395894] *** tisp_init: REFERENCE DRIVER register 0x30 = 0xffffffff ***
[  113.395900] *** SYSTEM_REG_WRITE: reg[0x24] = 0x1 (Binary Ninja EXACT) ***
[  113.395907] *** SYSTEM_REG_WRITE: reg[0x28] = 0x1 (Binary Ninja EXACT) ***
[  113.395912] *** tisp_init: ISP data flow configured (input->processing->output) ***
[  113.395919] *** SYSTEM_REG_WRITE: reg[0x804] = 0x1c (Binary Ninja EXACT) ***
[  113.395925] *** tisp_init: STREAMING ACTIVE - Skipping ISP control register write to prevent shutdown ***
[  113.395931] *** tisp_init: VIC streaming detected - keeping ISP controls enabled ***
[  113.395938] *** SYSTEM_REG_WRITE: reg[0x800] = 0x1 (Binary Ninja EXACT) ***
[  113.395944] *** tisp_init: REFERENCE DRIVER final configuration - 0x804=0x1c, 0x1c=SKIPPED, 0x800=1 ***
[  113.395952] *** SYSTEM_REG_WRITE: reg[0x4] = 0x7800438 (Binary Ninja EXACT) ***
[  113.395958] *** tisp_init: ISP frame size configured - 1920x1080 (ACTUAL sensor image) ***
[  113.395965] *** SYSTEM_REG_WRITE: reg[0x8] = 0x1 (Binary Ninja EXACT) ***
[  113.395972] *** tisp_init: CRITICAL FIX - Bayer pattern configured: mbus=0x3001 -> pattern=1 (register 8) ***
[  113.395978] *** tisp_init: CONFIGURING RAW10 BAYER PROCESSING PIPELINE ***
[  113.395984] *** SYSTEM_REG_WRITE: reg[0x14] = 0x2b (Binary Ninja EXACT) ***
[  113.395991] *** SYSTEM_REG_WRITE: reg[0x18] = 0xa0a (Binary Ninja EXACT) ***
[  113.395998] *** SYSTEM_REG_WRITE: reg[0x40] = 0x1 (Binary Ninja EXACT) ***
[  113.396004] *** SYSTEM_REG_WRITE: reg[0x44] = 0x1 (Binary Ninja EXACT) ***
[  113.396010] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[  113.396018] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x1000000 (Binary Ninja EXACT) ***
[  113.396024] *** SYSTEM_REG_WRITE: reg[0x5006] = 0x100 (Binary Ninja EXACT) ***
[  113.396034] *** SYSTEM_REG_WRITE: reg[0x5008] = 0x0 (Binary Ninja EXACT) ***
[  113.396040] *** SYSTEM_REG_WRITE: reg[0x500a] = 0x1000000 (Binary Ninja EXACT) ***
[  113.396048] *** SYSTEM_REG_WRITE: reg[0x500c] = 0x100 (Binary Ninja EXACT) ***
[  113.396054] *** SYSTEM_REG_WRITE: reg[0x5018] = 0x0 (Binary Ninja EXACT) ***
[  113.396061] *** SYSTEM_REG_WRITE: reg[0x501c] = 0x1 (Binary Ninja EXACT) ***
[  113.396068] *** SYSTEM_REG_WRITE: reg[0x5020] = 0x0 (Binary Ninja EXACT) ***
[  113.396074] *** CRITICAL FIX: CCM configured using EXACT Binary Ninja register addresses ***
[  113.396079] *** CCM registers 0x5004-0x5014 programmed with identity matrix ***
[  113.396085] *** This should eliminate green frames by enabling proper color processing ***
[  113.396092] *** SYSTEM_REG_WRITE: reg[0x200] = 0x4d (Binary Ninja EXACT) ***
[  113.396098] *** SYSTEM_REG_WRITE: reg[0x204] = 0x96 (Binary Ninja EXACT) ***
[  113.396105] *** SYSTEM_REG_WRITE: reg[0x208] = 0x1d (Binary Ninja EXACT) ***
[  113.396112] *** SYSTEM_REG_WRITE: reg[0x20c] = 0x70 (Binary Ninja EXACT) ***
[  113.396118] *** SYSTEM_REG_WRITE: reg[0x210] = 0x5a (Binary Ninja EXACT) ***
[  113.396125] *** SYSTEM_REG_WRITE: reg[0x214] = 0x80 (Binary Ninja EXACT) ***
[  113.396132] *** SYSTEM_REG_WRITE: reg[0x218] = 0x80 (Binary Ninja EXACT) ***
[  113.396138] *** SYSTEM_REG_WRITE: reg[0x21c] = 0x6a (Binary Ninja EXACT) ***
[  113.396145] *** SYSTEM_REG_WRITE: reg[0x220] = 0x16 (Binary Ninja EXACT) ***
[  113.396151] *** CRITICAL FIX: RGB to YUV conversion matrix configured properly ***
[  113.396156] *** tisp_init: RAW10 BAYER PROCESSING PIPELINE CONFIGURED ***
[  113.396162] *** tisp_init: Loading ISP tuning parameters from /etc/sensor/ ***
[  113.396168] *** tisp_init: Standard tuning parameters loaded successfully ***
[  113.396173] *** tisp_init: Custom tuning parameters loaded successfully ***
[  113.396179] tisp_set_csc_version: Setting CSC version 0
[  113.396186] *** SYSTEM_REG_WRITE: reg[0xc] = 0x80700008 (Binary Ninja EXACT) ***
[  113.396192] *** CRITICAL FIX: ISP bypass register set to EXACT reference value 0x80700008 - prevents hardware reset ***
[  113.396198] *** tisp_init: CONFIGURING ISP FOR NV12 OUTPUT FORMAT ***
[  113.396205] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[  113.396212] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[  113.396217] *** tisp_init: ISP configured for NV12 4:2:0 output format ***
[  113.396223] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[  113.396229] *** SYSTEM_REG_WRITE: reg[0x5000] = 0x1 (Binary Ninja EXACT) ***
[  113.396236] *** SYSTEM_REG_WRITE: reg[0x5004] = 0x0 (Binary Ninja EXACT) ***
[  113.396242] *** tisp_init: ISP-VIC frame synchronization enabled ***
[  113.396248] *** SYSTEM_REG_WRITE: reg[0x6000] = 0x1 (Binary Ninja EXACT) ***
[  113.396254] *** SYSTEM_REG_WRITE: reg[0x6004] = 0x1 (Binary Ninja EXACT) ***
[  113.396260] *** tisp_init: ISP processing pipeline fully enabled ***
[  113.396266] *** SYSTEM_REG_WRITE: reg[0x7000] = 0x1 (Binary Ninja EXACT) ***
[  113.396273] *** SYSTEM_REG_WRITE: reg[0x7004] = 0x1 (Binary Ninja EXACT) ***
[  113.396279] *** tisp_init: ISP master processing enabled - pipeline should now work ***
[  113.396286] *** SYSTEM_REG_WRITE: reg[0x30] = 0xffffffff (Binary Ninja EXACT) ***
[  113.396292] *** SYSTEM_REG_WRITE: reg[0x10] = 0x133 (Binary Ninja EXACT) ***
[  113.396298] tisp_init: ISP memory buffers configured
[  113.396303] *** tisp_init: INITIALIZING ALL ISP PIPELINE COMPONENTS ***
[  113.396310] tiziano_ae_init: Initializing Auto Exposure (1920x1080@25) - Binary Ninja EXACT
[  113.396320] tiziano_ae_params_refresh: Refreshing AE parameters
[  113.396332] tiziano_ae_params_refresh: AE parameters refreshed
[  113.396338] tiziano_ae_init_exp_th: Initializing AE exposure thresholds
[  113.396344] tiziano_ae_init_exp_th: AE exposure thresholds initialized
[  113.396349] tiziano_ae_para_addr: Setting up AE parameter addresses
[  113.396354] tiziano_ae_para_addr: AE parameter addresses configured
[  113.396361] tiziano_ae_set_hardware_param: ae_id=0, update_only=0
[  113.396368] *** SYSTEM_REG_WRITE: reg[0xa004] = 0xff0ff (Binary Ninja EXACT) ***
[  113.396375] *** SYSTEM_REG_WRITE: reg[0xa008] = 0x40d0b00 (Binary Ninja EXACT) ***
[  113.396382] *** SYSTEM_REG_WRITE: reg[0xa00c] = 0x80d0b00 (Binary Ninja EXACT) ***
[  113.396389] *** SYSTEM_REG_WRITE: reg[0xa010] = 0xc0d0b00 (Binary Ninja EXACT) ***
[  113.396396] *** SYSTEM_REG_WRITE: reg[0xa014] = 0xd0b00 (Binary Ninja EXACT) ***
[  113.396402] *** SYSTEM_REG_WRITE: reg[0xa018] = 0xd0b0010 (Binary Ninja EXACT) ***
[  113.396410] *** SYSTEM_REG_WRITE: reg[0xa01c] = 0x6b812814 (Binary Ninja EXACT) ***
[  113.396416] *** SYSTEM_REG_WRITE: reg[0xa020] = 0x1000c0 (Binary Ninja EXACT) ***
[  113.396424] *** SYSTEM_REG_WRITE: reg[0xa024] = 0x43800 (Binary Ninja EXACT) ***
[  113.396430] *** SYSTEM_REG_WRITE: reg[0xa000] = 0x1 (Binary Ninja EXACT) ***
[  113.396437] *** SYSTEM_REG_WRITE: reg[0xa028] = 0x100000 (Binary Ninja EXACT) ***
[  113.396443] tiziano_ae_set_hardware_param: Parameters written to AE0
[  113.396450] tiziano_ae_set_hardware_param: ae_id=1, update_only=0
[  113.396456] *** SYSTEM_REG_WRITE: reg[0xa804] = 0x0 (Binary Ninja EXACT) ***
[  113.396462] *** SYSTEM_REG_WRITE: reg[0xa808] = 0x0 (Binary Ninja EXACT) ***
[  113.396469] *** SYSTEM_REG_WRITE: reg[0xa80c] = 0x0 (Binary Ninja EXACT) ***
[  113.396476] *** SYSTEM_REG_WRITE: reg[0xa810] = 0x0 (Binary Ninja EXACT) ***
[  113.396482] *** SYSTEM_REG_WRITE: reg[0xa814] = 0x0 (Binary Ninja EXACT) ***
[  113.396489] *** SYSTEM_REG_WRITE: reg[0xa818] = 0x0 (Binary Ninja EXACT) ***
[  113.396496] *** SYSTEM_REG_WRITE: reg[0xa81c] = 0x0 (Binary Ninja EXACT) ***
[  113.396502] *** SYSTEM_REG_WRITE: reg[0xa820] = 0x0 (Binary Ninja EXACT) ***
[  113.396509] *** SYSTEM_REG_WRITE: reg[0xa824] = 0x0 (Binary Ninja EXACT) ***
[  113.396516] *** SYSTEM_REG_WRITE: reg[0xa800] = 0x1 (Binary Ninja EXACT) ***
[  113.396522] *** SYSTEM_REG_WRITE: reg[0xa828] = 0x0 (Binary Ninja EXACT) ***
[  113.396528] tiziano_ae_set_hardware_param: Parameters written to AE1
[  113.396534] *** DEBUGGING: Registering ONLY callback for bit 10 (status 0x400) ***
[  113.396541] *** system_irq_func_set: Registered handler c068676c at index 10 ***
[  113.404830] *** system_irq_func_set: Registered handler c0686860 at index 27 ***
[  113.413059] *** system_irq_func_set: Registered handler c068676c at index 26 ***
[  113.421319] *** system_irq_func_set: Registered handler c0686948 at index 29 ***
[  113.430520] *** system_irq_func_set: Registered handler c06868d4 at index 28 ***
(reverse-i-search)'': ---- FPGA board is ready ----
  Board UID : 30AB6E51
  Board HW ID : 72000460
  Board rev.  : 5DE5A975
  Board date  : 20190326
-----------------------------
(reverse-i-search)'ca': [INFO:WS.cpp]: Server started on port 8089
set jpeg streamMngCtx suceess
root@ing-wyze-cam3-a000 ~# cat /opt/trace.txt 
ISP Register Monitor v1.3 initializing
ISP Monitor: initialized region isp-w01 at phys 0x0x10023000 size 0x1000
ISP Monitor: initialized region isp-m0 at phys 0x0x13300000 size 0x100000
ISP Monitor: initialized region isp-w02 at phys 0x0x133e0000 size 0x10000
ISP Monitor: initialized region isp-csi at phys 0x0x10022000 size 0x1000
ISP isp-w02: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x54560031 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x8: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x80700008 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x28: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xf00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x60: 0x0 -> 0x800800 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x64: 0x0 -> 0x9d09d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x70: 0x0 -> 0x6002 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x74: 0x0 -> 0x7003 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x2c: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x90: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x98: 0x0 -> 0x30000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xa8: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xac: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x40000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xc (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xdc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xec: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0xff808000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x80007000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x114: 0x0 -> 0x777111 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x0 -> 0x3f00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xfc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x100: 0x0 -> 0x2d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x0 -> 0x2c000 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9864: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x987c: 0x0 -> 0xc0000000 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9880: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9884: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9890: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x7800000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a4: 0x0 -> 0x100010 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a8: 0x0 -> 0x4440 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1b0: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x989c: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x98a8: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a00: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a04: 0x0 -> 0x3000300 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a2c: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a34: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a70: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a7c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a80: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a88: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a98: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0x0 -> 0xf001f001 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb00c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb010: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb014: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb018: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb01c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb020: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb024: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb028: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb02c: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb030: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb034: 0x0 -> 0xffff0100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb038: 0x0 -> 0x1ff00 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb04c: 0x0 -> 0x103 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb050: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb078: 0x0 -> 0x10000000 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb07c: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb080: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb084: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb088: 0x0 -> 0x1fdeff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb08c: 0x0 -> 0x1fff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x10: 0x0 -> 0x133 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2b (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xa (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x1c: 0x0 -> 0x8 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x30: 0x0 -> 0x8fffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x80007000 -> 0x80007001 (delta: 280.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x3f00 -> 0x0 (delta: 280.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0xf001f001 -> 0x7 (delta: 280.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x40404040 -> 0x0 (delta: 280.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x2 -> 0x1 (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x2 -> 0x1 (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x8c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x2c000 -> 0x1f40000 (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x7800000 -> 0x780002b (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a0: 0x0 -> 0x1 (delta: 0.000 ms)
root@ing-wyze-cam3-a000 ~# [INFO:RTSP.cpp]: stream 0 available at: rtsp://192.168.50.211/ch0
[INFO:RTSP.cpp]: stream 1 available at: rtsp://192.168.50.211/ch1
root@ing-wyze-cam3-a000 ~# cat /opt/trace.txt 
ISP Register Monitor v1.3 initializing
ISP Monitor: initialized region isp-w01 at phys 0x0x10023000 size 0x1000
ISP Monitor: initialized region isp-m0 at phys 0x0x13300000 size 0x100000
ISP Monitor: initialized region isp-w02 at phys 0x0x133e0000 size 0x10000
ISP Monitor: initialized region isp-csi at phys 0x0x10022000 size 0x1000
ISP isp-w02: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x54560031 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x4: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x8: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc: 0x0 -> 0x80700008 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x28: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xf00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x60: 0x0 -> 0x800800 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x64: 0x0 -> 0x9d09d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x70: 0x0 -> 0x6002 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x74: 0x0 -> 0x7003 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x2c: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x90: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x98: 0x0 -> 0x30000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xa8: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xac: 0x0 -> 0x58050000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc4: 0x0 -> 0x40000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xc8: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xcc: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd4: 0x0 -> 0xc (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xd8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xdc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe0: 0x0 -> 0xeb8080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x108080 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xe8: 0x0 -> 0x29f06e (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xec: 0x0 -> 0x913622 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xe4: 0x0 -> 0x400040 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0xff808000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x80007000 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x114: 0x0 -> 0x777111 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x0 -> 0x3f00 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf0: 0x0 -> 0x515af0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf4: 0x0 -> 0xaaa610 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xf8: 0x0 -> 0xd21092 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xfc: 0x0 -> 0x6acade (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x100: 0x0 -> 0x2d0 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x0 -> 0x2c000 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9864: 0x0 -> 0x7800438 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x987c: 0x0 -> 0xc0000000 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9880: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9884: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9890: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x0 -> 0x7800000 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a4: 0x0 -> 0x100010 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a8: 0x0 -> 0x4440 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1b0: 0x0 -> 0x10 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x989c: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x98a8: 0x0 -> 0x1010001 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a00: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a04: 0x0 -> 0x3000300 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a2c: 0x0 -> 0x50002d0 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a34: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a70: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a7c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a80: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a88: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a94: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-m0: [VIC Control] write at offset 0x9a98: 0x0 -> 0x500 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0x0 -> 0xf001f001 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb00c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb010: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb014: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb018: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb01c: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb020: 0x0 -> 0x40404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb024: 0x0 -> 0x404040 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb028: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb02c: 0x0 -> 0x1000080 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb030: 0x0 -> 0x100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb034: 0x0 -> 0xffff0100 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb038: 0x0 -> 0x1ff00 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb04c: 0x0 -> 0x103 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb050: 0x0 -> 0x3 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb078: 0x0 -> 0x10000000 (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb07c: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb080: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb084: 0x0 -> 0x1fffff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb088: 0x0 -> 0x1fdeff (delta: 0.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb08c: 0x0 -> 0x1fff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x10: 0x0 -> 0x133 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x14: 0x0 -> 0x2b (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x18: 0x0 -> 0xa (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x1c: 0x0 -> 0x8 (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Control] write at offset 0x30: 0x0 -> 0x8fffffff (delta: 0.000 ms)
ISP isp-m0: [CSI PHY Config] write at offset 0x110: 0x80007000 -> 0x80007001 (delta: 280.000 ms)
ISP isp-m0: [ISP Control] write at offset 0x9804: 0x3f00 -> 0x0 (delta: 280.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb004: 0xf001f001 -> 0x7 (delta: 280.000 ms)
ISP isp-m0: [Core Control] write at offset 0xb008: 0x40404040 -> 0x0 (delta: 280.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x0: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0xc: 0x2 -> 0x1 (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x14: 0x2 -> 0x1 (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Control] write at offset 0x8c: 0x0 -> 0x1 (delta: 0.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x10c: 0x2c000 -> 0x1f40000 (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x110: 0x7800000 -> 0x780002b (delta: 450.000 ms)
ISP isp-w02: [CSI PHY Config] write at offset 0x1a0: 0x0 -> 0x1 (delta: 0.000 ms)
root@ing-wyze-cam3-a000 ~# cat /proc/interrupts 
           CPU0       
  9:          0   jz-intc  i2s_irq
 11:      35151   jz-intc  jz-timerost
 14:        512   jz-intc  ipu
 15:      76349   jz-intc  jz-sfc
 18:          0   jz-intc  pdma
 23:          0   jz-intc  GPIO C
 24:          1   jz-intc  GPIO B
 25:          0   jz-intc  GPIO A
 29:          1   jz-intc  dwc2
 37:          0   jz-intc  isp-m0
 38:          0   jz-intc  isp-w02
 44:      12084   jz-intc  jzmmc_v1.2.1
 45:          0   jz-intc  jzmmc_v1.2.0
 58:        384   jz-intc  uart1
 68:        160   jz-intc  jz-i2c.0
 70:         83   jz-intc  avpu.0
126:          0    GPIO B  GPIO Button
134:          1    GPIO B  mmc-insert-detect
ERR:          0
root@ing-wyze-cam3-a000 ~# 
