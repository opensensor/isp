/* Function Forward Declarations for tx-isp-t31.ko */

#ifndef FUNCTIONS_H
#define FUNCTIONS_H

/* Forward Declarations - Prevent undeclared function errors */
/* This header contains forward declarations for all functions */

/* External Functions (dynamically analyzed signatures) */
extern void isp_ch1_frame_dequeue_delay(void);
extern void isp_core_cmd_set(int arg1, int arg2, int arg3);
extern void isp_core_debug_show(int arg1);
extern void isp_core_tuning_deinit(int arg1);
extern void isp_core_tuning_event(int arg1, int arg2);
extern int isp_core_tuning_init(int arg1);
extern void isp_core_tunning_open(int arg1, int arg2);
extern void isp_core_tunning_release(int arg1, int arg2);
extern void isp_core_tunning_unlocked_ioctl(int arg1, int arg2, int arg3);
extern void isp_csi_show(int arg1);
extern void* isp_frame_done_wait(int arg1, int arg2);
extern void isp_frame_done_wakeup(void);
extern void isp_framesource_show(int arg1);
extern void isp_free_buffer(int arg1);
extern void isp_fw_process(void);
extern void* isp_i2c_new_subdev_board(int arg1, int arg2, int arg3);
extern void isp_irq_handle(int arg1, int arg2);
extern void isp_irq_thread_handle(int arg1, int arg2);
extern int isp_malloc_buffer(int arg1);
extern void isp_mem_init(void);
extern void isp_pre_frame_dequeue(void);
extern void isp_printf(void); // Macro - arguments removed for compilation
extern void* isp_subdev_init_clks(int arg1, int arg2);
extern void isp_subdev_release_clks(int arg1);
extern void isp_tunning_poll(int arg1, int arg2);
extern void isp_tunning_read(int arg1, int arg2, int arg3);
extern void isp_vic_cmd_set(int arg1, int arg2, int arg3);
extern void isp_vic_frd_show(int arg1);
extern void isp_vic_interrupt_service_routine(int arg1);
extern void private_capable(void);
extern void private_clk_disable(void);
extern void private_clk_disable_unprepare(void);
extern void private_clk_enable(void);
extern void* private_clk_get(void);
extern void private_clk_get_rate(void);
extern void private_clk_is_enabled(void);
extern void private_clk_prepare_enable(void);
extern void private_clk_put(void);
extern void* private_clk_set_rate(void);
extern void private_complete(void);
extern int private_copy_from_user(void);
extern void* private_copy_to_user(void);
extern void private_dev_get_drvdata(void);
extern void private_dev_set_drvdata(void);
extern void private_devm_clk_get(void);
extern void private_devm_clk_put(void);
extern void private_disable_irq(void);
extern void private_dma_cache_sync(void);
extern void private_dma_sync_single_for_device(int arg1, void* arg2, void* arg3, void* arg4);
extern void private_do_gettimeofday(void);
extern int private_driver_get_interface(void);
extern void private_enable_irq(void);
extern void private_filp_close(void);
extern int private_filp_open(void* arg1, int arg2, int arg3);
extern void private_free_irq(void);
extern void private_get_driver_interface(void* arg1);
extern void private_get_fs(void* arg1);
extern void private_get_init_net(void);
extern void private_get_isp_priv_mem(void);
extern void private_getrawmonotonic(void);
extern void private_gpio_direction_input(void);
extern void* private_gpio_direction_output(void);
extern void private_gpio_free(void);
extern void private_gpio_request(void);
extern void private_gpio_set_debounce(void);
extern void private_i2c_add_driver(void);
extern void private_i2c_del_driver(void);
extern int private_i2c_get_adapter(void);
extern int private_i2c_get_clientdata(void);
extern int private_i2c_new_device(void);
extern void private_i2c_put_adapter(void);
extern void private_i2c_register_driver(void);
extern void private_i2c_set_clientdata(void);
extern void private_i2c_transfer(void);
extern void private_i2c_unregister_device(void);
extern void private_init_completion(void);
extern void private_init_waitqueue_head(void);
extern int private_ioremap(void);
extern void private_iounmap(void);
extern int private_jz_proc_mkdir(void);
extern void private_jzgpio_ctrl_pull(void);
extern void private_jzgpio_set_func(void);
extern void* private_kfree(void);
extern void* private_kmalloc(void);
extern void private_kthread_run(void);
extern void private_kthread_should_stop(void);
extern void private_kthread_stop(void);
extern void private_ktime_set(void* arg1, int arg2, int arg3);
extern int private_leading_one_position(int arg1);
extern int private_leading_one_position_64(int arg1, int arg2);
extern void private_log2_fixed_to_fixed(int arg1);
extern void private_log2_fixed_to_fixed_64(int arg1, int arg2, int arg3, int arg4);
extern int private_log2_int_to_fixed(int arg1);
extern void private_log2_int_to_fixed_64(int arg1, int arg2, int arg3, int arg4);
extern void* private_math_exp2(void* arg1, void* arg2, void* arg3);
extern void private_misc_deregister(void);
extern int private_misc_register(void);
extern void private_module_put(void);
extern void private_msleep(void);
extern void private_mutex_lock(void);
extern void private_mutex_unlock(void);
extern int private_netlink_kernel_create(void);
extern void private_netlink_unicast(void);
extern int private_nlmsg_new(void);
extern int private_nlmsg_put(void);
extern int private_platform_device_register(void);
extern int private_platform_device_unregister(void);
extern int private_platform_driver_register(void);
extern void private_platform_driver_unregister(void);
extern void* private_platform_get_drvdata(void);
extern int private_platform_get_irq(void);
extern int private_platform_get_resource(void);
extern void private_platform_set_drvdata(void);
extern void private_proc_create_data(void* arg1, void* arg2);
extern void private_proc_remove(void);
extern void private_raw_mutex_init(void);
extern void private_release_mem_region(void);
extern int private_request_mem_region(void);
extern void private_request_module(int arg1, int arg2, int arg3);
extern void private_request_threaded_irq(void);
extern int private_reset_tx_isp_module(int arg1);
extern void private_sched_clock(void);
extern void private_schedule_hrtimeout(void);
extern void private_schedule_work(void);
extern void private_seq_lseek(void);
extern void* private_seq_printf(int arg1, int arg2, int arg3, void* arg4, void* arg5, void* arg6, void* arg7, void* arg8, void* arg9, void* arg10, void* arg11, void* arg12, void* arg13, void* arg14, void* arg15);
extern void private_seq_read(void);
extern void private_set_current_state(int arg1);
extern int private_set_fs(void);
extern int private_simple_strtoull(void);
extern void private_single_open_size(void);
extern void private_single_release(void);
extern void private_sock_release(void);
extern void private_spin_lock_init(void);
extern int private_spin_unlock_irqrestore(void);
extern void private_try_module_get(void);
extern void private_vfree(void);
extern void private_vfs_llseek(void);
extern void private_vfs_read(void);
extern void private_vfs_write(void);
extern int private_vmalloc(void);
extern int private_wait_event_interruptible(void);
extern int private_wait_for_completion_interruptible(void);
extern int private_wait_for_completion_timeout(void);
extern void private_wake_up(void);
extern void private_wake_up_all(void);
extern void tisp_adr_ev_update(int arg1, int arg2);
extern void* tisp_adr_get_par_cfg(void* arg1, int arg2);
extern void tisp_adr_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_adr_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_adr_process(void);
extern void tisp_adr_set_par_cfg(int arg1);
extern void tisp_adr_set_params(void);
extern void tisp_adr_wdr_en(int arg1);
extern void tisp_ae0_ctrls_update(void);
extern void tisp_ae0_get_hist(int arg1, int arg2, int arg3);
extern void tisp_ae0_get_statistics(int arg1, int arg2);
extern void tisp_ae0_process(void);
extern void tisp_ae0_process_impl(void);
extern void tisp_ae1_ctrls_update(void);
extern void tisp_ae1_expt(int arg1, int arg2, int arg3, int arg4, void* arg5, void* arg6, void* arg7, void* arg8, void* arg9, void* arg10, void* arg11);
extern void tisp_ae1_get_hist(int arg1);
extern void tisp_ae1_get_statistics(int arg1, int arg2);
extern void tisp_ae1_process(void);
extern int tisp_ae1_process_impl(void);
extern void tisp_ae_algo_deinit(void);
extern void tisp_ae_algo_handle(void* arg1);
extern void tisp_ae_algo_init(int arg1, int arg2);
extern void tisp_ae_deinit(void);
extern void tisp_ae_g_at_list(int arg1);
extern void tisp_ae_g_comp(int arg1);
extern void* tisp_ae_g_luma(void* arg1);
extern void tisp_ae_g_min(void* arg1);
extern void tisp_ae_g_scene_luma(int arg1);
extern void tisp_ae_get_antiflicker_step(int arg1, int arg2);
extern void tisp_ae_get_hist_custome(int arg1);
extern void* tisp_ae_get_par_cfg(void* arg1, int arg2);
extern void tisp_ae_get_y_zone(int arg1);
extern void tisp_ae_ir_update(int arg1);
extern void tisp_ae_manual_get(void* arg1);
extern void tisp_ae_manual_set(int arg1, int arg2, int arg3, int arg4, void* arg5, void* arg6, void* arg7, void* arg8, void* arg9, void* arg10, void* arg11, void* arg12, void* arg13, void* arg14, void* arg15, void* arg16, void* arg17, void* arg18);
extern void tisp_ae_mean_update(void* arg1, int arg2);
extern void tisp_ae_min_max_set(int arg1, int arg2, int arg3, int arg4, void* arg5, void* arg6, void* arg7, void* arg8, void* arg9, void* arg10, void* arg11, void* arg12, void* arg13, void* arg14, void* arg15, void* arg16);
extern void tisp_ae_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_ae_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_ae_s_at_list(int arg1);
extern void tisp_ae_s_comp(void* arg1);
extern void tisp_ae_s_min(int arg1, int arg2, int arg3, int arg4);
extern void tisp_ae_set_hist_custome(void);
extern void tisp_ae_set_par_cfg(int arg1);
extern void tisp_ae_state_get(int arg1);
extern void* tisp_ae_target(int arg1, int arg2, int arg3, int arg4);
extern void tisp_ae_trig(void);
extern void tisp_ae_tune(int arg1, int arg2, int arg3, int arg4, int arg5, int arg6);
extern void tisp_ae_wdr_en(int arg1);
extern void tisp_af_get_attr(int arg1);
extern void tisp_af_get_metric(int arg1);
extern void* tisp_af_get_par_cfg(void* arg1, int arg2);
extern void tisp_af_get_statistics(int arg1, int arg2, int arg3);
extern void tisp_af_get_zone(void);
extern void tisp_af_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_af_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_af_process_impl(void);
extern void tisp_af_set_attr(int arg1);
extern void tisp_af_set_attr_refresh(void);
extern void tisp_af_set_par_cfg(int arg1);
extern void tisp_again_update(void);
extern void tisp_awb_algo_deinit(void);
extern void tisp_awb_algo_handle(void* arg1);
extern void tisp_awb_algo_init(int arg1);
extern void tisp_awb_deinit(void);
extern void tisp_awb_ev_update(int arg1);
extern void tisp_awb_get_cluster_awb_params(int arg1);
extern void tisp_awb_get_ct(int arg1);
extern void tisp_awb_get_ct_trend(int arg1);
extern void tisp_awb_get_frz(int arg1);
extern void* tisp_awb_get_par_cfg(void* arg1, int arg2);
extern void tisp_awb_get_zone(int arg1);
extern void tisp_awb_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_awb_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_awb_set_cluster_awb_params(int arg1, int arg2, int arg3);
extern void tisp_awb_set_ct(int arg1);
extern void tisp_awb_set_ct_trend(int arg1);
extern void tisp_awb_set_frz(int arg1);
extern void tisp_awb_set_par_cfg(int arg1);
extern void tisp_bcsh_brightness(int arg1);
extern void tisp_bcsh_contrast(int arg1);
extern void tisp_bcsh_ct_update(int arg1);
extern void tisp_bcsh_ev_update(int arg1);
extern void tisp_bcsh_g_brightness(void);
extern void tisp_bcsh_g_contrast(void);
extern void tisp_bcsh_g_hue(int arg1);
extern void tisp_bcsh_g_rgb_coefft(int arg1);
extern void tisp_bcsh_g_saturation(void);
extern void tisp_bcsh_get_attr(void);
extern void* tisp_bcsh_get_par_cfg(void* arg1, int arg2);
extern void tisp_bcsh_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_bcsh_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_bcsh_s_hue(int arg1);
extern void tisp_bcsh_s_rgb_coefft(int arg1);
extern void tisp_bcsh_saturation(int arg1);
extern void tisp_bcsh_set_attr(int arg1);
extern void tisp_bcsh_set_mjpeg_contrast(void* arg1, int arg2, int arg3);
extern void tisp_bcsh_set_par_cfg(int arg1);
extern void tisp_bcsh_wdr_en(int arg1);
extern void* tisp_blc_get_par_cfg(void* arg1, int arg2);
extern void tisp_blc_set_par_cfg(int arg1);
extern void tisp_ccm_ct_update(int arg1);
extern void tisp_ccm_ev_update(int arg1);
extern void tisp_ccm_get_attr(void);
extern void* tisp_ccm_get_par_cfg(void* arg1, int arg2);
extern void tisp_ccm_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_ccm_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_ccm_set_attr(int arg1);
extern void tisp_ccm_set_par_cfg(int arg1);
extern void tisp_ccm_wdr_en(int arg1);
extern void tisp_channel_attr_set(int arg1, int arg2);
extern void tisp_channel_fifo_clear(int arg1);
extern void tisp_channel_start(int arg1, void* arg2);
extern void tisp_channel_stop(int arg1);
extern void* tisp_clm_get_par_cfg(void* arg1, int arg2);
extern void tisp_clm_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_clm_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_clm_set_par_cfg(int arg1);
extern void tisp_code_create_tuning_node(void);
extern void tisp_code_destroy_tuning_node(void);
extern void tisp_code_tuning_ioctl(int arg1, int arg2, int arg3);
extern void tisp_code_tuning_open(void);
extern void tisp_code_tuning_release(void);
extern void tisp_ct_update(int arg1);
extern void tisp_ctr_md_np_cfg(void);
extern void tisp_ctr_par_cfg(void);
extern void tisp_ctr_std_np_cfg(void);
extern int tisp_cust_mode_g_ctrl(void);
extern void tisp_cust_mode_s_ctrl(int arg1);
extern int tisp_day_or_night_g_ctrl(void);
extern void tisp_day_or_night_s_ctrl(int arg1);
extern void tisp_defog_ev_update(int arg1, int arg2);
extern void* tisp_defog_get_par_cfg(void* arg1, int arg2);
extern void tisp_defog_img_filter5(int arg1, int arg2, int arg3);
extern void tisp_defog_max_filter3(int arg1, int arg2);
extern void tisp_defog_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_defog_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_defog_process(void);
extern void tisp_defog_set_par_cfg(int arg1);
extern void tisp_defog_soft_process(int arg1, int arg2, int arg3, int arg4, void* arg5, void* arg6, void* arg7, void* arg8, void* arg9, void* arg10, void* arg11, void* arg12, void* arg13, void* arg14, void* arg15, void* arg16, void* arg17, void* arg18, void* arg19, void* arg20, void* arg21, void* arg22, void* arg23, void* arg24);
extern void tisp_defog_wdr_en(int arg1);
extern void tisp_deinit(void);
extern void tisp_deinit_free(void);
extern void tisp_dmsc_alias_par_cfg(void);
extern void tisp_dmsc_all_reg_refresh(int arg1);
extern void tisp_dmsc_awb_gain_par_cfg(void);
extern void tisp_dmsc_d_ud_ns_par_cfg(void);
extern void tisp_dmsc_deir_par_cfg(void);
extern void tisp_dmsc_deir_rgb_par_cfg(void);
extern void tisp_dmsc_dir_par_cfg(void);
extern void tisp_dmsc_fc_par_cfg(void);
extern void tisp_dmsc_get_par_cfg(int arg1, int arg2);
extern void tisp_dmsc_intp(int arg1);
extern void tisp_dmsc_intp_reg_refresh(int arg1);
extern void tisp_dmsc_nor_par_cfg(void);
extern void tisp_dmsc_out_opt_cfg(void);
extern void tisp_dmsc_par_refresh(int arg1, int arg2, int arg3);
extern void tisp_dmsc_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_dmsc_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_dmsc_refresh(int arg1);
extern void tisp_dmsc_rgb_alias_par_cfg(void);
extern void tisp_dmsc_set_par_cfg(int arg1);
extern void tisp_dmsc_sharpness_get(void);
extern void tisp_dmsc_sharpness_set(int arg1);
extern void tisp_dmsc_sp_alias_par_cfg(void);
extern void tisp_dmsc_sp_d_b_wei_np_cfg(void);
extern void tisp_dmsc_sp_d_par_cfg(void);
extern void tisp_dmsc_sp_d_sigma_3_np_cfg(void);
extern void tisp_dmsc_sp_d_w_wei_np_cfg(void);
extern void tisp_dmsc_sp_ud_b_wei_np_cfg(void);
extern void tisp_dmsc_sp_ud_par_cfg(void);
extern void tisp_dmsc_sp_ud_w_wei_np_cfg(void);
extern void tisp_dmsc_uu_np_cfg(void);
extern void tisp_dmsc_uu_par_cfg(void);
extern void tisp_dmsc_wdr_en(int arg1);
extern void* tisp_dn_mode_get(int arg1, int arg2);
extern void tisp_dn_mode_set(int arg1);
extern void tisp_dpc_all_reg_refresh(int arg1);
extern void tisp_dpc_cor_par_cfg(void);
extern void tisp_dpc_d_m1_par_cfg(void);
extern void tisp_dpc_d_m2_par_cfg(void);
extern void tisp_dpc_d_m3_par_cfg(void);
extern void* tisp_dpc_get_par_cfg(void* arg1, int arg2);
extern void tisp_dpc_intp(int arg1);
extern void tisp_dpc_intp_reg_refresh(int arg1);
extern void tisp_dpc_par_refresh(int arg1, int arg2, int arg3);
extern void tisp_dpc_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_dpc_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_dpc_refresh(int arg1);
extern void tisp_dpc_s_par_cfg(void);
extern void tisp_dpc_set_par_cfg(int arg1);
extern void tisp_dpc_wdr_en(int arg1);
extern void tisp_ev_update(int arg1, int arg2);
extern void tisp_event_exit(void);
extern void tisp_event_init(void);
extern void tisp_event_process(void);
extern void* tisp_event_push(void* arg1);
extern void tisp_event_set_cb(int arg1, int arg2);
extern void tisp_flip_enable(int arg1);
extern void tisp_fw_process(void);
extern void* tisp_g_BacklightComp(void* arg1);
extern int tisp_g_Gamma(void* arg1);
extern void* tisp_g_Hilightdepress(void* arg1);
extern void tisp_g_adr_str_internal(int arg1);
extern void tisp_g_ae_at_list(void* arg1);
extern void tisp_g_ae_attr(int arg1);
extern void tisp_g_ae_hist(int arg1);
extern void tisp_g_ae_it_max(void* arg1);
extern void tisp_g_ae_min(void* arg1);
extern void tisp_g_ae_zone(void* arg1);
extern int tisp_g_aeroi_weight(int arg1);
extern int tisp_g_aezone_weight(int arg1);
extern void tisp_g_af_attr(void* arg1);
extern void tisp_g_af_metric(void* arg1);
extern int tisp_g_af_weight(int arg1);
extern void tisp_g_af_zone(void);
extern void tisp_g_autozoom_control(void);
extern void tisp_g_awb_cluster(void* arg1);
extern void tisp_g_awb_ct_trend(void* arg1);
extern void tisp_g_awb_start(void* arg1);
extern void tisp_g_ccm_attr(void* arg1);
extern void tisp_g_defog_str_internal(int arg1);
extern void tisp_g_dpc_str_internal(int arg1);
extern void tisp_g_dpc_strength(void* arg1);
extern void tisp_g_drc_strength(void* arg1);
extern void tisp_g_ev_attr(void* arg1);
extern void tisp_g_fcrop_control(void* arg1);
extern void tisp_g_module_control(void* arg1);
extern void tisp_g_mscaler_mask_attr(void);
extern void tisp_g_ncuinfo(int arg1);
extern void tisp_g_rgb_coefft(void* arg1);
extern void tisp_g_wb_attr(void* arg1);
extern void tisp_g_wb_ct(void* arg1);
extern void tisp_g_wb_frz(void);
extern void tisp_g_wb_mode(int arg1);
extern void tisp_g_wb_zone(void);
extern void tisp_g_wdr_en(void* arg1);
extern void* tisp_gamma_get_par_cfg(void* arg1, int arg2);
extern void* tisp_gamma_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_gamma_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_gamma_set_par_cfg(int arg1);
extern void tisp_gamma_wdr_en(int arg1);
extern void tisp_gb_blc_again_interp(void* arg1, int arg2);
extern void tisp_gb_dn_params_refresh(void);
extern void tisp_gb_init(void);
extern void tisp_gb_init_reg(void);
extern void tisp_gb_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_gb_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_gb_params_refresh(void);
extern void tisp_get_ae_attr(void* arg1);
extern void tisp_get_ae_comp(int arg1);
extern void tisp_get_ae_info(int arg1);
extern void tisp_get_ae_luma(int arg1);
extern void tisp_get_ae_state(void* arg1);
extern void* tisp_get_antiflicker_step(int arg1, int arg2);
extern void tisp_get_awb_info(int arg1);
extern void tisp_get_bcsh_hue(int arg1);
extern void tisp_get_blc_attr(int arg1);
extern void tisp_get_brightness(void);
extern void tisp_get_contrast(void);
extern void tisp_get_csc_attr(void* arg1);
extern void tisp_get_current_csc(int arg1, void* arg2);
extern void tisp_get_defog_strength(void* arg1);
extern void tisp_get_frame_drop(int arg1, int arg2);
extern void tisp_get_saturation(void);
extern void tisp_get_sharpness(void);
extern void tisp_get_wdr_output_mode(void* arg1);
extern void tisp_gib_deir_ir_update(int arg1);
extern void tisp_gib_gain_interpolation(int arg1);
extern void tisp_gib_get_par_cfg(int arg1, int arg2);
extern void tisp_gib_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_gib_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_gib_set_par_cfg(int arg1);
extern void tisp_hldc_con_par_cfg(void);
extern void* tisp_hldc_get_par_cfg(void* arg1, int arg2);
extern void tisp_hldc_par_refresh(int arg1);
extern void tisp_hldc_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_hldc_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_hldc_set_par_cfg(int arg1);
extern void tisp_hv_flip_enable(int arg1);
extern void tisp_hv_flip_get(int arg1);
extern void tisp_init(void* arg1, int arg2);
extern int tisp_log2_fixed_to_fixed(void);
extern void tisp_log2_fixed_to_fixed_64(int arg1, int arg2, int arg3, int arg4);
extern void tisp_log2_int_to_fixed(int arg1, int arg2, int arg3);
extern void tisp_log2_int_to_fixed_64(int arg1, int arg2, int arg3, int arg4);
extern void tisp_lsc_ct_update(int arg1);
extern void tisp_lsc_gain_update(int arg1);
extern void* tisp_lsc_get_par_cfg(void* arg1, int arg2);
extern void tisp_lsc_hvflip(void* arg1, void* arg2, void* arg3, void* arg4);
extern int tisp_lsc_judge_ct_update_flag(void);
extern int tisp_lsc_judge_gain_update_flag(void);
extern void* tisp_lsc_lut_mirror_exchange(void* arg1, int arg2, int arg3, int arg4, void* arg5);
extern void tisp_lsc_mirror_flip(int arg1, int arg2, int arg3, int arg4);
extern void tisp_lsc_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_lsc_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_lsc_set_par_cfg(int arg1, int arg2);
extern void tisp_lsc_upside_down_lut(void* arg1, int arg2, int arg3);
extern void tisp_lsc_wdr_en(int arg1);
extern void tisp_lsc_write_lut_datas(void);
extern int tisp_math_exp2(int arg1, int arg2, int arg3);
extern void tisp_mdns_all_reg_refresh(int arg1);
extern void tisp_mdns_bypass(int arg1);
extern void tisp_mdns_c_2d_param_cfg(void);
extern void tisp_mdns_c_3d_param_cfg(void);
extern void* tisp_mdns_get_par_cfg(void* arg1, int arg2);
extern void tisp_mdns_intp(int arg1);
extern void tisp_mdns_intp_reg_refresh(int arg1);
extern void tisp_mdns_par_refresh(int arg1, int arg2);
extern void tisp_mdns_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_mdns_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_mdns_refresh(int arg1);
extern void tisp_mdns_reg_trigger(void);
extern void tisp_mdns_set_par_cfg(int arg1);
extern void tisp_mdns_top_func_cfg(int arg1);
extern void tisp_mdns_top_func_refresh(void);
extern void tisp_mdns_wdr_en(int arg1);
extern void tisp_mdns_y_2d_param_cfg(void);
extern void tisp_mdns_y_3d_param_cfg(void);
extern void tisp_mirror_enable(int arg1);
extern void tisp_mscaler_mask_change(int arg1);
extern void* tisp_mscaler_mask_setreg(void* arg1, int arg2, int arg3, int arg4, void* arg5, void* arg6, void* arg7, void* arg8, void* arg9, void* arg10, void* arg11, void* arg12, void* arg13, void* arg14, void* arg15, void* arg16, void* arg17, void* arg18, void* arg19, void* arg20, void* arg21, void* arg22, void* arg23, void* arg24, void* arg25, void* arg26, void* arg27, void* arg28, void* arg29, void* arg30, void* arg31, void* arg32, void* arg33, void* arg34, void* arg35, void* arg36, void* arg37, void* arg38, void* arg39, void* arg40, void* arg41, void* arg42, void* arg43, void* arg44, void* arg45, void* arg46, void* arg47, void* arg48, void* arg49, void* arg50, void* arg51, void* arg52, void* arg53, void* arg54, void* arg55, void* arg56, void* arg57, void* arg58, void* arg59, void* arg60, void* arg61, void* arg62, void* arg63);
extern void tisp_netlink_event_set_cb(int arg1);
extern void tisp_netlink_exit(void);
extern void tisp_netlink_init(void);
extern void tisp_param_operate_deinit(void);
extern int tisp_param_operate_init(void);
extern void tisp_param_operate_process(int arg1);
extern void tisp_rdns_all_reg_refresh(int arg1);
extern void tisp_rdns_awb_gain_par_cfg(void);
extern void tisp_rdns_awb_gain_updata(void* arg1, int arg2);
extern void tisp_rdns_gain_update(int arg1);
extern void* tisp_rdns_get_par_cfg(void* arg1, int arg2);
extern void tisp_rdns_gray_np_par_cfg(void);
extern void tisp_rdns_intp(int arg1);
extern void tisp_rdns_intp_reg_refresh(int arg1);
extern void tisp_rdns_lum_np_par_cfg(void);
extern void tisp_rdns_opt_cfg(void);
extern void tisp_rdns_par_refresh(int arg1, int arg2, int arg3);
extern void tisp_rdns_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_rdns_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_rdns_refresh(int arg1);
extern void tisp_rdns_set_par_cfg(int arg1);
extern void tisp_rdns_sl_par_cfg(void);
extern void tisp_rdns_slope_cfg(void);
extern void tisp_rdns_std_np_par_cfg(void);
extern void tisp_rdns_text_np_par_cfg(void);
extern void tisp_rdns_thres_par_cfg(void);
extern void tisp_rdns_wdr_en(int arg1);
extern void* tisp_reg_map_get(int arg1, int arg2, int arg3);
extern void tisp_reg_map_set(int arg1, void* arg2, void* arg3);
extern void tisp_s_2dns_ratio(int arg1);
extern void tisp_s_3dns_ratio(int arg1);
extern void tisp_s_BacklightComp(int arg1);
extern void tisp_s_Gamma(int arg1);
extern void tisp_s_Hilightdepress(int arg1);
extern void tisp_s_adr_enable(int arg1);
extern void tisp_s_adr_str_internal(int arg1);
extern void tisp_s_ae_at_list(int arg1);
extern void tisp_s_ae_attr(int arg1, int arg2);
extern void tisp_s_ae_hist(void);
extern void tisp_s_ae_it_max(void);
extern void tisp_s_ae_min(int arg1, int arg2, int arg3, int arg4);
extern void tisp_s_aeroi_weight(int arg1);
extern void tisp_s_aezone_weight(int arg1);
extern void tisp_s_af_attr(int arg1);
extern void tisp_s_af_weight(int arg1);
extern int tisp_s_antiflick(int arg1);
extern void tisp_s_autozoom_control(int arg1, int arg2, int arg3, int arg4, void* arg5, void* arg6, void* arg7, void* arg8, void* arg9);
extern void tisp_s_awb_algo(int arg1);
extern void tisp_s_awb_cluster(int arg1, int arg2, int arg3);
extern void tisp_s_awb_ct_trend(int arg1, int arg2, int arg3);
extern void tisp_s_awb_start(int arg1, int arg2);
extern void tisp_s_ccm_attr(void* arg1);
extern void tisp_s_defog_enable(int arg1);
extern void tisp_s_defog_str_internal(int arg1);
extern void tisp_s_dpc_str_internal(int arg1);
extern void tisp_s_dpc_strength(int arg1);
extern void tisp_s_drc_strength(int arg1);
extern void tisp_s_ev_start(int arg1);
extern void tisp_s_fcrop_control(int arg1, int arg2, int arg3, int arg4, int arg5);
extern void tisp_s_max_again(int arg1);
extern void tisp_s_max_isp_dgain(int arg1);
extern void tisp_s_mdns_ratio(int arg1);
extern void tisp_s_module_control(int arg1);
extern void tisp_s_mscaler_hvflip_mask(int arg1);
extern void tisp_s_mscaler_mask_attr(int arg1);
extern void tisp_s_rgb_coefft(int arg1);
extern void tisp_s_scaler_level_control(int arg1, int arg2, int arg3);
extern void tisp_s_sdns_ratio(int arg1);
extern void tisp_s_wb_attr(int arg1, int arg2, int arg3, int arg4, int arg5, int arg6);
extern void tisp_s_wb_ct(void* arg1);
extern void tisp_s_wb_frz(int arg1);
extern void tisp_s_wb_mode(int arg1, int arg2, int arg3);
extern void tisp_s_wdr_en(int arg1);
extern void tisp_s_wdr_init_en(int arg1);
extern void tisp_sdns_all_reg_refresh(int arg1);
extern void tisp_sdns_d_s1_thres_cfg(void);
extern void tisp_sdns_dark_light_tt_opt_cfg(void);
extern void tisp_sdns_g_det_val_div_cfg(void);
extern void tisp_sdns_gaussian_k_cfg(void);
extern void tisp_sdns_gaussian_x_cfg(void);
extern void tisp_sdns_gaussian_y_cfg(void);
extern void* tisp_sdns_get_par_cfg(void* arg1, int arg2);
extern void tisp_sdns_grad_thres_opt_cfg(void);
extern void tisp_sdns_h_line_cfg(void);
extern void tisp_sdns_h_mv_cfg(void);
extern void tisp_sdns_h_mv_wei_opt_cfg(void);
extern void tisp_sdns_h_s_cfg(void);
extern void tisp_sdns_hls_en_ave_filter_cfg(void);
extern void tisp_sdns_intp(int arg1);
extern void tisp_sdns_intp_reg_refresh(int arg1);
extern void tisp_sdns_mv_seg_number_num_thres_cfg(void);
extern void tisp_sdns_par_refresh(int arg1, int arg2, int arg3);
extern void tisp_sdns_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_sdns_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_sdns_r_s_mv_cfg(void);
extern void tisp_sdns_refresh(int arg1);
extern void tisp_sdns_set_par_cfg(int arg1);
extern void tisp_sdns_sp_d_b_wei_np_array_cfg(void);
extern void tisp_sdns_sp_d_w_wei_np_array_cfg(void);
extern void tisp_sdns_sp_std_en_seg_opt_cfg(void);
extern void tisp_sdns_sp_ud_b_limit_srd_ll_hl_flat_cfg(void);
extern void tisp_sdns_sp_ud_b_stren_cfg(void);
extern void tisp_sdns_sp_ud_b_wei_np_array_cfg(void);
extern void tisp_sdns_sp_ud_stren_shift_opt_cfg(void);
extern void tisp_sdns_sp_ud_v2_v1_coef_w_wei_opt_cfg(void);
extern void tisp_sdns_sp_ud_w_limit_b_wei_opt_cfg(void);
extern void tisp_sdns_sp_ud_w_stren_cfg(void);
extern void tisp_sdns_sp_ud_w_wei_np_array_cfg(void);
extern void tisp_sdns_sp_uu_cfg(void);
extern void tisp_sdns_sp_uu_np_array_cfg(void);
extern void tisp_sdns_sp_v2_d_w_b_ll_hl_flat_cfg(void);
extern void tisp_sdns_w_thres_cfg(void);
extern void tisp_sdns_wdr_en(int arg1);
extern void tisp_set_ae0_ag(int arg1, int arg2, int arg3, int arg4);
extern void tisp_set_ae1_ag(int arg1, int arg2, int arg3, int arg4);
extern void tisp_set_ae_attr(void* arg1);
extern void tisp_set_ae_comp(int arg1);
extern void tisp_set_ae_freeze(int arg1);
extern void tisp_set_ae_info(int arg1);
extern void tisp_set_awb_info(int arg1);
extern void tisp_set_bcsh_fixed_contrast(int arg1);
extern void tisp_set_bcsh_hue(int arg1);
extern void tisp_set_brightness(void);
extern void tisp_set_contrast(void);
extern void tisp_set_csc_attr(int arg1);
extern void tisp_set_csc_version(int arg1);
extern void tisp_set_defog_strength(int arg1);
extern void tisp_set_fps(int arg1);
extern void* tisp_set_frame_drop(int arg1, int arg2, void* arg3);
extern void tisp_set_saturation(void);
extern int tisp_set_sensor_analog_gain(void);
extern int tisp_set_sensor_analog_gain_short(void);
extern void tisp_set_sensor_digital_gain(void);
extern int tisp_set_sensor_digital_gain_short(void);
extern void tisp_set_sensor_integration_time(int arg1);
extern void tisp_set_sensor_integration_time_short(int arg1);
extern void tisp_set_sharpness(void);
extern void tisp_set_user_csc(void* arg1);
extern void tisp_set_wdr_output_mode(int arg1);
extern void tisp_sharpen_all_reg_refresh(void);
extern void tisp_sharpen_intp(int arg1);
extern void tisp_sharpen_intp_reg_refresh(void);
extern void tisp_sharpen_par_refresh(int arg1, int arg2, int arg3);
extern void tisp_sharpen_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_sharpen_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_sharpen_refresh(int arg1);
extern void tisp_sharpen_wdr_en(int arg1);
extern void* tisp_simple_intp(int arg1, int arg2, int arg3);
extern void tisp_tgain_update(int arg1);
extern void* tisp_top_param_array_get(void* arg1, int arg2);
extern void tisp_top_read(void);
extern void tisp_top_sel(void);
extern void tisp_wdr_ev_calculate(void);
extern void tisp_wdr_ev_update(int arg1, int arg2);
extern void tisp_wdr_expTime_updata(void);
extern void* tisp_wdr_get_par_cfg(void* arg1, int arg2);
extern void* tisp_wdr_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_wdr_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_wdr_process(void);
extern void tisp_wdr_rx_ae0_dms(int arg1, int arg2, int arg3, int arg4);
extern void tisp_wdr_rx_ae0_infm(int arg1, int arg2);
extern void tisp_wdr_rx_ae1_dms(void);
extern void tisp_wdr_rx_ae1_infm(int arg1, int arg2);
extern void tisp_wdr_set_par_cfg(int arg1);
extern void tisp_y_sp_fl_thres_cfg(void);
extern void tisp_y_sp_sl_exp_cfg(void);
extern void tisp_y_sp_std_scope_cfg(void);
extern void tisp_y_sp_uu_cfg(void);
extern void tisp_y_sp_uu_fl_sl_cfg(void);
extern void tisp_y_sp_uu_w_b_wei_cfg(void);
extern void tisp_y_sp_v1_v2_coef_cfg(void);
extern void tisp_y_sp_w_b_ll_cfg(void);
extern void tisp_y_sp_w_b_sl_cfg(void);
extern void tisp_ydns_all_reg_refresh(int arg1);
extern void tisp_ydns_gain_update(int arg1);
extern void* tisp_ydns_get_par_cfg(void* arg1, int arg2);
extern void tisp_ydns_intp(int arg1);
extern void tisp_ydns_intp_reg_refresh(int arg1);
extern void tisp_ydns_par_refresh(int arg1);
extern void tisp_ydns_param_array_get(int arg1, int arg2, int arg3);
extern void tisp_ydns_param_array_set(int arg1, int arg2, int arg3);
extern void tisp_ydns_param_cfg(void);
extern void tisp_ydns_refresh(int arg1);
extern void tisp_ydns_set_par_cfg(int arg1);
extern void* tisp_ysp_get_par_cfg(void* arg1, int arg2);
extern void tisp_ysp_set_par_cfg(int arg1);
extern void tx_isp_core_probe(int arg1);
extern void tx_isp_core_remove(void);
extern void* tx_isp_create_graph_and_nodes(int arg1);
extern void tx_isp_csi_activate_subdev(int arg1);
extern void tx_isp_csi_probe(int arg1);
extern void tx_isp_csi_remove(int arg1);
extern void tx_isp_csi_slake_subdev(int arg1);
extern void tx_isp_disable_irq(int arg1);
extern void tx_isp_enable_irq(int arg1);
extern void tx_isp_exit(void);
extern void tx_isp_frame_chan_deinit(void* arg1);
extern void tx_isp_free_irq(int arg1);
extern void tx_isp_fs_probe(int arg1);
extern void tx_isp_fs_remove(void);
extern void tx_isp_init(void);
extern int tx_isp_module_deinit(void* arg1, void* arg2, void* arg3, void* arg4);
extern void tx_isp_module_init(int arg1, int arg2);
extern void tx_isp_notify(int arg1, int arg2);
extern void tx_isp_open(int arg1, int arg2);
extern void tx_isp_probe(int arg1);
extern void tx_isp_reg_set(int arg1, int arg2, int arg3, int arg4, void* arg5);
extern void tx_isp_release(int arg1, int arg2);
extern void tx_isp_release_device(void);
extern void tx_isp_remove(int arg1);
extern void* tx_isp_request_irq(int arg1, int arg2);
extern void* tx_isp_send_event_to_remote(void* arg1, void* arg2, void* arg3);
extern void tx_isp_subdev_deinit(int arg1);
extern void tx_isp_subdev_init(int arg1, int arg2, int arg3);
extern void* tx_isp_subdev_pipo(void* arg1, int arg2);
extern void tx_isp_unlocked_ioctl(int arg1, int arg2, int arg3);
extern void tx_isp_unregister_platforms(int arg1);
extern void tx_isp_vic_activate_subdev(int arg1);
extern void tx_isp_vic_probe(int arg1);
extern void tx_isp_vic_remove(int arg1);
extern void tx_isp_vic_slake_subdev(int arg1);
extern void* tx_isp_vic_start(int arg1);
extern void tx_isp_video_link_stream(int arg1, int arg2);
extern void tx_isp_video_s_stream(int arg1, int arg2);
extern void* tx_isp_vin_activate_subdev(void* arg1, void* arg2);
extern void* tx_isp_vin_init(int arg1, int arg2);
extern void tx_isp_vin_probe(int arg1);
extern void tx_isp_vin_remove(int arg1);
extern void tx_isp_vin_reset(int arg1);
extern void tx_isp_vin_slake_subdev(int arg1);
extern void tx_vic_disable_irq(void);
extern void tx_vic_enable_irq(void);
/* Analyzed 700 external function signatures */

/* Generic forward declarations for common kernel types */
struct clk;
struct device;
struct platform_device;
struct i2c_driver;
struct i2c_client;
struct i2c_adapter;
struct i2c_msg;
struct spi_driver;
struct spi_device;
struct v4l2_subdev;
struct tx_isp_subdev;
struct file;
struct inode;
struct dentry;
struct mutex;
struct spinlock;
struct work_struct;

/* Generic enums for GPIO and other subsystems */
enum gpio_port { GPIO_PORT_A, GPIO_PORT_B, GPIO_PORT_C, GPIO_PORT_D };
enum gpio_function { GPIO_FUNC_0, GPIO_FUNC_1, GPIO_FUNC_2, GPIO_FUNC_3 };

/* All Functions in Binary */
void isp_printf(void);
void get_isp_clk(void);
void private_vmalloc(void);
void private_vfree(void);
void private_ktime_set(void);
void private_set_current_state(void);
void private_schedule_hrtimeout(void);
void private_schedule_work(void);
void private_do_gettimeofday(void);
void private_dma_sync_single_for_device(void);
void private_get_driver_interface(void);
void tx_isp_release_device(void);
void pop_buffer_fifo(void);
void tx_isp_vic_start(void);
void ispvic_frame_channel_qbuf(void);
void ispvic_frame_channel_clearbuf(void);
void tx_isp_vic_probe(void);
void dump_isp_vic_frd_open(void);
void isp_vic_frd_show(void);
void tx_isp_vic_activate_subdev(void);
void vic_sensor_ops_ioctl(void);
void vic_sensor_ops_sync_sensor_attr(void);
void dump_vic_reg(void);
void check_vic_error(void);
void tx_vic_enable_irq(void);
void tx_vic_disable_irq(void);
void vic_core_s_stream(void);
void vic_core_ops_init(void);
void tx_isp_vic_slake_subdev(void);
void vic_mdma_enable(void);
void isp_vic_cmd_set(void);
void vic_pipo_mdma_enable(void);
void ispvic_frame_channel_s_stream(void);
void vic_framedone_irq_function(void);
void vic_mdma_irq_function(void);
void isp_vic_interrupt_service_routine(void);
void tx_isp_subdev_pipo(void);
void vic_core_ops_ioctl(void);
void vic_core_ops_ioctl(void);
void vin_s_stream(void);
void tx_isp_vin_activate_subdev(void);
void tx_isp_vin_init(void);
void subdev_sensor_ops_set_input(void);
void tx_isp_vin_reset(void);
void tx_isp_vin_probe(void);
void video_input_cmd_open(void);
void video_input_cmd_set(void);
void video_input_cmd_show(void);
void subdev_sensor_ops_release_all_sensor(void);
void tx_isp_vin_slake_subdev(void);
void isp_i2c_new_subdev_board(void);
void subdev_sensor_ops_enum_input(void);
void subdev_sensor_ops_ioctl(void);
void tx_isp_csi_probe(void);
void dump_isp_csi_open(void);
void isp_csi_show(void);
void csi_core_ops_init(void);
void csi_sensor_ops_ioctl(void);
void csi_sensor_ops_sync_sensor_attr(void);
void tx_isp_csi_activate_subdev(void);
void csi_video_s_stream(void);
void tx_isp_csi_slake_subdev(void);
void dump_csi_reg(void);
void check_csi_error(void);
void csi_set_on_lanes(void);
void isp_core_tunning_open(void);
void isp_core_tunning_release(void);
void apical_isp_hvflip_update(void);
void apical_isp_mask_s_attr_isra_29(void);
void apical_isp_gamma_s_attr_isra_34(void);
void apical_isp_expr_s_ctrl_isra_35(void);
void apical_isp_ae_s_roi_isra_36(void);
void apical_isp_ae_zone_weight_s_attr_isra_47(void);
void apical_isp_af_hist_s_attr_isra_50(void);
void apical_isp_af_weight_s_attr_isra_51(void);
void apical_isp_core_ops_s_ctrl(void);
void apical_isp_mask_g_attr_isra_68(void);
void apical_isp_expr_g_ctrl_isra_72(void);
void apical_isp_max_again_g_ctrl_isra_73(void);
void apical_isp_max_dgain_g_ctrl_isra_74(void);
void apical_isp_ev_g_attr_isra_75(void);
void apical_isp_gamma_g_attr_isra_76(void);
void apical_isp_ae_g_roi_isra_77(void);
void apical_isp_ae_zone_g_ctrl_isra_84(void);
void apical_isp_af_zone_g_ctrl_isra_85(void);
void apical_isp_ae_zone_weight_g_attr_isra_89(void);
void apical_isp_ae_hist_origin_g_attr_isra_92(void);
void apical_isp_awb_zone_statis_g_attr_isra_94(void);
void apical_isp_af_hist_g_attr_isra_95(void);
void apical_isp_af_weight_g_attr_isra_96(void);
void tiziano_isp_ae_manual_attr_g_ctrl_isra_103(void);
void tiziano_isp_csc_g_attr_isra_108(void);
void isp_frame_done_wait(void);
void apical_isp_core_ops_g_ctrl(void);
void isp_core_tunning_unlocked_ioctl(void);
void isp_frame_done_wakeup(void);
void isp_core_tuning_event(void);
void isp_core_tuning_init(void);
void isp_core_tuning_deinit(void);
void private_math_exp2(void);
void private_clk_enable(void);
void private_clk_disable(void);
void private_clk_put(void);
void private_clk_set_rate(void);
void private_i2c_transfer(void);
void private_i2c_del_driver(void);
void private_i2c_get_clientdata(void);
void private_i2c_set_clientdata(void);
void private_i2c_add_driver(void);
void private_gpio_request(void);
void private_gpio_free(void);
void private_gpio_direction_output(void);
void private_jzgpio_set_func(void);
void private_msleep(void);
void private_capable(void);
void private_driver_get_interface(void);
void private_leading_one_position(void);
void private_log2_int_to_fixed(void);
void private_log2_fixed_to_fixed(void);
void private_leading_one_position_64(void);
void private_log2_int_to_fixed_64(void);
void private_log2_fixed_to_fixed_64(void);
void private_platform_driver_register(void);
void private_platform_driver_unregister(void);
void private_platform_set_drvdata(void);
void private_platform_get_drvdata(void);
void private_platform_device_register(void);
void private_platform_device_unregister(void);
void private_platform_get_resource(void);
void private_dev_set_drvdata(void);
void private_dev_get_drvdata(void);
void private_platform_get_irq(void);
void private_request_mem_region(void);
void private_release_mem_region(void);
void private_ioremap(void);
void private_iounmap(void);
void private_request_threaded_irq(void);
void private_enable_irq(void);
void private_disable_irq(void);
void private_free_irq(void);
void __private_spin_lock_irqsave(void);
void private_spin_unlock_irqrestore(void);
void private_spin_lock_init(void);
void private_mutex_lock(void);
void private_mutex_unlock(void);
void private_raw_mutex_init(void);
void private_clk_get(void);
void private_clk_is_enabled(void);
void private_clk_get_rate(void);
void private_i2c_get_adapter(void);
void private_i2c_put_adapter(void);
void private_i2c_register_driver(void);
void private_i2c_new_device(void);
void private_i2c_unregister_device(void);
void private_gpio_direction_input(void);
void private_gpio_set_debounce(void);
void private_jzgpio_ctrl_pull(void);
void private_sched_clock(void);
void private_try_module_get(void);
void private_request_module(void);
void private_module_put(void);
void private_init_completion(void);
void private_complete(void);
void private_wait_for_completion_interruptible(void);
void private_wait_event_interruptible(void);
void private_wake_up_all(void);
void private_wake_up(void);
void private_init_waitqueue_head(void);
void private_wait_for_completion_timeout(void);
void private_misc_register(void);
void private_misc_deregister(void);
void private_proc_create_data(void);
void private_seq_read(void);
void private_seq_lseek(void);
void private_single_release(void);
void private_single_open_size(void);
void private_jz_proc_mkdir(void);
void private_proc_remove(void);
void private_seq_printf(void);
void private_simple_strtoull(void);
void private_kthread_should_stop(void);
void private_kthread_run(void);
void private_kthread_stop(void);
void private_kmalloc(void);
void private_kfree(void);
void private_copy_from_user(void);
void private_copy_to_user(void);
void private_nlmsg_new(void);
void private_nlmsg_put(void);
void private_netlink_unicast(void);
void private_netlink_kernel_create(void);
void private_sock_release(void);
void private_filp_open(void);
void private_filp_close(void);
void private_vfs_read(void);
void private_vfs_write(void);
void private_vfs_llseek(void);
void private_get_fs(void);
void private_set_fs(void);
void private_dma_cache_sync(void);
void private_getrawmonotonic(void);
void private_get_init_net(void);
void private_get_isp_priv_mem(void);
void find_new_buffer(void);
void isp_mem_init(void);
void isp_malloc_buffer(void);
void isp_free_buffer(void);
void sub_19c80(void);
void sub_19c90(void);
void sub_19c98(void);
void sub_19ca0(void);
void sub_19ca8(void);
void sub_19cc0(void);
void sub_19cc8(void);
void sub_19cd0(void);
void sub_19cd8(void);
void sub_19ce0(void);
void sub_19ce8(void);
void sub_19cf0(void);
void sub_19cf8(void);
void sub_19d00(void);
void sub_19d08(void);
void sub_19d10(void);
void sub_19d18(void);
void sub_19d20(void);
void sub_19d28(void);
void sub_19d30(void);
void sub_19d38(void);
void sub_19d40(void);
void sub_19d48(void);
void sub_19d50(void);
void sub_19d58(void);
void sub_19d60(void);
void sub_19d68(void);
void sub_19d74(void);
void sub_19db8(void);
void sub_19dc0(void);
void sub_19dc8(void);
void sub_19dd0(void);
void sub_19dd8(void);
void sub_19de0(void);
void sub_19de8(void);
void sub_19df0(void);
void sub_19df8(void);
void sub_19e00(void);
void sub_19e08(void);
void sub_19e10(void);
void sub_19e18(void);
void sub_19e20(void);
void sub_19e28(void);
void sub_19e30(void);
void sub_19e38(void);
void sub_19e40(void);
void sub_19e48(void);
void sub_19e50(void);
void sub_19e58(void);
void sub_19e60(void);
void sub_19e68(void);
void sub_19e70(void);
void sub_19e78(void);
void sub_19e80(void);
void sub_19e88(void);
void sub_19e90(void);
void sub_19e98(void);
void sub_19ea0(void);
void sub_19ea8(void);
void private_devm_clk_get(void);
void private_clk_prepare_enable(void);
void private_clk_disable_unprepare(void);
void private_devm_clk_put(void);
void sub_19ed0(void);
void sub_19ed8(void);
void sub_19ee0(void);
void sub_19ee8(void);
void sub_19ef0(void);
void sub_19ef8(void);
void sub_19f00(void);
void sub_19f08(void);
void sub_19f10(void);
void sub_19f18(void);
void sub_19f20(void);
void sub_19f28(void);
void sub_19f30(void);
void sub_19f38(void);
void sub_19f40(void);
void sub_19f48(void);
void sub_19f54(void);
void sub_19f5c(void);
void sub_19f6c(void);
void sub_19f74(void);
void sub_19f7c(void);
void sub_19f84(void);
void sub_19f8c(void);
void sub_19f94(void);
void sub_19fa0(void);
void sub_19fa8(void);
void sub_19fb0(void);
void sub_19fb8(void);
void sub_19fc0(void);
void sub_19fd0(void);
void sub_19fdc(void);
void sub_19fe4(void);
void sub_19fec(void);
void sub_19ff4(void);
void sub_19ffc(void);
void sub_1a004(void);
void sub_1a00c(void);
void sub_1a014(void);
void sub_1a01c(void);
void isp_irq_handle(void);
void isp_irq_thread_handle(void);
void tx_isp_enable_irq(void);
void tx_isp_disable_irq(void);
void tx_isp_request_irq(void);
void tx_isp_free_irq(void);
void fs_activate_module(void);
void __enqueue_in_driver(void);
void __vb2_queue_cancel(void);
void __vb2_queue_free(void);
void dump_isp_framesource_open(void);
void isp_framesource_show(void);
void __fill_v4l2_buffer(void);
void frame_chan_event(void);
void frame_channel_open(void);
void frame_channel_vidioc_set_fmt(void);
void frame_channel_vidioc_get_fmt(void);
void check_state(void);
void __frame_channel_vb2_streamoff(void);
void fs_slake_module(void);
void frame_channel_release(void);
void frame_channel_unlocked_ioctl(void);
void tx_isp_frame_chan_deinit(void);
void tx_isp_fs_probe(void);
void sensor_alloc_analog_gain(void);
void sensor_alloc_analog_gain_short(void);
void sensor_alloc_digital_gain(void);
void sensor_alloc_integration_time(void);
void sensor_alloc_integration_time_short(void);
void sensor_set_integration_time(void);
void sensor_set_integration_time_short(void);
void sensor_set_analog_gain(void);
void sensor_set_analog_gain_short(void);
void sensor_set_digital_gain(void);
void sensor_get_normal_fps(void);
void sensor_read_black_pedestal(void);
void sensor_end_changes(void);
void sensor_get_id(void);
void sensor_set_wdr_mode(void);
void sensor_fps_control(void);
void sensor_disable_isp(void);
void sensor_get_lines_per_second(void);
void sensor_set_mode(void);
void sensor_start_changes(void);
void sensor_hw_reset_enable(void);
void sensor_hw_reset_disable(void);
void sensor_init(void);
void sensor_early_init(void);
void tx_isp_video_s_stream(void);
void tx_isp_video_link_stream(void);
void tx_isp_open(void);
void tx_isp_notify(void);
void find_subdev_link_pad(void);
void isp_subdev_release_clks(void);
void isp_subdev_init_clks(void);
void tx_isp_unregister_platforms(void);
void tx_isp_exit(void);
void subdev_video_destroy_link(void);
void tx_isp_video_link_destroy_isra_5(void);
void tx_isp_release(void);
void tx_isp_init(void);
void tx_isp_get_ae_algo_handle_isra_16(void);
void tx_isp_unlocked_ioctl(void);
void private_reset_tx_isp_module(void);
void tx_isp_reg_set(void);
void tx_isp_send_event_to_remote(void);
void tx_isp_module_init(void);
void tx_isp_module_deinit(void);
void tx_isp_subdev_init(void);
void tx_isp_subdev_deinit(void);
void tx_isp_create_graph_and_nodes(void);
void tx_isp_probe(void);
void sub_203a0(void);
void sub_203b0(void);
void sub_203b8(void);
void sub_203c0(void);
void sub_203c8(void);
void sub_203e0(void);
void sub_203e8(void);
void sub_203f0(void);
void sub_203f8(void);
void sub_20400(void);
void sub_20408(void);
void sub_20410(void);
void sub_20418(void);
void sub_20420(void);
void sub_20428(void);
void sub_20430(void);
void sub_20438(void);
void sub_20440(void);
void sub_20448(void);
void sub_20450(void);
void sub_20458(void);
void sub_20460(void);
void sub_20468(void);
void sub_20470(void);
void sub_20478(void);
void sub_20480(void);
void sub_20488(void);
void sub_20494(void);
void sub_204d8(void);
void sub_204e0(void);
void sub_204e8(void);
void sub_204f0(void);
void sub_204f8(void);
void sub_20500(void);
void sub_20508(void);
void sub_20510(void);
void sub_20518(void);
void sub_20520(void);
void sub_20528(void);
void sub_20530(void);
void sub_20538(void);
void sub_20540(void);
void sub_20548(void);
void sub_20550(void);
void sub_20558(void);
void sub_20560(void);
void sub_20568(void);
void sub_20570(void);
void sub_20578(void);
void sub_20580(void);
void sub_20588(void);
void sub_20590(void);
void sub_20598(void);
void sub_205a0(void);
void sub_205a8(void);
void sub_205b0(void);
void sub_205b8(void);
void sub_205c0(void);
void sub_205c8(void);
void sub_205d0(void);
void sub_205d8(void);
void sub_205e0(void);
void sub_205e8(void);
void sub_205f0(void);
void sub_205f8(void);
void sub_20600(void);
void sub_20608(void);
void sub_20610(void);
void sub_20618(void);
void sub_20620(void);
void sub_20628(void);
void sub_20630(void);
void sub_20638(void);
void sub_20640(void);
void sub_20648(void);
void sub_20650(void);
void sub_20658(void);
void sub_20660(void);
void sub_20668(void);
void sub_20674(void);
void sub_2067c(void);
void sub_2068c(void);
void sub_20694(void);
void sub_2069c(void);
void sub_206a4(void);
void sub_206ac(void);
void sub_206b4(void);
void sub_206c0(void);
void sub_206c8(void);
void sub_206d0(void);
void sub_206d8(void);
void sub_206e0(void);
void sub_206f0(void);
void sub_206fc(void);
void sub_20704(void);
void sub_2070c(void);
void sub_20714(void);
void sub_2071c(void);
void sub_20724(void);
void sub_2072c(void);
void sub_20734(void);
void sub_2073c(void);
void sub_20744(void);
void sub_2074c(void);
void sub_20754(void);
void sub_2075c(void);
void sub_20764(void);
void sub_2076c(void);
void sub_20774(void);
void sub_2077c(void);
void sub_20784(void);
void tisp_math_exp2(void);
void fix_point_add(void);
void fix_point_sub(void);
void fix_point_mult2(void);
void fix_point_mult3(void);
void fix_point_add_64(void);
void fix_point_sub_64(void);
void fix_point_mult2_64(void);
void fix_point_mult3_64(void);
void fix_point_div_64(void);
void fix_point_div(void);
void fix_point_add_32(void);
void fix_point_sub_32(void);
void fix_point_mult2_32(void);
void fix_point_mult3_32(void);
void fix_point_div_32(void);
void fix_point_intp(void);
void table_intp(void);
void tisp_simple_intp(void);
void tisp_log2_int_to_fixed(void);
void tisp_log2_fixed_to_fixed(void);
void tisp_log2_int_to_fixed_64(void);
void tisp_log2_fixed_to_fixed_64(void);
void netlink_rcv_msg(void);
void netlink_send_msg(void);
void tisp_netlink_event_set_cb(void);
void tisp_netlink_init(void);
void tisp_netlink_exit(void);
void isp_tunning_poll(void);
void tisp_code_tuning_release(void);
void tisp_param_operate_process(void);
void isp_tunning_read(void);
void tisp_code_tuning_open(void);
void tisp_top_param_array_get(void);
void tisp_get_ae_info(void);
void tisp_set_ae_info(void);
void tisp_get_awb_info(void);
void tisp_set_awb_info(void);
void tisp_reg_map_get(void);
void tisp_reg_map_set(void);
void tisp_dn_mode_get(void);
void tisp_dn_mode_set(void);
void tisp_blc_get_par_cfg(void);
void tisp_blc_set_par_cfg(void);
void tisp_lsc_get_par_cfg(void);
void tisp_lsc_set_par_cfg(void);
void tisp_wdr_get_par_cfg(void);
void tisp_wdr_set_par_cfg(void);
void tisp_dpc_get_par_cfg(void);
void tisp_dpc_set_par_cfg(void);
void tisp_gib_get_par_cfg(void);
void tisp_gib_set_par_cfg(void);
void tisp_rdns_get_par_cfg(void);
void tisp_rdns_set_par_cfg(void);
void tisp_adr_get_par_cfg(void);
void tisp_adr_set_par_cfg(void);
void tisp_dmsc_get_par_cfg(void);
void tisp_dmsc_set_par_cfg(void);
void tisp_ccm_get_par_cfg(void);
void tisp_ccm_set_par_cfg(void);
void tisp_gamma_get_par_cfg(void);
void tisp_gamma_set_par_cfg(void);
void tisp_defog_get_par_cfg(void);
void tisp_defog_set_par_cfg(void);
void tisp_mdns_get_par_cfg(void);
void tisp_mdns_set_par_cfg(void);
void tisp_ydns_get_par_cfg(void);
void tisp_ydns_set_par_cfg(void);
void tisp_bcsh_get_par_cfg(void);
void tisp_bcsh_set_par_cfg(void);
void tisp_clm_get_par_cfg(void);
void tisp_clm_set_par_cfg(void);
void tisp_ysp_get_par_cfg(void);
void tisp_ysp_set_par_cfg(void);
void tisp_sdns_get_par_cfg(void);
void tisp_sdns_set_par_cfg(void);
void tisp_af_get_par_cfg(void);
void tisp_af_set_par_cfg(void);
void tisp_hldc_get_par_cfg(void);
void tisp_hldc_set_par_cfg(void);
void tisp_ae_get_par_cfg(void);
void tisp_ae_set_par_cfg(void);
void tisp_awb_get_par_cfg(void);
void tisp_awb_set_par_cfg(void);
void tisp_code_tuning_ioctl(void);
void tisp_code_create_tuning_node(void);
void tisp_param_operate_init(void);
void tisp_code_destroy_tuning_node(void);
void tisp_param_operate_deinit(void);
void tisp_again_update(void);
void tisp_tgain_update(void);
void tisp_ev_update(void);
void tisp_ct_update(void);
void tisp_ae_ir_update(void);
void ip_done_interrupt_static(void);
void tisp_deinit(void);
void tisp_fw_process(void);
void tisp_channel_start(void);
void tisp_channel_stop(void);
void tisp_channel_fifo_clear(void);
void tisp_channel_attr_set(void);
void tiziano_load_parameters(void);
void tisp_init(void);
void tiziano_sync_sensor_attr(void);
void tisp_event_init(void);
void tisp_event_set_cb(void);
void tisp_event_push(void);
void tisp_event_exit(void);
void tisp_event_process(void);
void JZ_Isp_Awb_Reg2par(void);
void JZ_Isp_Awb_Awbg2reg(void);
void JZ_Isp_Get_Awb_Statistics(void);
void tisp_awb_ev_update(void);
void tiziano_awb_params_refresh(void);
void tiziano_awb_dump(void);
void system_reg_write_awb(void);
void Tiziano_awb_set_gain(void);
void Tiziano_awb_fpga(void);
void JZ_Isp_Awb(void);
void tiziano_awb_set_lum_th_freq(void);
void awb_interrupt_static(void);
void tiziano_awb_set_hardware_param(void);
void tiziano_awb_dn_params_refresh(void);
void tiziano_awb_init(void);
void tisp_g_wb_mode(void);
void tisp_awb_set_frz(void);
void tisp_awb_get_frz(void);
void tisp_s_wb_mode(void);
void tisp_awb_get_ct(void);
void tisp_awb_set_ct(void);
void tiziano_s_awb_start(void);
void tiziano_g_awb_start(void);
void tiziano_s_wb_algo(void);
void tisp_awb_get_zone(void);
void tisp_awb_set_cluster_awb_params(void);
void tisp_awb_get_cluster_awb_params(void);
void tisp_awb_set_ct_trend(void);
void tisp_awb_get_ct_trend(void);
void tisp_awb_param_array_get(void);
void tisp_awb_param_array_set(void);
void tisp_awb_algo_init(void);
void tisp_awb_algo_handle(void);
void tisp_awb_deinit(void);
void ISPAWBInterpolation1(void);
void ISPAWBInterpolation2(void);
void func_zone_ct_weight(void);
void Tiziano_Awb_Ct_Detect(void);
void subsection_map(void);
void subsection(void);
void subsection_up(void);
void subsection_light(void);
void interpolate_adr_x8_y12(void);
void Tiziano_adr_fpga(void);
void cm_control(void);
void minFun(void);
void maxFun(void);
void Log2(void);
void absFun(void);
void getVar(void);
void wdr_detail_para_rgb(void);
void Tiziano_wdr_fpga(void);
void tiziano_gamma_lut_parameter(void);
void tiziano_gamma_params_refresh(void);
void tisp_gamma_wdr_en(void);
void tiziano_gamma_dn_params_refresh(void);
void tiziano_gamma_init(void);
void tisp_gamma_param_array_get(void);
void tisp_gamma_param_array_set(void);
void system_reg_write_gib(void);
void tisp_gib_gain_interpolation(void);
void tiziano_gib_lut_parameter(void);
void tiziano_gib_params_refresh(void);
void tiziano_gib_dn_params_refresh(void);
void tiziano_gib_deir_reg(void);
void tiziano_gib_deir_interpolate(void);
void tiziano_gib_deir_ir_interpolation(void);
void tisp_gib_deir_ir_update(void);
void tiziano_gib_init(void);
void tisp_gib_param_array_get(void);
void tisp_gib_param_array_set(void);
void system_reg_write_gb(void);
void tisp_gb_blc_again_interp(void);
void tisp_gb_init_reg(void);
void tisp_gb_params_refresh(void);
void tisp_gb_dn_params_refresh(void);
void tisp_gb_init(void);
void tisp_gb_param_array_get(void);
void tisp_gb_param_array_set(void);
void tisp_lsc_wdr_en(void);
void tisp_lsc_ct_update(void);
void tisp_lsc_gain_update(void);
void tiziano_lsc_params_refresh(void);
void tiziano_lsc_dn_params_refresh(void);
void tisp_lsc_param_array_get(void);
void tisp_lsc_judge_ct_update_flag(void);
void tisp_lsc_judge_gain_update_flag(void);
void tisp_lsc_write_lut_datas(void);
void tiziano_lsc_init(void);
void tisp_lsc_param_array_set(void);
void tisp_lsc_upside_down_lut(void);
void tisp_lsc_lut_mirror_exchange(void);
void tisp_lsc_mirror_flip(void);
void tisp_dmsc_out_opt_cfg(void);
void tisp_dmsc_uu_par_cfg(void);
void tisp_dmsc_alias_par_cfg(void);
void tisp_dmsc_uu_np_cfg(void);
void tisp_dmsc_sp_d_sigma_3_np_cfg(void);
void tisp_dmsc_sp_d_w_wei_np_cfg(void);
void tisp_dmsc_sp_d_b_wei_np_cfg(void);
void tisp_dmsc_sp_ud_w_wei_np_cfg(void);
void tisp_dmsc_sp_ud_b_wei_np_cfg(void);
void tisp_dmsc_dir_par_cfg(void);
void tisp_dmsc_nor_par_cfg(void);
void tisp_dmsc_sp_d_par_cfg(void);
void tisp_dmsc_sp_ud_par_cfg(void);
void tisp_dmsc_sp_alias_par_cfg(void);
void tisp_dmsc_rgb_alias_par_cfg(void);
void tisp_dmsc_fc_par_cfg(void);
void tisp_dmsc_deir_par_cfg(void);
void tisp_dmsc_awb_gain_par_cfg(void);
void tisp_dmsc_deir_rgb_par_cfg(void);
void tisp_dmsc_d_ud_ns_par_cfg(void);
void tisp_dmsc_intp(void);
void tisp_dmsc_wdr_en(void);
void tisp_dmsc_all_reg_refresh(void);
void tisp_dmsc_intp_reg_refresh(void);
void tisp_dmsc_par_refresh(void);
void tisp_dmsc_refresh(void);
void tisp_dmsc_param_array_get(void);
void tisp_dmsc_param_array_set(void);
void tisp_dmsc_sharpness_set(void);
void tiziano_dmsc_params_refresh(void);
void tiziano_dmsc_dn_params_refresh(void);
void tiziano_dmsc_init(void);
void tisp_dmsc_sharpness_get(void);
void tiziano_ccm_lut_parameter(void);
void jz_isp_ccm_reg2par(void);
void jz_isp_ccm_para2reg(void);
void jz_isp_ccm_parameter_convert(void);
void tiziano_ct_ccm_interpolation(void);
void jz_isp_ccm(void);
void tisp_ccm_ev_update(void);
void tisp_ccm_ct_update(void);
void tiziano_ccm_params_refresh(void);
void tisp_ccm_wdr_en(void);
void tiziano_ccm_dn_params_refresh(void);
void tiziano_ccm_init(void);
void tisp_ccm_get_attr(void);
void tisp_ccm_set_attr(void);
void tisp_ccm_param_array_get(void);
void tisp_ccm_param_array_set(void);
void tiziano_bcsh_StrenCal_part_0(void);
void tiziano_bcsh_dump2(void);
void tiziano_bcsh_lut_parameter(void);
void tiziano_bcsh_reg2para(void);
void tiziano_bcsh_para2reg(void);
void tiziano_bcsh_Tccm_Comp2Orig(void);
void tiziano_ct_bcsh_interpolation(void);
void tiziano_bcsh_Tccm_RGBYUV(void);
void tiziano_bcsh_Tccm_RGB2YUV(void);
void tiziano_bcsh_Toffset_RGBYUV(void);
void tiziano_bcsh_Toffset_RGB2YUV(void);
void tiziano_bcsh_StrenCal(void);
void tiziano_bcsh_TransitParam(void);
void tiziano_bcsh_update(void);
void tisp_bcsh_ev_update(void);
void tisp_bcsh_ct_update(void);
void tisp_bcsh_wdr_en(void);
void tiziano_bcsh_dump(void);
void tiziano_bcsh_params_refresh(void);
void tiziano_bcsh_dn_params_refresh(void);
void tiziano_bcsh_init(void);
void tisp_bcsh_param_array_get(void);
void tisp_bcsh_param_array_set(void);
void tisp_bcsh_set_mjpeg_contrast(void);
void tisp_bcsh_contrast(void);
void tisp_bcsh_saturation(void);
void tisp_bcsh_brightness(void);
void tisp_bcsh_s_hue(void);
void tisp_bcsh_g_hue(void);
void tisp_bcsh_g_brightness(void);
void tisp_bcsh_g_saturation(void);
void tisp_bcsh_g_contrast(void);
void tisp_bcsh_get_attr(void);
void tisp_bcsh_set_attr(void);
void tisp_bcsh_s_rgb_coefft(void);
void tisp_bcsh_g_rgb_coefft(void);
void tisp_sharpen_intp(void);
void tisp_y_sp_sl_exp_cfg(void);
void tisp_y_sp_std_scope_cfg(void);
void tisp_y_sp_uu_cfg(void);
void tisp_y_sp_fl_thres_cfg(void);
void tisp_y_sp_v1_v2_coef_cfg(void);
void tisp_y_sp_w_b_ll_cfg(void);
void tisp_y_sp_uu_w_b_wei_cfg(void);
void tisp_y_sp_w_b_sl_cfg(void);
void tisp_y_sp_uu_fl_sl_cfg(void);
void tisp_sharpen_wdr_en(void);
void tisp_sharpen_all_reg_refresh(void);
void tisp_sharpen_intp_reg_refresh(void);
void tisp_sharpen_par_refresh(void);
void tiziano_sharpen_params_refresh(void);
void tiziano_sharpen_init(void);
void tisp_sharpen_refresh(void);
void tiziano_sharpen_dn_params_refresh(void);
void tisp_sharpen_param_array_get(void);
void tisp_sharpen_param_array_set(void);
void tisp_sdns_grad_thres_opt_cfg(void);
void tisp_sdns_h_mv_wei_opt_cfg(void);
void tisp_sdns_mv_seg_number_num_thres_cfg(void);
void tisp_sdns_g_det_val_div_cfg(void);
void tisp_sdns_r_s_mv_cfg(void);
void tisp_sdns_h_s_cfg(void);
void tisp_sdns_h_mv_cfg(void);
void tisp_sdns_dark_light_tt_opt_cfg(void);
void tisp_sdns_d_s1_thres_cfg(void);
void tisp_sdns_w_thres_cfg(void);
void tisp_sdns_hls_en_ave_filter_cfg(void);
void tisp_sdns_gaussian_y_cfg(void);
void tisp_sdns_gaussian_x_cfg(void);
void tisp_sdns_gaussian_k_cfg(void);
void tisp_sdns_h_line_cfg(void);
void tisp_sdns_sp_std_en_seg_opt_cfg(void);
void tisp_sdns_sp_uu_cfg(void);
void tisp_sdns_sp_v2_d_w_b_ll_hl_flat_cfg(void);
void tisp_sdns_sp_ud_v2_v1_coef_w_wei_opt_cfg(void);
void tisp_sdns_sp_ud_w_stren_cfg(void);
void tisp_sdns_sp_ud_w_limit_b_wei_opt_cfg(void);
void tisp_sdns_sp_ud_b_stren_cfg(void);
void tisp_sdns_sp_ud_b_limit_srd_ll_hl_flat_cfg(void);
void tisp_sdns_sp_ud_stren_shift_opt_cfg(void);
void tisp_sdns_sp_uu_np_array_cfg(void);
void tisp_sdns_sp_d_w_wei_np_array_cfg(void);
void tisp_sdns_sp_d_b_wei_np_array_cfg(void);
void tisp_sdns_sp_ud_w_wei_np_array_cfg(void);
void tisp_sdns_sp_ud_b_wei_np_array_cfg(void);
void tisp_sdns_intp(void);
void tisp_sdns_all_reg_refresh(void);
void tisp_sdns_intp_reg_refresh(void);
void tisp_sdns_par_refresh(void);
void tisp_sdns_refresh(void);
void tisp_sdns_param_array_get(void);
void tisp_sdns_param_array_set(void);
void tisp_s_sdns_ratio(void);
void tisp_sdns_wdr_en(void);
void tiziano_sdns_params_refresh(void);
void tiziano_sdns_init(void);
void tiziano_sdns_dn_params_refresh(void);
void tisp_mdns_top_func_cfg(void);
void tisp_mdns_y_3d_param_cfg(void);
void tisp_mdns_y_2d_param_cfg(void);
void tisp_mdns_c_3d_param_cfg(void);
void tisp_mdns_c_2d_param_cfg(void);
void tisp_mdns_intp(void);
void tisp_mdns_all_reg_refresh(void);
void tisp_mdns_top_func_refresh(void);
void tisp_mdns_reg_trigger(void);
void tisp_mdns_intp_reg_refresh(void);
void tisp_mdns_par_refresh(void);
void tisp_mdns_bypass(void);
void tisp_mdns_refresh(void);
void tisp_mdns_param_array_get(void);
void tisp_mdns_param_array_set(void);
void tisp_s_mdns_ratio(void);
void tisp_mdns_wdr_en(void);
void tiziano_mdns_params_refresh(void);
void tiziano_mdns_dn_params_refresh(void);
void tiziano_mdns_init(void);
void tisp_ctr_md_np_cfg(void);
void tisp_ctr_std_np_cfg(void);
void tisp_dpc_s_par_cfg(void);
void tisp_dpc_d_m1_par_cfg(void);
void tisp_dpc_d_m2_par_cfg(void);
void tisp_dpc_d_m3_par_cfg(void);
void tisp_dpc_cor_par_cfg(void);
void tisp_ctr_par_cfg(void);
void tisp_dpc_intp(void);
void tisp_dpc_wdr_en(void);
void tisp_dpc_all_reg_refresh(void);
void tisp_dpc_intp_reg_refresh(void);
void tisp_dpc_par_refresh(void);
void tisp_dpc_refresh(void);
void tisp_dpc_param_array_get(void);
void tisp_dpc_param_array_set(void);
void tisp_s_dpc_str_internal(void);
void tiziano_dpc_params_refresh(void);
void tiziano_dpc_dn_params_refresh(void);
void tiziano_dpc_init(void);
void tisp_g_dpc_str_internal(void);
void system_reg_write_clm(void);
void clm_lut2reg(void);
void tiziano_set_parameter_clm(void);
void tiziano_clm_params_refresh(void);
void tiziano_clm_dn_params_refresh(void);
void tiziano_clm_init(void);
void tisp_clm_param_array_get(void);
void tisp_clm_param_array_set(void);
void tisp_set_csc_version(void);
void tisp_set_user_csc(void);
void tisp_get_current_csc(void);
void tisp_defog_ev_update(void);
void tiziano_defog_get_data(void);
void tiziano_defog_set_reg_params(void);
void tiziano_defog_interrupt_static(void);
void tisp_defog_max_filter3(void);
void tisp_defog_img_filter5(void);
void tisp_defog_soft_process(void);
void tiziano_defog_algorithm(void);
void tisp_defog_process(void);
void tiziano_defog_params_init(void);
void tiziano_defog_params_refresh(void);
void tisp_defog_wdr_en(void);
void tiziano_defog_dn_params_refresh(void);
void defog_wei_interpcot(void);
void defog_3x3_5x5_params_init(void);
void tiziano_defog_init(void);
void tisp_defog_param_array_get(void);
void tisp_defog_param_array_set(void);
void defog_itp(void);
void tisp_g_defog_str_internal(void);
void tisp_s_defog_str_internal(void);
void tisp_adr_ev_update(void);
void tiziano_adr_get_data(void);
void tiziano_adr_algorithm(void);
void tisp_adr_process(void);
void tisp_adr_set_params(void);
void tiziano_adr_interrupt_static(void);
void tiziano_adr_5x5_param_distance(void);
void tiziano_adr_5x5_param(void);
void tiziano_adr_params_init(void);
void tiziano_adr_gamma_refresh(void);
void tisp_adr_param_array_get(void);
void tisp_adr_param_array_set(void);
void tisp_g_adr_str_internal(void);
void tisp_s_adr_str_internal(void);
void tiziano_adr_params_refresh(void);
void tiziano_adr_dn_params_refresh(void);
void tisp_adr_wdr_en(void);
void tiziano_adr_init(void);
void tisp_hldc_con_par_cfg(void);
void tisp_hldc_par_refresh(void);
void tiziano_hldc_params_refresh(void);
void tiziano_hldc_init(void);
void tisp_hldc_param_array_get(void);
void tisp_hldc_param_array_set(void);
void tisp_set_sensor_integration_time(void);
void tisp_set_sensor_integration_time_short(void);
void tisp_set_sensor_analog_gain(void);
void tisp_set_sensor_analog_gain_short(void);
void tisp_set_sensor_digital_gain_short(void);
void tisp_set_sensor_digital_gain(void);
void JZ_Isp_Ae_Reg2par(void);
void JZ_Isp_Ae_Dg2reg(void);
void printf_func0(void);
void printf_func1(void);
void tisp_ae0_get_statistics(void);
void ae0_interrupt_static(void);
void tisp_ae1_get_statistics(void);
void ae1_interrupt_static(void);
void tisp_ae1_get_hist(void);
void ae1_interrupt_hist(void);
void tisp_ae0_get_hist(void);
void ae0_interrupt_hist(void);
void tisp_ae_get_hist_custome(void);
void tisp_ae_set_hist_custome(void);
void AePweightCalculate(void);
void ae0_weight_mean2(void);
void tisp_ae_tune(void);
void tisp_ae_target(void);
void ae0_tune2(void);
void tisp_ae_g_min(void);
void tisp_ae_s_min(void);
void Tiziano_ae0_fpga(void);
void tisp_set_ae0_ag(void);
void tisp_set_ae1_ag(void);
void tisp_ae1_expt(void);
void tisp_ae_mean_update(void);
void ae1_weight_mean2(void);
void Tiziano_ae1_fpga(void);
void tisp_ae0_ctrls_update(void);
void tisp_ae1_ctrls_update(void);
void tiziano_ae_dump(void);
void tiziano_ae_params_refresh(void);
void tiziano_ae_s_max_again(void);
void tiziano_ae_s_max_isp_dgain(void);
void tisp_ae_s_at_list(void);
void tisp_ae_g_at_list(void);
void tiziano_deflicker_expt(void);
void tiziano_deflicker_expt_tune(void);
void system_reg_write_ae(void);
void tisp_ae1_process_impl(void);
void tisp_ae1_process(void);
void tiziano_ae_set_hardware_param(void);
void tiziano_ae_para_addr(void);
void tiziano_ae_init_exp_th(void);
void tisp_ae_wdr_en(void);
void tiziano_ae_init(void);
void tisp_ae_min_max_set(void);
void tiziano_ae_s_ev_start(void);
void tisp_ae_state_get(void);
void tisp_ae_manual_get(void);
void tisp_ae_manual_set(void);
void tisp_ae_get_y_zone(void);
void tisp_ae_s_comp(void);
void tiziano_ae_dn_params_refresh(void);
void tisp_ae_g_comp(void);
void tisp_ae_g_luma(void);
void tisp_ae_g_scene_luma(void);
void tisp_ae0_process_impl(void);
void tisp_ae0_process(void);
void tisp_ae_get_antiflicker_step(void);
void tisp_ae_param_array_get(void);
void tisp_ae_param_array_set(void);
void tisp_ae_trig(void);
void tisp_ae_deinit(void);
void tisp_ae_algo_init(void);
void tisp_ae_algo_handle(void);
void tisp_af_get_statistics(void);
void Tiziano_af_fpga(void);
void tisp_af_process_impl(void);
void af_interrupt_static(void);
void tiziano_af_params_refresh(void);
void tiziano_af_dump(void);
void system_reg_write_af(void);
void tiziano_af_set_hardware_param(void);
void tiziano_af_init(void);
void tisp_af_get_metric(void);
void tisp_af_get_attr(void);
void tisp_af_set_attr_refresh(void);
void tisp_af_set_attr(void);
void tiziano_af_dn_params_refresh(void);
void tisp_af_param_array_get(void);
void tisp_af_param_array_set(void);
void tisp_af_get_zone(void);
void tisp_ydns_param_cfg(void);
void tisp_ydns_intp(void);
void tisp_ydns_all_reg_refresh(void);
void tisp_ydns_intp_reg_refresh(void);
void tisp_ydns_par_refresh(void);
void tisp_ydns_gain_update(void);
void tiziano_ydns_params_refresh(void);
void tiziano_ydns_dn_params_refresh(void);
void tiziano_ydns_init(void);
void tisp_ydns_refresh(void);
void tisp_ydns_param_array_get(void);
void tisp_ydns_param_array_set(void);
void tisp_rdns_intp(void);
void tisp_rdns_awb_gain_par_cfg(void);
void tisp_rdns_opt_cfg(void);
void tisp_rdns_slope_cfg(void);
void tisp_rdns_thres_par_cfg(void);
void tisp_rdns_gray_np_par_cfg(void);
void tisp_rdns_text_np_par_cfg(void);
void tisp_rdns_lum_np_par_cfg(void);
void tisp_rdns_std_np_par_cfg(void);
void tisp_rdns_sl_par_cfg(void);
void tisp_rdns_awb_gain_updata(void);
void tisp_rdns_wdr_en(void);
void tisp_rdns_all_reg_refresh(void);
void tisp_rdns_intp_reg_refresh(void);
void tisp_rdns_par_refresh(void);
void tisp_rdns_gain_update(void);
void tiziano_rdns_params_refresh(void);
void tiziano_rdns_init(void);
void tisp_rdns_refresh(void);
void tiziano_rdns_dn_params_refresh(void);
void tisp_rdns_param_array_get(void);
void tisp_rdns_param_array_set(void);
void tiziano_wdr_fusion1_curve(void);
void tiziano_wdr_fusion1_curve_block_mean1(void);
void tisp_wdr_rx_ae0_infm(void);
void tisp_wdr_rx_ae1_infm(void);
void tisp_wdr_rx_ae0_dms(void);
void tisp_wdr_rx_ae1_dms(void);
void tisp_wdr_expTime_updata(void);
void tisp_wdr_ev_update(void);
void tisp_wdr_ev_calculate(void);
void tiziano_wdr_get_data(void);
void tiziano_wdr_interrupt_static(void);
void tiziano_wdr_algorithm(void);
void tiziano_wdr_soft_para_out(void);
void tisp_wdr_process(void);
void tiziano_wdr_5x5_param_distance(void);
void tiziano_wdr_5x5_param(void);
void tiziano_wdr_params_init(void);
void tiziano_wdr_gamma_refresh(void);
void tiziano_wdr_params_refresh(void);
void tiziano_wdr_dn_params_refresh(void);
void tiziano_wdr_init(void);
void tisp_wdr_param_array_get(void);
void tisp_wdr_param_array_set(void);
void system_yvu_or_yuv(void);
void tisp_day_or_night_s_ctrl(void);
void tisp_cust_mode_s_ctrl(void);
void tisp_cust_mode_g_ctrl(void);
void tisp_day_or_night_g_ctrl(void);
void tisp_mirror_enable(void);
void tisp_hv_flip_enable(void);
void tisp_hv_flip_get(void);
void tisp_flip_enable(void);
void tisp_set_fps(void);
void tisp_set_brightness(void);
void tisp_set_ae_comp(void);
void tisp_get_ae_comp(void);
void tisp_get_ae_luma(void);
void tisp_set_sharpness(void);
void tisp_set_saturation(void);
void tisp_set_contrast(void);
void tisp_set_bcsh_hue(void);
void tisp_get_brightness(void);
void tisp_get_sharpness(void);
void tisp_get_saturation(void);
void tisp_get_contrast(void);
void tisp_get_bcsh_hue(void);
void tisp_top_sel(void);
void tisp_top_read(void);
void tisp_g_ncuinfo(void);
void tisp_s_antiflick(void);
void tisp_s_Hilightdepress(void);
void tisp_g_Hilightdepress(void);
void tisp_s_BacklightComp(void);
void tisp_g_BacklightComp(void);
void tisp_s_Gamma(void);
void tisp_g_Gamma(void);
void tisp_s_aeroi_weight(void);
void tisp_g_aeroi_weight(void);
void tisp_s_aezone_weight(void);
void tisp_g_aezone_weight(void);
void tisp_s_af_weight(void);
void tisp_g_af_weight(void);
void tisp_g_ev_attr(void);
void tisp_g_wb_attr(void);
void tisp_s_wb_attr(void);
void tisp_g_wb_zone(void);
void tisp_g_wb_ct(void);
void tisp_s_wb_ct(void);
void tisp_s_awb_cluster(void);
void tisp_g_awb_cluster(void);
void tisp_s_awb_ct_trend(void);
void tisp_g_awb_ct_trend(void);
void tisp_g_ccm_attr(void);
void tisp_s_ccm_attr(void);
void tisp_g_ae_hist(void);
void tisp_s_ae_hist(void);
void tisp_s_ae_at_list(void);
void tisp_g_ae_at_list(void);
void tisp_s_3dns_ratio(void);
void tisp_s_2dns_ratio(void);
void tisp_s_ae_attr(void);
void tisp_g_ae_attr(void);
void tisp_g_ae_min(void);
void tisp_s_ae_min(void);
void tisp_g_ae_zone(void);
void tisp_g_af_zone(void);
void tisp_g_af_metric(void);
void tisp_g_af_attr(void);
void tisp_s_af_attr(void);
void tisp_s_wb_frz(void);
void tisp_g_wb_frz(void);
void tisp_s_module_control(void);
void tisp_g_module_control(void);
void tisp_s_autozoom_control(void);
void tisp_g_autozoom_control(void);
void tisp_s_scaler_level_control(void);
void tisp_s_fcrop_control(void);
void tisp_g_fcrop_control(void);
void tisp_s_wdr_en(void);
void tisp_s_wdr_init_en(void);
void tisp_g_wdr_en(void);
void tisp_s_max_again(void);
void tisp_s_max_isp_dgain(void);
void tisp_g_dpc_strength(void);
void tisp_s_dpc_strength(void);
void tisp_g_drc_strength(void);
void tisp_s_drc_strength(void);
void tisp_mscaler_mask_change(void);
void tisp_mscaler_mask_setreg(void);
void tisp_s_mscaler_mask_attr(void);
void tisp_g_mscaler_mask_attr(void);
void tisp_s_mscaler_hvflip_mask(void);
void tisp_s_ev_start(void);
void tisp_s_awb_start(void);
void tisp_g_awb_start(void);
void tisp_s_awb_algo(void);
void tisp_deinit_free(void);
void tisp_s_ae_it_max(void);
void tisp_g_ae_it_max(void);
void tisp_s_adr_enable(void);
void tisp_s_defog_enable(void);
void tisp_set_ae_freeze(void);
void tisp_get_antiflicker_step(void);
void tisp_set_ae_attr(void);
void tisp_get_ae_attr(void);
void tisp_get_ae_state(void);
void tisp_get_blc_attr(void);
void tisp_set_defog_strength(void);
void tisp_get_defog_strength(void);
void tisp_set_csc_attr(void);
void tisp_get_csc_attr(void);
void tisp_ae_algo_deinit(void);
void tisp_awb_algo_deinit(void);
void tisp_set_wdr_output_mode(void);
void tisp_get_wdr_output_mode(void);
void tisp_set_bcsh_fixed_contrast(void);
void tisp_set_frame_drop(void);
void tisp_get_frame_drop(void);
void tisp_s_rgb_coefft(void);
void tisp_g_rgb_coefft(void);
void tisp_lsc_hvflip(void);
void ispcore_sensor_ops_release_all_sensor(void);
void ispcore_sensor_ops_ioctl(void);
void ispcore_irq_fs_work(void);
void ispcore_link_setup(void);
void isp_pre_frame_dequeue(void);
void isp_ch1_frame_dequeue_delay(void);
void ispcore_frame_channel_dqbuf(void);
void ispcore_core_ops_ioctl(void);
void isp_fw_process(void);
void ispcore_irq_thread_handle(void);
void ispcore_frame_channel_streamoff(void);
void dump_isp_info_open(void);
void isp_core_cmd_set(void);
void ispcore_sync_sensor_attr(void);
void isp_info_show_isra_0(void);
void isp_core_debug_show(void);
void ispcore_pad_event_handle(void);
void ispcore_activate_module(void);
void dump_msca_regs(void);
void system_reg_write(void);
void system_reg_read(void);
void exception_handle(void);
void tx_isp_enable_irq(void);
void tx_isp_disable_irq(void);
void ispcore_video_s_stream(void);
void ispcore_core_ops_init(void);
void ispcore_slake_module(void);
void tx_isp_core_probe(void);
void system_irq_func_set(void);
void mbus_to_bayer_write(void);
void ispcore_interrupt_service_routine(void);
void init_module(void);
void cleanup_module(void);
void tx_isp_vic_remove(void);
void tx_isp_vin_remove(void);
void tx_isp_csi_remove(void);
void tx_isp_fs_remove(void);
void tx_isp_remove(void);
void tx_isp_core_remove(void);

/* Total functions declared: 1240 */

#endif /* FUNCTIONS_H */
